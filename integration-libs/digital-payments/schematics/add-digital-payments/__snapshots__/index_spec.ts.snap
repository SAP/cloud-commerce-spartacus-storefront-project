// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spartacus Digital-Payments schematics: ng-add Digital-Payments feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { I18nConfig, provideConfig } from \\"@spartacus/core\\";
import { DigitalPaymentsModule } from \\"@spartacus/digital-payments\\";
import { dpTranslationChunksConfig, dpTranslations } from \\"@spartacus/digital-payments/assets\\";

@NgModule({
  declarations: [],
  imports: [
    DigitalPaymentsModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: dpTranslations,
      chunks: dpTranslationChunksConfig,
    },
  })]
})
export class DigitalPaymentsFeatureModule { }
"
`;

exports[`Spartacus Digital-Payments schematics: ng-add Digital-Payments feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { I18nConfig, provideConfig } from \\"@spartacus/core\\";
import { dpTranslationChunksConfig, dpTranslations } from \\"@spartacus/digital-payments/assets\\";

@NgModule({
  declarations: [],
  imports: [
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: dpTranslations,
      chunks: dpTranslationChunksConfig,
    },
  })
  ]
})
export class DigitalPaymentsFeatureModule { }
"
`;

exports[`Spartacus Digital-Payments schematics: ng-add Digital-Payments feature general setup should add the feature using the lazy loading syntax 2`] = `
"import { NgModule } from '@angular/core';
import { CheckoutModule } from \\"@spartacus/checkout/base\\";
import { DigitalPaymentsModule } from \\"@spartacus/digital-payments\\";

@NgModule({
  declarations: [],
  imports: [CheckoutModule,
    DigitalPaymentsModule]
})
export class CheckoutWrapperModule { }
"
`;

exports[`Spartacus Digital-Payments schematics: ng-add Digital-Payments feature general setup should install the required feature dependencies 1`] = `
"import { NgModule } from '@angular/core';
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";
import { userAccountTranslationChunksConfig, userAccountTranslations } from \\"@spartacus/user/account/assets\\";
import { UserAccountRootModule, USER_ACCOUNT_FEATURE } from \\"@spartacus/user/account/root\\";
import { userProfileTranslationChunksConfig, userProfileTranslations } from \\"@spartacus/user/profile/assets\\";
import { UserProfileRootModule, USER_PROFILE_FEATURE } from \\"@spartacus/user/profile/root\\";

@NgModule({
  declarations: [],
  imports: [
    UserAccountRootModule,
    UserProfileRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [USER_ACCOUNT_FEATURE]: {
        module: () =>
          import('@spartacus/user/account').then((m) => m.UserAccountModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: userAccountTranslations,
      chunks: userAccountTranslationChunksConfig,
    },
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [USER_PROFILE_FEATURE]: {
        module: () =>
          import('@spartacus/user/profile').then((m) => m.UserProfileModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: userProfileTranslations,
      chunks: userProfileTranslationChunksConfig,
    },
  })
  ]
})
export class UserFeatureModule { }
"
`;

exports[`Spartacus Digital-Payments schematics: ng-add Digital-Payments feature general setup should install the required feature dependencies 2`] = `
"import { NgModule } from '@angular/core';
import { cartBaseTranslationChunksConfig, cartBaseTranslations } from \\"@spartacus/cart/base/assets\\";
import { ADD_TO_CART_FEATURE, CartBaseRootModule, CART_BASE_FEATURE, MINI_CART_FEATURE } from \\"@spartacus/cart/base/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";

@NgModule({
  declarations: [],
  imports: [
    CartBaseRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_BASE_FEATURE]: {
        module: () =>
          import('@spartacus/cart/base').then((m) => m.CartBaseModule),
      },
    }
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [MINI_CART_FEATURE]: {
        module: () =>
          import('@spartacus/cart/base/components/mini-cart').then((m) => m.MiniCartModule),
      },
    }
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [ADD_TO_CART_FEATURE]: {
        module: () =>
          import('@spartacus/cart/base/components/add-to-cart').then((m) => m.AddToCartModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: cartBaseTranslations,
      chunks: cartBaseTranslationChunksConfig,
    },
  })
  ]
})
export class CartBaseFeatureModule { }
"
`;

exports[`Spartacus Digital-Payments schematics: ng-add Digital-Payments feature general setup should install the required feature dependencies 3`] = `
"import { NgModule } from '@angular/core';
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";
import { orderTranslationChunksConfig, orderTranslations } from \\"@spartacus/order/assets\\";
import { OrderRootModule, ORDER_FEATURE } from \\"@spartacus/order/root\\";

@NgModule({
  declarations: [],
  imports: [
    OrderRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [ORDER_FEATURE]: {
        module: () =>
          import('@spartacus/order').then((m) => m.OrderModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: orderTranslations,
      chunks: orderTranslationChunksConfig,
    },
  })
  ]
})
export class OrderFeatureModule { }
"
`;

exports[`Spartacus Digital-Payments schematics: ng-add Digital-Payments feature general setup should install the required feature dependencies 4`] = `
"import { NgModule } from '@angular/core';
import { checkoutTranslationChunksConfig, checkoutTranslations } from \\"@spartacus/checkout/base/assets\\";
import { CheckoutRootModule, CHECKOUT_FEATURE } from \\"@spartacus/checkout/base/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@spartacus/core\\";

@NgModule({
  declarations: [],
  imports: [
    CheckoutRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CHECKOUT_FEATURE]: {
        module: () =>
          import('./checkout-wrapper.module').then((m) => m.CheckoutWrapperModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: checkoutTranslations,
      chunks: checkoutTranslationChunksConfig,
    },
  })
  ]
})
export class CheckoutFeatureModule { }
"
`;
