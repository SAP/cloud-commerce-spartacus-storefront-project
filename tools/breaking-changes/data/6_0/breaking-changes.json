[
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "AsmMainUiComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "csAgentAuthService",
            "type": "CsAgentAuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!CsAgentAuthService:class",
            "shortType": "CsAgentAuthService",
            "importPath": "@spartacus/asm/root"
          },
          {
            "name": "asmComponentService",
            "type": "AsmComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmComponentService:class",
            "shortType": "AsmComponentService",
            "importPath": "@spartacus/asm/components"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "asmService",
            "type": "AsmService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmService:class",
            "shortType": "AsmService",
            "importPath": "@spartacus/asm/core"
          },
          {
            "name": "userAccountFacade",
            "type": "UserAccountFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!UserAccountFacade:class",
            "shortType": "UserAccountFacade",
            "importPath": "@spartacus/user/account/root"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "csAgentAuthService",
            "type": "CsAgentAuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!CsAgentAuthService:class",
            "shortType": "CsAgentAuthService",
            "importPath": "@spartacus/asm/root"
          },
          {
            "name": "asmComponentService",
            "type": "AsmComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmComponentService:class",
            "shortType": "AsmComponentService",
            "importPath": "@spartacus/asm/components"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "asmService",
            "type": "AsmService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmService:class",
            "shortType": "AsmService",
            "importPath": "@spartacus/asm/core"
          },
          {
            "name": "userAccountFacade",
            "type": "UserAccountFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!UserAccountFacade:class",
            "shortType": "UserAccountFacade",
            "importPath": "@spartacus/user/account/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "asmComponentService",
        "type": "AsmComponentService"
      },
      { "kind": "Property", "name": "asmService", "type": "AsmService" },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "closeModal",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "csAgentAuthService",
        "type": "CsAgentAuthService"
      },
      {
        "kind": "Property",
        "name": "csAgentTokenLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "customer$",
        "type": "Observable<User | undefined>"
      },
      {
        "kind": "Property",
        "name": "customerSupportAgentLoggedIn$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleCustomerSessionStartRedirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hideUi",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "isCollapsed$",
        "type": "Observable<boolean> | undefined"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService | undefined"
      },
      {
        "kind": "Method",
        "name": "loginCustomerSupportAgent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ userId, password, }",
            "type": "{\n        userId: string;\n        password: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "logout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "showCustomList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "startCustomerEmulationSession",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ customerId }",
            "type": "{\n        customerId?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "startingCustomerSession",
        "type": "boolean"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "userAccountFacade",
        "type": "UserAccountFacade"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "csAgentAuthService",
              "type": "CsAgentAuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!CsAgentAuthService:class",
              "shortType": "CsAgentAuthService",
              "importPath": "@spartacus/asm/root"
            },
            {
              "name": "asmComponentService",
              "type": "AsmComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmComponentService:class",
              "shortType": "AsmComponentService",
              "importPath": "@spartacus/asm/components"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmService",
              "type": "AsmService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmService:class",
              "shortType": "AsmService",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "userAccountFacade",
              "type": "UserAccountFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!UserAccountFacade:class",
              "shortType": "UserAccountFacade",
              "importPath": "@spartacus/user/account/root"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "csAgentAuthService",
              "type": "CsAgentAuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!CsAgentAuthService:class",
              "shortType": "CsAgentAuthService",
              "importPath": "@spartacus/asm/root"
            },
            {
              "name": "asmComponentService",
              "type": "AsmComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmComponentService:class",
              "shortType": "AsmComponentService",
              "importPath": "@spartacus/asm/components"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmService",
              "type": "AsmService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmService:class",
              "shortType": "AsmService",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "userAccountFacade",
              "type": "UserAccountFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!UserAccountFacade:class",
              "shortType": "UserAccountFacade",
              "importPath": "@spartacus/user/account/root"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "topLevelApiElementName": "AsmMainUiComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/components"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "launchDialogService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "launchDialogService",
          "type": "LaunchDialogService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "launchDialogService",
          "type": "LaunchDialogService"
        },
        "topLevelApiElementName": "AsmMainUiComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/components",
      "kind": "Class",
      "name": "AsmMainUiComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "csAgentAuthService",
              "type": "CsAgentAuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!CsAgentAuthService:class",
              "shortType": "CsAgentAuthService",
              "importPath": "@spartacus/asm/root"
            },
            {
              "name": "asmComponentService",
              "type": "AsmComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmComponentService:class",
              "shortType": "AsmComponentService",
              "importPath": "@spartacus/asm/components"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmService",
              "type": "AsmService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmService:class",
              "shortType": "AsmService",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "userAccountFacade",
              "type": "UserAccountFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!UserAccountFacade:class",
              "shortType": "UserAccountFacade",
              "importPath": "@spartacus/user/account/root"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "asmComponentService",
          "type": "AsmComponentService"
        },
        { "kind": "Property", "name": "asmService", "type": "AsmService" },
        { "kind": "Property", "name": "authService", "type": "AuthService" },
        {
          "kind": "Method",
          "name": "closeModal",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "csAgentAuthService",
          "type": "CsAgentAuthService"
        },
        {
          "kind": "Property",
          "name": "csAgentTokenLoading$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "customer$",
          "type": "Observable<User | undefined>"
        },
        {
          "kind": "Property",
          "name": "customerSupportAgentLoggedIn$",
          "type": "Observable<boolean>"
        },
        { "kind": "Property", "name": "disabled", "type": "boolean" },
        { "kind": "Property", "name": "element", "type": "ElementRef" },
        {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        {
          "kind": "Method",
          "name": "handleCustomerSessionStartRedirection",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "hideUi",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Property",
          "name": "isCollapsed$",
          "type": "Observable<boolean> | undefined"
        },
        {
          "kind": "Property",
          "name": "launchDialogService",
          "type": "LaunchDialogService"
        },
        {
          "kind": "Method",
          "name": "loginCustomerSupportAgent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "{ userId, password, }",
              "type": "{\n        userId: string;\n        password: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "logout",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "routingService",
          "type": "RoutingService"
        },
        {
          "kind": "Method",
          "name": "showCustomList",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "startCustomerEmulationSession",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "{ customerId }",
              "type": "{\n        customerId?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "startingCustomerSession",
          "type": "boolean"
        },
        { "kind": "Property", "name": "subscription", "type": "Subscription" },
        {
          "kind": "Property",
          "name": "userAccountFacade",
          "type": "UserAccountFacade"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "CustomerListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "asmService",
            "type": "AsmService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmService:class",
            "shortType": "AsmService",
            "importPath": "@spartacus/asm/core"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "asmConfig",
            "type": "AsmConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
            "shortType": "AsmConfig",
            "importPath": "@spartacus/asm/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "asmCustomerListFacade",
            "type": "AsmCustomerListFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmCustomerListFacade:class",
            "shortType": "AsmCustomerListFacade",
            "importPath": "@spartacus/asm/root"
          }
        ]
      },
      { "kind": "Property", "name": "asmConfig", "type": "AsmConfig" },
      {
        "kind": "Property",
        "name": "asmCustomerListFacade",
        "type": "AsmCustomerListFacade"
      },
      { "kind": "Property", "name": "asmService", "type": "AsmService" },
      { "kind": "Property", "name": "BREAKPOINT", "type": "typeof BREAKPOINT" },
      {
        "kind": "Property",
        "name": "breakpoint$",
        "type": "Observable<BREAKPOINT>"
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "closeModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "currentPage", "type": "number" },
      {
        "kind": "Property",
        "name": "customerListConfig",
        "type": "Required<AsmConfig>['asm']['customerList']"
      },
      {
        "kind": "Property",
        "name": "customerListsPage$",
        "type": "Observable<CustomerListsPage | undefined>"
      },
      {
        "kind": "Property",
        "name": "customerSearchError$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "customerSearchLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "customerSearchPage$",
        "type": "Observable<CustomerSearchPage | undefined>"
      },
      { "kind": "Property", "name": "DEFAULT_PAGE_SIZE", "type": "number" },
      {
        "kind": "Method",
        "name": "fetchCustomers",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Method",
        "name": "getBadgeText",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customerEntry",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getGroupName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customerListsPage",
            "type": "CustomerListsPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!CustomerListsPage:interface",
            "shortType": "CustomerListsPage",
            "importPath": "@spartacus/asm/root"
          },
          {
            "name": "id",
            "type": "string | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byNameAsc: string;\n        byNameDesc: string;\n        byOrderDateAsc: string;\n        byOrderDateDesc: string;\n        byDateAsc: string;\n        byDateDesc: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToNextPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "goToPreviousPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      { "kind": "Property", "name": "listsEmpty", "type": "boolean" },
      { "kind": "Property", "name": "listsError", "type": "boolean" },
      { "kind": "Property", "name": "loaded", "type": "boolean" },
      { "kind": "Property", "name": "maxPage", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeCustomerGroup",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "pageSize", "type": "number" },
      { "kind": "Property", "name": "selectedCustomer", "type": "User" },
      {
        "kind": "Property",
        "name": "selectedUserGroupId",
        "type": "string | undefined"
      },
      { "kind": "Property", "name": "sortCode", "type": "string | undefined" },
      { "kind": "Property", "name": "sorts", "type": "SortModel[] | null" },
      {
        "kind": "Method",
        "name": "startColumnAction",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customerEntry",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          },
          {
            "name": "action",
            "type": "CustomerListColumnActionType",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!CustomerListColumnActionType:enum",
            "shortType": "CustomerListColumnActionType",
            "importPath": "@spartacus/asm/root"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "teardown", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "asmService",
              "type": "AsmService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmService:class",
              "shortType": "AsmService",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "asmConfig",
              "type": "AsmConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
              "shortType": "AsmConfig",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmCustomerListFacade",
              "type": "AsmCustomerListFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmCustomerListFacade:class",
              "shortType": "AsmCustomerListFacade",
              "importPath": "@spartacus/asm/root"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "asmConfig",
              "type": "AsmConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
              "shortType": "AsmConfig",
              "importPath": "@spartacus/asm/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmCustomerListFacade",
              "type": "AsmCustomerListFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmCustomerListFacade:class",
              "shortType": "AsmCustomerListFacade",
              "importPath": "@spartacus/asm/root"
            }
          ]
        },
        "topLevelApiElementName": "CustomerListComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "asmService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "asmService",
          "type": "AsmService"
        },
        "topLevelApiElementName": "CustomerListComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/components",
      "kind": "Class",
      "name": "CustomerListComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "asmConfig",
              "type": "AsmConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
              "shortType": "AsmConfig",
              "importPath": "@spartacus/asm/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmCustomerListFacade",
              "type": "AsmCustomerListFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmCustomerListFacade:class",
              "shortType": "AsmCustomerListFacade",
              "importPath": "@spartacus/asm/root"
            }
          ]
        },
        { "kind": "Property", "name": "asmConfig", "type": "AsmConfig" },
        {
          "kind": "Property",
          "name": "asmCustomerListFacade",
          "type": "AsmCustomerListFacade"
        },
        {
          "kind": "Property",
          "name": "BREAKPOINT",
          "type": "typeof BREAKPOINT"
        },
        {
          "kind": "Property",
          "name": "breakpoint$",
          "type": "Observable<BREAKPOINT>"
        },
        {
          "kind": "Property",
          "name": "breakpointService",
          "type": "BreakpointService"
        },
        {
          "kind": "Method",
          "name": "changeSortCode",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "sortCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "closeModal",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "reason",
              "type": "any",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "currentPage", "type": "number" },
        {
          "kind": "Property",
          "name": "customerListConfig",
          "type": "Required<AsmConfig>['asm']['customerList']"
        },
        {
          "kind": "Property",
          "name": "customerListsPage$",
          "type": "Observable<CustomerListsPage | undefined>"
        },
        {
          "kind": "Property",
          "name": "customerSearchError$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "customerSearchLoading$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "customerSearchPage$",
          "type": "Observable<CustomerSearchPage | undefined>"
        },
        { "kind": "Property", "name": "DEFAULT_PAGE_SIZE", "type": "number" },
        {
          "kind": "Method",
          "name": "fetchCustomers",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
        {
          "kind": "Method",
          "name": "getBadgeText",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "customerEntry",
              "type": "User",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!User:interface",
              "shortType": "User",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getGroupName",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "customerListsPage",
              "type": "CustomerListsPage",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!CustomerListsPage:interface",
              "shortType": "CustomerListsPage",
              "importPath": "@spartacus/asm/root"
            },
            {
              "name": "id",
              "type": "string | undefined",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getSortLabels",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<{\n        byNameAsc: string;\n        byNameDesc: string;\n        byOrderDateAsc: string;\n        byOrderDateDesc: string;\n        byDateAsc: string;\n        byDateDesc: string;\n    }>"
        },
        {
          "kind": "Method",
          "name": "goToNextPage",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "goToPreviousPage",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Property",
          "name": "launchDialogService",
          "type": "LaunchDialogService"
        },
        { "kind": "Property", "name": "listsEmpty", "type": "boolean" },
        { "kind": "Property", "name": "listsError", "type": "boolean" },
        { "kind": "Property", "name": "loaded", "type": "boolean" },
        { "kind": "Property", "name": "maxPage", "type": "number" },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onChangeCustomerGroup",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "pageSize", "type": "number" },
        { "kind": "Property", "name": "selectedCustomer", "type": "User" },
        {
          "kind": "Property",
          "name": "selectedUserGroupId",
          "type": "string | undefined"
        },
        {
          "kind": "Property",
          "name": "sortCode",
          "type": "string | undefined"
        },
        { "kind": "Property", "name": "sorts", "type": "SortModel[] | null" },
        {
          "kind": "Method",
          "name": "startColumnAction",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "customerEntry",
              "type": "User",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!User:interface",
              "shortType": "User",
              "importPath": "@spartacus/core"
            },
            {
              "name": "action",
              "type": "CustomerListColumnActionType",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!CustomerListColumnActionType:enum",
              "shortType": "CustomerListColumnActionType",
              "importPath": "@spartacus/asm/root"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "teardown", "type": "Subscription" },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "CustomerSelectionComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fb",
            "type": "UntypedFormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
            "shortType": "UntypedFormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "asmService",
            "type": "AsmService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmService:class",
            "shortType": "AsmService",
            "importPath": "@spartacus/asm/core"
          },
          {
            "name": "config",
            "type": "AsmConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
            "shortType": "AsmConfig",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      { "kind": "Property", "name": "asmService", "type": "AsmService" },
      {
        "kind": "Method",
        "name": "closeResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "AsmConfig" },
      {
        "kind": "Property",
        "name": "customerSelectionForm",
        "type": "UntypedFormGroup"
      },
      { "kind": "Property", "name": "fb", "type": "UntypedFormBuilder" },
      {
        "kind": "Method",
        "name": "handleSearchTerm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "searchTermValue",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onDocumentClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "resultList", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "searchResults",
        "type": "Observable<CustomerSearchPage>"
      },
      {
        "kind": "Property",
        "name": "searchResultsLoading$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "searchTerm", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "selectCustomerFromList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customer",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedCustomer",
        "type": "User | undefined"
      },
      {
        "kind": "Property",
        "name": "submitEvent",
        "type": "EventEmitter<{\n        customerId?: string | undefined;\n    }>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "asmService",
              "type": "AsmService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmService:class",
              "shortType": "AsmService",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "config",
              "type": "AsmConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
              "shortType": "AsmConfig",
              "importPath": "@spartacus/asm/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "asmService",
              "type": "AsmService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmService:class",
              "shortType": "AsmService",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "config",
              "type": "AsmConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
              "shortType": "AsmConfig",
              "importPath": "@spartacus/asm/root"
            },
            {
              "name": "directionService",
              "type": "DirectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!DirectionService:class",
              "shortType": "DirectionService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "topLevelApiElementName": "CustomerSelectionComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/components"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "closeResults",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "closeResults",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "new": {
          "kind": "Method",
          "name": "closeResults",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        "topLevelApiElementName": "CustomerSelectionComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/components"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "onDocumentClick",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "onDocumentClick",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "Event",
              "isOptional": false,
              "canonicalReference": "!Event:interface",
              "shortType": "Event",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        "new": {
          "kind": "Method",
          "name": "onDocumentClick",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        "topLevelApiElementName": "CustomerSelectionComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/components"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "selectCustomerFromList",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "selectCustomerFromList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "customer",
              "type": "User",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!User:interface",
              "shortType": "User",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        "new": {
          "kind": "Method",
          "name": "selectCustomerFromList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            },
            {
              "name": "customer",
              "type": "User",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!User:interface",
              "shortType": "User",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        "topLevelApiElementName": "CustomerSelectionComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/components",
      "kind": "Class",
      "name": "CustomerSelectionComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "asmService",
              "type": "AsmService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmService:class",
              "shortType": "AsmService",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "config",
              "type": "AsmConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
              "shortType": "AsmConfig",
              "importPath": "@spartacus/asm/root"
            },
            {
              "name": "directionService",
              "type": "DirectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!DirectionService:class",
              "shortType": "DirectionService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "activeFocusedButtonIndex",
          "type": "number"
        },
        { "kind": "Property", "name": "asmService", "type": "AsmService" },
        {
          "kind": "Method",
          "name": "closeResults",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "config", "type": "AsmConfig" },
        {
          "kind": "Property",
          "name": "customerSelectionForm",
          "type": "UntypedFormGroup"
        },
        {
          "kind": "Property",
          "name": "directionService",
          "type": "DirectionService"
        },
        { "kind": "Property", "name": "fb", "type": "UntypedFormBuilder" },
        {
          "kind": "Method",
          "name": "focusFirstItem",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "focusInputText",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "isOptional": false,
              "canonicalReference": "!KeyboardEvent:interface",
              "shortType": "KeyboardEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "focusNextChild",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "focusPreviousChild",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "handleSearchTerm",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "searchTermValue",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "isBackNavigation",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "isOptional": false,
              "canonicalReference": "!KeyboardEvent:interface",
              "shortType": "KeyboardEvent",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isForwardsNavigation",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "isOptional": false,
              "canonicalReference": "!KeyboardEvent:interface",
              "shortType": "KeyboardEvent",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isLTRDirection",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isRTLDirection",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onDocumentClick",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSubmit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "resultList", "type": "ElementRef" },
        {
          "kind": "Property",
          "name": "searchResultItems",
          "type": "QueryList<ElementRef<HTMLElement>>"
        },
        {
          "kind": "Property",
          "name": "searchResults",
          "type": "Observable<CustomerSearchPage>"
        },
        {
          "kind": "Property",
          "name": "searchResultsLoading$",
          "type": "Observable<boolean>"
        },
        { "kind": "Property", "name": "searchTerm", "type": "ElementRef" },
        {
          "kind": "Method",
          "name": "selectCustomerFromList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            },
            {
              "name": "customer",
              "type": "User",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_components!User:interface",
              "shortType": "User",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "selectedCustomer",
          "type": "User | undefined"
        },
        {
          "kind": "Method",
          "name": "setSelectionEnd",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "submitEvent",
          "type": "EventEmitter<{\n        customerId?: string | undefined;\n    }>"
        },
        { "kind": "Property", "name": "subscription", "type": "Subscription" },
        {
          "kind": "Method",
          "name": "updateItemIndex",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "selectedIndex",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmConfig",
    "members": [
      {
        "name": "constructor",
        "kind": "Constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ],
    "breakingChanges": [
      {
        "change": "CLASS_MOVED",
        "changeType": "MOVED",
        "changeKind": "Class",
        "changeLabel": "moved",
        "changeElementName": "AsmConfig",
        "changeElementCategory": "TOP_LEVEL_API",
        "topLevelApiElementName": "AsmConfig",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/root",
      "kind": "Class",
      "name": "AsmConfig",
      "members": [
        {
          "kind": "Property",
          "name": "asm",
          "type": "{\n        agentSessionTimer?: {\n            startingDelayInSeconds?: number;\n        };\n        customerSearch?: {\n            maxResults?: number;\n        };\n        customerList?: {\n            pageSize?: number;\n            showAvatar?: boolean;\n            columns?: {\n                headerLocalizationKey: string;\n                icon?: {\n                    symbol?: ICON_TYPE;\n                    captionLocalizationKey?: string;\n                };\n                renderer?: (customer: User) => string;\n                actionType?: CustomerListColumnActionType;\n            }[];\n        };\n        userIdHttpHeader?: {\n            enable?: boolean;\n        };\n    }"
        },
        {
          "name": "constructor",
          "kind": "Constructor",
          "overloadIndex": 1,
          "parameters": []
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmCustomerListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "queryService",
            "type": "QueryService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!QueryService:class",
            "shortType": "QueryService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "asmConnector",
            "type": "AsmConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!AsmConnector:class",
            "shortType": "AsmConnector",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      { "kind": "Property", "name": "asmConnector", "type": "AsmConnector" },
      {
        "kind": "Property",
        "name": "customerListQuery$",
        "type": "Query<CustomerListsPage>"
      },
      {
        "kind": "Method",
        "name": "getCustomerLists",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CustomerListsPage | undefined>"
      },
      {
        "kind": "Method",
        "name": "getCustomerListsState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<QueryState<CustomerListsPage>>"
      },
      { "kind": "Property", "name": "queryService", "type": "QueryService" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "queryService",
              "type": "QueryService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!QueryService:class",
              "shortType": "QueryService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmConnector",
              "type": "AsmConnector",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!AsmConnector:class",
              "shortType": "AsmConnector",
              "importPath": "@spartacus/asm/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "queryService",
              "type": "QueryService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!QueryService:class",
              "shortType": "QueryService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmConnector",
              "type": "AsmConnector",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!AsmConnector:class",
              "shortType": "AsmConnector",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "store",
              "type": "Store<StateWithAsm>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            }
          ]
        },
        "topLevelApiElementName": "AsmCustomerListService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/core",
      "kind": "Class",
      "name": "AsmCustomerListService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "queryService",
              "type": "QueryService",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!QueryService:class",
              "shortType": "QueryService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "asmConnector",
              "type": "AsmConnector",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!AsmConnector:class",
              "shortType": "AsmConnector",
              "importPath": "@spartacus/asm/core"
            },
            {
              "name": "store",
              "type": "Store<StateWithAsm>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            }
          ]
        },
        { "kind": "Property", "name": "asmConnector", "type": "AsmConnector" },
        {
          "kind": "Method",
          "name": "customerListCustomersSearch",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "options",
              "type": "CustomerSearchOptions",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
              "shortType": "CustomerSearchOptions",
              "importPath": "@spartacus/asm/root"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "customerListCustomersSearchReset",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "customerListQuery$",
          "type": "Query<CustomerListsPage>"
        },
        {
          "kind": "Method",
          "name": "getCustomerListCustomersSearchResults",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<CustomerSearchPage>"
        },
        {
          "kind": "Method",
          "name": "getCustomerListCustomersSearchResultsError",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "getCustomerListCustomersSearchResultsLoading",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "getCustomerLists",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<CustomerListsPage | undefined>"
        },
        {
          "kind": "Method",
          "name": "getCustomerListsState",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<QueryState<CustomerListsPage>>"
        },
        { "kind": "Property", "name": "queryService", "type": "QueryService" },
        { "kind": "Property", "name": "store", "type": "Store<StateWithAsm>" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithAsm>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "customerListCustomersSearch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "CustomerSearchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
            "shortType": "CustomerSearchOptions",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "customerListCustomersSearchReset",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "customerSearch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "CustomerSearchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
            "shortType": "CustomerSearchOptions",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "customerSearchReset",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAsmUiState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AsmUi>"
      },
      {
        "kind": "Method",
        "name": "getCustomerListCustomersSearchResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CustomerSearchPage>"
      },
      {
        "kind": "Method",
        "name": "getCustomerListCustomersSearchResultsError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCustomerListCustomersSearchResultsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCustomerSearchResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CustomerSearchPage>"
      },
      {
        "kind": "Method",
        "name": "getCustomerSearchResultsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithAsm>" },
      {
        "kind": "Method",
        "name": "updateAsmUiState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "asmUi",
            "type": "AsmUi",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!AsmUi:interface",
            "shortType": "AsmUi",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "customerListCustomersSearch",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "customerListCustomersSearch",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "options",
              "type": "CustomerSearchOptions",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
              "shortType": "CustomerSearchOptions",
              "importPath": "@spartacus/asm/core"
            }
          ],
          "returnType": "void"
        },
        "topLevelApiElementName": "AsmService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/core"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "customerListCustomersSearchReset",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "customerListCustomersSearchReset",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "topLevelApiElementName": "AsmService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/core"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCustomerListCustomersSearchResults",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "getCustomerListCustomersSearchResults",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<CustomerSearchPage>"
        },
        "topLevelApiElementName": "AsmService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/core"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCustomerListCustomersSearchResultsError",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "getCustomerListCustomersSearchResultsError",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "topLevelApiElementName": "AsmService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/core"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getCustomerListCustomersSearchResultsLoading",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "getCustomerListCustomersSearchResultsLoading",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "topLevelApiElementName": "AsmService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/asm/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/core",
      "kind": "Class",
      "name": "AsmService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "store",
              "type": "Store<StateWithAsm>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "customerSearch",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "options",
              "type": "CustomerSearchOptions",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
              "shortType": "CustomerSearchOptions",
              "importPath": "@spartacus/asm/root"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "customerSearchReset",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "getAsmUiState",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<AsmUi>"
        },
        {
          "kind": "Method",
          "name": "getCustomerSearchResults",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<CustomerSearchPage>"
        },
        {
          "kind": "Method",
          "name": "getCustomerSearchResultsLoading",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        { "kind": "Property", "name": "store", "type": "Store<StateWithAsm>" },
        {
          "kind": "Method",
          "name": "updateAsmUiState",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "asmUi",
              "type": "AsmUi",
              "isOptional": false,
              "canonicalReference": "@spartacus/asm_core!AsmUi:interface",
              "shortType": "AsmUi",
              "importPath": "@spartacus/asm/root"
            }
          ],
          "returnType": "void"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "AsmUi",
    "members": [
      { "kind": "PropertySignature", "name": "collapsed", "type": "boolean" }
    ],
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "AsmUi",
        "changeElementCategory": "TOP_LEVEL_API",
        "topLevelApiElementName": "AsmUi",
        "topLevelApiElementKind": "Interface",
        "entryPoint": "@spartacus/asm/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/root",
      "kind": "Interface",
      "name": "AsmUi",
      "members": [
        { "kind": "PropertySignature", "name": "collapsed", "type": "boolean" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "CustomerSearchOptions",
    "members": [
      { "kind": "PropertySignature", "name": "currentPage", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "customerListId",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "pageSize", "type": "number" },
      { "kind": "PropertySignature", "name": "query", "type": "string" },
      { "kind": "PropertySignature", "name": "sort", "type": "string" }
    ],
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CustomerSearchOptions",
        "changeElementCategory": "TOP_LEVEL_API",
        "topLevelApiElementName": "CustomerSearchOptions",
        "topLevelApiElementKind": "Interface",
        "entryPoint": "@spartacus/asm/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/root",
      "kind": "Interface",
      "name": "CustomerSearchOptions",
      "members": [
        {
          "kind": "PropertySignature",
          "name": "currentPage",
          "type": "number"
        },
        {
          "kind": "PropertySignature",
          "name": "customerListId",
          "type": "string"
        },
        { "kind": "PropertySignature", "name": "pageSize", "type": "number" },
        { "kind": "PropertySignature", "name": "query", "type": "string" },
        { "kind": "PropertySignature", "name": "sort", "type": "string" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "CustomerSearchPage",
    "members": [
      { "kind": "PropertySignature", "name": "entries", "type": "User[]" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ],
    "breakingChanges": [
      {
        "change": "INTERFACE_MOVED",
        "changeType": "MOVED",
        "changeKind": "Interface",
        "changeLabel": "moved",
        "changeElementName": "CustomerSearchPage",
        "changeElementCategory": "TOP_LEVEL_API",
        "topLevelApiElementName": "CustomerSearchPage",
        "topLevelApiElementKind": "Interface",
        "entryPoint": "@spartacus/asm/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/asm/root",
      "kind": "Interface",
      "name": "CustomerSearchPage",
      "members": [
        { "kind": "PropertySignature", "name": "entries", "type": "User[]" },
        {
          "kind": "PropertySignature",
          "name": "pagination",
          "type": "PaginationModel"
        },
        { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cart/base/core",
    "kind": "Class",
    "name": "CartAddEntry",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "topLevelApiElementName": "CartAddEntry",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n    }"
        },
        "new": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n    }"
        },
        "topLevelApiElementName": "CartAddEntry",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cart/base/core",
      "kind": "Class",
      "name": "CartAddEntry",
      "namespace": "CartActions",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n    }"
        },
        { "kind": "Property", "name": "type", "type": "" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cart/base/core",
    "kind": "Class",
    "name": "CartAddEntryFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        error: any;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "topLevelApiElementName": "CartAddEntryFail",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        error: any;\n    }"
        },
        "new": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n    }"
        },
        "topLevelApiElementName": "CartAddEntryFail",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cart/base/core",
      "kind": "Class",
      "name": "CartAddEntryFail",
      "namespace": "CartActions",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n    }"
        },
        { "kind": "Property", "name": "type", "type": "" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cart/base/core",
    "kind": "Class",
    "name": "CartAddEntrySuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "topLevelApiElementName": "CartAddEntrySuccess",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }"
        },
        "new": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }"
        },
        "topLevelApiElementName": "CartAddEntrySuccess",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cart/base/core",
      "kind": "Class",
      "name": "CartAddEntrySuccess",
      "namespace": "CartActions",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        pickupStore?: string;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }"
        },
        { "kind": "Property", "name": "type", "type": "" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cart/base/core",
    "kind": "Class",
    "name": "CartUpdateEntry",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity: number;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "topLevelApiElementName": "CartUpdateEntry",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity: number;\n    }"
        },
        "new": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }"
        },
        "topLevelApiElementName": "CartUpdateEntry",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cart/base/core",
      "kind": "Class",
      "name": "CartUpdateEntry",
      "namespace": "CartActions",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }"
        },
        { "kind": "Property", "name": "type", "type": "" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cart/base/core",
    "kind": "Class",
    "name": "CartUpdateEntryFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "topLevelApiElementName": "CartUpdateEntryFail",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }"
        },
        "new": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }"
        },
        "topLevelApiElementName": "CartUpdateEntryFail",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cart/base/core",
      "kind": "Class",
      "name": "CartUpdateEntryFail",
      "namespace": "CartActions",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }"
        },
        { "kind": "Property", "name": "type", "type": "" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cart/base/core",
    "kind": "Class",
    "name": "CartUpdateEntrySuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "topLevelApiElementName": "CartUpdateEntrySuccess",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }"
        },
        "new": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }"
        },
        "topLevelApiElementName": "CartUpdateEntrySuccess",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/base/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cart/base/core",
      "kind": "Class",
      "name": "CartUpdateEntrySuccess",
      "namespace": "CartActions",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n        pickupStore?: string;\n        pickupToDelivery?: boolean;\n    }"
        },
        { "kind": "Property", "name": "type", "type": "" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          },
          {
            "name": "productConnector",
            "type": "ProductConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!ProductConnector:class",
            "shortType": "ProductConnector",
            "importPath": "@spartacus/core"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/cart_quick-order_components!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productsData",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/cart/base/root"
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "handleErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common"
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ProductImportInfo"
      },
      {
        "kind": "Method",
        "name": "handleResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productData",
            "type": "ProductData",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/cart/base/root"
          }
        ],
        "returnType": "ProductImportInfo"
      },
      {
        "kind": "Property",
        "name": "productConnector",
        "type": "ProductConnector"
      },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            },
            {
              "name": "productConnector",
              "type": "ProductConnector",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!ProductConnector:class",
              "shortType": "ProductConnector",
              "importPath": "@spartacus/core"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/cart_quick-order_components!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            },
            {
              "name": "productConnector",
              "type": "ProductConnector",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!ProductConnector:class",
              "shortType": "ProductConnector",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "QuickOrderOrderEntriesContext",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/quick-order/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "QuickOrderOrderEntriesContext",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cart/quick-order/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cart/quick-order/components",
      "kind": "Class",
      "name": "QuickOrderOrderEntriesContext",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quickOrderService",
              "type": "QuickOrderFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
              "shortType": "QuickOrderFacade",
              "importPath": "@spartacus/cart/quick-order/root"
            },
            {
              "name": "productConnector",
              "type": "ProductConnector",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!ProductConnector:class",
              "shortType": "ProductConnector",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "addEntries",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "productsData",
              "type": "ProductData[]",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!ProductData:type",
              "shortType": "ProductData",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "returnType": "Observable<ProductImportInfo>"
        },
        {
          "kind": "Method",
          "name": "getEntries",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<OrderEntry[]>"
        },
        {
          "kind": "Method",
          "name": "handleErrors",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "response",
              "type": "HttpErrorResponse",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpErrorResponse:class",
              "shortType": "HttpErrorResponse",
              "importPath": "@angular/common"
            },
            {
              "name": "productCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "ProductImportInfo"
        },
        {
          "kind": "Method",
          "name": "handleResults",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "product",
              "type": "Product",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!Product:interface",
              "shortType": "Product",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productData",
              "type": "ProductData",
              "isOptional": false,
              "canonicalReference": "@spartacus/cart_quick-order_components!ProductData:type",
              "shortType": "ProductData",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "returnType": "ProductImportInfo"
        },
        {
          "kind": "Property",
          "name": "productConnector",
          "type": "ProductConnector"
        },
        {
          "kind": "Property",
          "name": "quickOrderService",
          "type": "QuickOrderFacade"
        },
        { "kind": "Property", "name": "type", "type": "" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cdc/user-profile",
    "kind": "Class",
    "name": "CDCRegisterComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userRegisterFacade",
            "type": "UserRegisterFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_user-profile!UserRegisterFacade:class",
            "shortType": "UserRegisterFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "command",
            "type": "CommandService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_user-profile!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "store",
            "type": "Store",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "cdcJSService",
            "type": "CdcJsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_user-profile!CdcJsService:class",
            "shortType": "CdcJsService",
            "importPath": "@spartacus/cdc/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_user-profile!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_user-profile!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_user-profile!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      { "kind": "Property", "name": "cdcJSService", "type": "CdcJsService" },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "isLoggedIn$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "loadUserTokenFailed$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "postRegisterMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "user",
            "type": "UserSignUp",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_user-profile!UserSignUp:interface",
            "shortType": "UserSignUp",
            "importPath": "@spartacus/user/profile/root"
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Property",
        "name": "registerCommand",
        "type": "Command<{\n        user: UserSignUp;\n    }, User>"
      },
      { "kind": "Property", "name": "store", "type": "Store" },
      {
        "kind": "Property",
        "name": "userRegisterFacade",
        "type": "UserRegisterFacade"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userRegisterFacade",
              "type": "UserRegisterFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!UserRegisterFacade:class",
              "shortType": "UserRegisterFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "command",
              "type": "CommandService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "store",
              "type": "Store",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "cdcJSService",
              "type": "CdcJsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!CdcJsService:class",
              "shortType": "CdcJsService",
              "importPath": "@spartacus/cdc/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userRegisterFacade",
              "type": "UserRegisterFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!UserRegisterFacade:class",
              "shortType": "UserRegisterFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "command",
              "type": "CommandService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "store",
              "type": "Store",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "cdcJSService",
              "type": "CdcJsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!CdcJsService:class",
              "shortType": "CdcJsService",
              "importPath": "@spartacus/cdc/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userProfileFacade",
              "type": "UserProfileFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!UserProfileFacade:class",
              "shortType": "UserProfileFacade",
              "importPath": "@spartacus/user/profile/root"
            }
          ]
        },
        "topLevelApiElementName": "CDCRegisterComponentService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cdc/user-profile"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cdc/user-profile",
      "kind": "Class",
      "name": "CDCRegisterComponentService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userRegisterFacade",
              "type": "UserRegisterFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!UserRegisterFacade:class",
              "shortType": "UserRegisterFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "command",
              "type": "CommandService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!CommandService:class",
              "shortType": "CommandService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "store",
              "type": "Store",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "cdcJSService",
              "type": "CdcJsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!CdcJsService:class",
              "shortType": "CdcJsService",
              "importPath": "@spartacus/cdc/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "eventService",
              "type": "EventService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!EventService:class",
              "shortType": "EventService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userProfileFacade",
              "type": "UserProfileFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!UserProfileFacade:class",
              "shortType": "UserProfileFacade",
              "importPath": "@spartacus/user/profile/root"
            }
          ]
        },
        { "kind": "Property", "name": "authService", "type": "AuthService" },
        { "kind": "Property", "name": "cdcJSService", "type": "CdcJsService" },
        { "kind": "Property", "name": "command", "type": "CommandService" },
        { "kind": "Property", "name": "eventService", "type": "EventService" },
        {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        {
          "kind": "Property",
          "name": "isLoggedIn$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "loadUserTokenFailed$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "postRegisterMessage",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "register",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "user",
              "type": "UserSignUp",
              "isOptional": false,
              "canonicalReference": "@spartacus/cdc_user-profile!UserSignUp:interface",
              "shortType": "UserSignUp",
              "importPath": "@spartacus/user/profile/root"
            }
          ],
          "returnType": "Observable<User>"
        },
        {
          "kind": "Property",
          "name": "registerCommand",
          "type": "Command<{\n        user: UserSignUp;\n    }, User>"
        },
        { "kind": "Property", "name": "store", "type": "Store" },
        {
          "kind": "Property",
          "name": "userProfileFacade",
          "type": "UserProfileFacade"
        },
        {
          "kind": "Property",
          "name": "userRegisterFacade",
          "type": "UserRegisterFacade"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingCarouselComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<CmsMerchandisingCarouselComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "merchandisingCarouselComponentService",
            "type": "MerchandisingCarouselComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingCarouselComponentService:class",
            "shortType": "MerchandisingCarouselComponentService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "intersectionService",
            "type": "IntersectionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!IntersectionService:class",
            "shortType": "IntersectionService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CmsMerchandisingCarouselComponent>"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "intersectionService",
        "type": "IntersectionService"
      },
      { "kind": "Property", "name": "lastEventModelId", "type": "string" },
      {
        "kind": "Property",
        "name": "merchandisingCarouselComponentService",
        "type": "MerchandisingCarouselComponentService"
      },
      {
        "kind": "Property",
        "name": "merchandisingCarouselModel$",
        "type": "Observable<MerchandisingCarouselModel>"
      },
      {
        "kind": "Method",
        "name": "onMerchandisingCarouselItemClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "merchandisingCarouselModel",
            "type": "MerchandisingCarouselModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingCarouselModel:interface",
            "shortType": "MerchandisingCarouselModel",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "clickedProduct",
            "type": "MerchandisingProduct",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingProduct:interface",
            "shortType": "MerchandisingProduct",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "componentData",
              "type": "CmsComponentData<CmsMerchandisingCarouselComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "merchandisingCarouselComponentService",
              "type": "MerchandisingCarouselComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!MerchandisingCarouselComponentService:class",
              "shortType": "MerchandisingCarouselComponentService",
              "importPath": "@spartacus/cds"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "intersectionService",
              "type": "IntersectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!IntersectionService:class",
              "shortType": "IntersectionService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "isOptional": false,
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "componentData",
              "type": "CmsComponentData<model>",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "merchandisingCarouselComponentService",
              "type": "MerchandisingCarouselComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!MerchandisingCarouselComponentService:class",
              "shortType": "MerchandisingCarouselComponentService",
              "importPath": "@spartacus/cds"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "intersectionService",
              "type": "IntersectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!IntersectionService:class",
              "shortType": "IntersectionService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "isOptional": false,
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ]
        },
        "topLevelApiElementName": "MerchandisingCarouselComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cds"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "componentData",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "componentData",
          "type": "CmsComponentData<CmsMerchandisingCarouselComponent>"
        },
        "new": {
          "kind": "Property",
          "name": "componentData",
          "type": "CmsComponentData<model>"
        },
        "topLevelApiElementName": "MerchandisingCarouselComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cds"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cds",
      "kind": "Class",
      "name": "MerchandisingCarouselComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "componentData",
              "type": "CmsComponentData<model>",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "merchandisingCarouselComponentService",
              "type": "MerchandisingCarouselComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!MerchandisingCarouselComponentService:class",
              "shortType": "MerchandisingCarouselComponentService",
              "importPath": "@spartacus/cds"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "intersectionService",
              "type": "IntersectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!IntersectionService:class",
              "shortType": "IntersectionService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "isOptional": false,
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "componentData",
          "type": "CmsComponentData<model>"
        },
        { "kind": "Property", "name": "el", "type": "ElementRef" },
        {
          "kind": "Property",
          "name": "intersectionService",
          "type": "IntersectionService"
        },
        { "kind": "Property", "name": "lastEventModelId", "type": "string" },
        {
          "kind": "Property",
          "name": "merchandisingCarouselComponentService",
          "type": "MerchandisingCarouselComponentService"
        },
        {
          "kind": "Property",
          "name": "merchandisingCarouselModel$",
          "type": "Observable<MerchandisingCarouselModel>"
        },
        {
          "kind": "Method",
          "name": "onMerchandisingCarouselItemClick",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "merchandisingCarouselModel",
              "type": "MerchandisingCarouselModel",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!MerchandisingCarouselModel:interface",
              "shortType": "MerchandisingCarouselModel",
              "importPath": "@spartacus/cds"
            },
            {
              "name": "clickedProduct",
              "type": "MerchandisingProduct",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!MerchandisingProduct:interface",
              "shortType": "MerchandisingProduct",
              "importPath": "@spartacus/cds"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "routingService",
          "type": "RoutingService"
        },
        {
          "kind": "Property",
          "name": "title$",
          "type": "Observable<string | undefined>"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProfileTagEventService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "CdsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsConfig:class",
            "shortType": "CdsConfig",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platform",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addTracker",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getConsentReference",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getProfileTagEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | DebugEvent | Event>"
      },
      {
        "kind": "Method",
        "name": "handleConsentWithdrawn",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "latestConsentReference", "type": "any" },
      {
        "kind": "Method",
        "name": "notifyProfileTagOfEventOccurence",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "ProfileTagPushEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagPushEvent:interface",
            "shortType": "ProfileTagPushEvent",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "profileTagDebug", "type": "boolean" }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "latestConsentReference",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "latestConsentReference",
          "type": "any"
        },
        "new": {
          "kind": "Property",
          "name": "latestConsentReference",
          "type": "BehaviorSubject<string | null>"
        },
        "topLevelApiElementName": "ProfileTagEventService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cds"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "notifyProfileTagOfEventOccurence",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "notifyProfileTagOfEventOccurence",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "ProfileTagPushEvent",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!ProfileTagPushEvent:interface",
              "shortType": "ProfileTagPushEvent",
              "importPath": "@spartacus/cds"
            }
          ],
          "returnType": "void"
        },
        "topLevelApiElementName": "ProfileTagEventService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/cds"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/cds",
      "kind": "Class",
      "name": "ProfileTagEventService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "winRef",
              "type": "WindowRef",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            },
            {
              "name": "config",
              "type": "CdsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!CdsConfig:class",
              "shortType": "CdsConfig",
              "importPath": "@spartacus/cds"
            },
            {
              "name": "baseSiteService",
              "type": "BaseSiteService",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!BaseSiteService:class",
              "shortType": "BaseSiteService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "platform",
              "type": "any",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Method",
          "name": "addTracker",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<string>"
        },
        {
          "kind": "Method",
          "name": "getConsentReference",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<string>"
        },
        {
          "kind": "Method",
          "name": "getProfileTagEvents",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<string | DebugEvent | Event>"
        },
        {
          "kind": "Method",
          "name": "handleConsentWithdrawn",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "latestConsentReference",
          "type": "BehaviorSubject<string | null>"
        },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "notifyProfileTagOfEventOccurrence",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "ProfileTagPushEvent",
              "isOptional": false,
              "canonicalReference": "@spartacus/cds!ProfileTagPushEvent:interface",
              "shortType": "ProfileTagPushEvent",
              "importPath": "@spartacus/cds"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "profileTagDebug", "type": "boolean" },
        { "kind": "Property", "name": "subscription", "type": "Subscription" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/checkout/b2b/components",
    "kind": "Class",
    "name": "CheckoutB2BStepsSetGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/base/components"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutDeliveryAddressFacade",
            "type": "CheckoutDeliveryAddressFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutDeliveryAddressFacade:class",
            "shortType": "CheckoutDeliveryAddressFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "checkoutPaymentFacade",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "checkoutDeliveryModesFacade",
            "type": "CheckoutDeliveryModesFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutDeliveryModesFacade:class",
            "shortType": "CheckoutDeliveryModesFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "checkoutPaymentTypeFacade",
            "type": "CheckoutPaymentTypeFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutPaymentTypeFacade:class",
            "shortType": "CheckoutPaymentTypeFacade",
            "importPath": "@spartacus/checkout/b2b/root"
          },
          {
            "name": "checkoutCostCenterFacade",
            "type": "CheckoutCostCenterFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutCostCenterFacade:class",
            "shortType": "CheckoutCostCenterFacade",
            "importPath": "@spartacus/checkout/b2b/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "checkoutCostCenterFacade",
        "type": "CheckoutCostCenterFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryAddressFacade",
        "type": "CheckoutDeliveryAddressFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryModesFacade",
        "type": "CheckoutDeliveryModesFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentFacade",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentTypeFacade",
        "type": "CheckoutPaymentTypeFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "isB2BStepSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "isAccountPayment",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isDeliveryAddressAndCostCenterSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "isAccountPayment",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isPaymentTypeSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "checkoutPaymentTypeFacade",
              "type": "CheckoutPaymentTypeFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutPaymentTypeFacade:class",
              "shortType": "CheckoutPaymentTypeFacade",
              "importPath": "@spartacus/checkout/b2b/root"
            },
            {
              "name": "checkoutCostCenterFacade",
              "type": "CheckoutCostCenterFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutCostCenterFacade:class",
              "shortType": "CheckoutCostCenterFacade",
              "importPath": "@spartacus/checkout/b2b/root"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "checkoutPaymentTypeFacade",
              "type": "CheckoutPaymentTypeFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutPaymentTypeFacade:class",
              "shortType": "CheckoutPaymentTypeFacade",
              "importPath": "@spartacus/checkout/b2b/root"
            },
            {
              "name": "checkoutCostCenterFacade",
              "type": "CheckoutCostCenterFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutCostCenterFacade:class",
              "shortType": "CheckoutCostCenterFacade",
              "importPath": "@spartacus/checkout/b2b/root"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        },
        "topLevelApiElementName": "CheckoutB2BStepsSetGuard",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/b2b/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/checkout/b2b/components",
      "kind": "Class",
      "name": "CheckoutB2BStepsSetGuard",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "checkoutPaymentTypeFacade",
              "type": "CheckoutPaymentTypeFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutPaymentTypeFacade:class",
              "shortType": "CheckoutPaymentTypeFacade",
              "importPath": "@spartacus/checkout/b2b/root"
            },
            {
              "name": "checkoutCostCenterFacade",
              "type": "CheckoutCostCenterFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutCostCenterFacade:class",
              "shortType": "CheckoutCostCenterFacade",
              "importPath": "@spartacus/checkout/b2b/root"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "activeCartFacade",
          "type": "ActiveCartFacade"
        },
        {
          "kind": "Method",
          "name": "canActivate",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "route",
              "type": "ActivatedRouteSnapshot",
              "isOptional": false,
              "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
              "shortType": "ActivatedRouteSnapshot",
              "importPath": "@angular/router"
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        {
          "kind": "Property",
          "name": "checkoutCostCenterFacade",
          "type": "CheckoutCostCenterFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryAddressFacade",
          "type": "CheckoutDeliveryAddressFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryModesFacade",
          "type": "CheckoutDeliveryModesFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutPaymentFacade",
          "type": "CheckoutPaymentFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutPaymentTypeFacade",
          "type": "CheckoutPaymentTypeFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutStepService",
          "type": "CheckoutStepService"
        },
        {
          "kind": "Method",
          "name": "isB2BStepSet",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "isAccountPayment",
              "type": "boolean",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        {
          "kind": "Method",
          "name": "isDeliveryAddressAndCostCenterSet",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "isAccountPayment",
              "type": "boolean",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        {
          "kind": "Method",
          "name": "isPaymentTypeSet",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_b2b_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        { "kind": "Property", "name": "router", "type": "Router" },
        {
          "kind": "Property",
          "name": "routingConfigService",
          "type": "RoutingConfigService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/checkout/base/components",
    "kind": "Class",
    "name": "CheckoutDeliveryAddressComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutDeliveryAddressFacade",
            "type": "CheckoutDeliveryAddressFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
            "shortType": "CheckoutDeliveryAddressFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartFacade",
            "type": "ActiveCartFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
            "shortType": "ActiveCartFacade",
            "importPath": "@spartacus/cart/base/root"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/base/components"
          },
          {
            "name": "checkoutDeliveryModesFacade",
            "type": "CheckoutDeliveryModesFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
            "shortType": "CheckoutDeliveryModesFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_base_components!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      {
        "kind": "Property",
        "name": "activeCartFacade",
        "type": "ActiveCartFacade"
      },
      {
        "kind": "Method",
        "name": "addAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "addressFormOpened", "type": "boolean" },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "backBtnText", "type": "string" },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Property",
        "name": "cards$",
        "type": "Observable<CardWithAddress[]>"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryAddressFacade",
        "type": "CheckoutDeliveryAddressFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryModesFacade",
        "type": "CheckoutDeliveryModesFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "createCards",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardWithAddress[]>"
      },
      {
        "kind": "Method",
        "name": "createIsUpdating",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "doneAutoSelect", "type": "boolean" },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "getAddressLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selected",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "textDefaultDeliveryAddress",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "textShipToThisAddress",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "textSelected",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "textPhone",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "textMobile",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Card"
      },
      {
        "kind": "Method",
        "name": "getSupportedAddresses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "hideNewAddressForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "goPrevious",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "isGuestCheckout", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadAddresses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "selectAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "selectDefaultAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addresses",
            "type": "Address[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selected",
            "type": "Address | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedAddress$",
        "type": "Observable<Address | undefined>"
      },
      {
        "kind": "Method",
        "name": "setAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "showNewAddressForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translationService",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userAddressService",
              "type": "UserAddressService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
              "shortType": "UserAddressService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "activatedRoute",
              "type": "ActivatedRoute",
              "isOptional": false,
              "canonicalReference": "@angular/router!ActivatedRoute:class",
              "shortType": "ActivatedRoute",
              "importPath": "@angular/router"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/checkout_base_components!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userAddressService",
              "type": "UserAddressService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
              "shortType": "UserAddressService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "activatedRoute",
              "type": "ActivatedRoute",
              "isOptional": false,
              "canonicalReference": "@angular/router!ActivatedRoute:class",
              "shortType": "ActivatedRoute",
              "importPath": "@angular/router"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "CheckoutDeliveryAddressComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "CheckoutDeliveryAddressComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/checkout/base/components",
      "kind": "Class",
      "name": "CheckoutDeliveryAddressComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userAddressService",
              "type": "UserAddressService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
              "shortType": "UserAddressService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "activatedRoute",
              "type": "ActivatedRoute",
              "isOptional": false,
              "canonicalReference": "@angular/router!ActivatedRoute:class",
              "shortType": "ActivatedRoute",
              "importPath": "@angular/router"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "activatedRoute",
          "type": "ActivatedRoute"
        },
        {
          "kind": "Property",
          "name": "activeCartFacade",
          "type": "ActiveCartFacade"
        },
        {
          "kind": "Method",
          "name": "addAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address | undefined",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "addressFormOpened", "type": "boolean" },
        {
          "kind": "Method",
          "name": "back",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "backBtnText", "type": "string" },
        {
          "kind": "Property",
          "name": "busy$",
          "type": "BehaviorSubject<boolean>"
        },
        {
          "kind": "Property",
          "name": "cards$",
          "type": "Observable<CardWithAddress[]>"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryAddressFacade",
          "type": "CheckoutDeliveryAddressFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryModesFacade",
          "type": "CheckoutDeliveryModesFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutStepService",
          "type": "CheckoutStepService"
        },
        {
          "kind": "Method",
          "name": "createCards",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<CardWithAddress[]>"
        },
        {
          "kind": "Method",
          "name": "createIsUpdating",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        { "kind": "Property", "name": "doneAutoSelect", "type": "boolean" },
        {
          "kind": "Method",
          "name": "getAddressLoading",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "getCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selected",
              "type": "any",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "textDefaultDeliveryAddress",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "textShipToThisAddress",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "textSelected",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "textPhone",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "textMobile",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Card"
        },
        {
          "kind": "Method",
          "name": "getSupportedAddresses",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<Address[]>"
        },
        {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        {
          "kind": "Method",
          "name": "hideNewAddressForm",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "goPrevious",
              "type": "boolean",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "isGuestCheckout", "type": "boolean" },
        {
          "kind": "Property",
          "name": "isUpdating$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "loadAddresses",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "next",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onError",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "selectAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "selectDefaultAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "addresses",
              "type": "Address[]",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            },
            {
              "name": "selected",
              "type": "Address | undefined",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "selectedAddress$",
          "type": "Observable<Address | undefined>"
        },
        {
          "kind": "Method",
          "name": "setAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "showNewAddressForm",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService"
        },
        {
          "kind": "Property",
          "name": "userAddressService",
          "type": "UserAddressService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/checkout/base/components",
    "kind": "Class",
    "name": "CheckoutDeliveryModeComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fb",
            "type": "UntypedFormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
            "shortType": "UntypedFormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService",
            "importPath": "@spartacus/checkout/base/components"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/base/components"
          },
          {
            "name": "checkoutDeliveryModesFacade",
            "type": "CheckoutDeliveryModesFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
            "shortType": "CheckoutDeliveryModesFacade",
            "importPath": "@spartacus/checkout/base/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "backBtnText", "type": "string" },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "changeMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutConfigService",
        "type": "CheckoutConfigService"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryModesFacade",
        "type": "CheckoutDeliveryModesFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      { "kind": "Property", "name": "deliveryModeInvalid", "type": "boolean" },
      { "kind": "Property", "name": "fb", "type": "UntypedFormBuilder" },
      {
        "kind": "Method",
        "name": "getAriaChecked",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "mode", "type": "UntypedFormGroup" },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedDeliveryModeCode$",
        "type": "Observable<string | undefined>"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "supportedDeliveryModes$",
        "type": "Observable<DeliveryMode[]>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "activatedRoute",
              "type": "ActivatedRoute",
              "isOptional": false,
              "canonicalReference": "@angular/router!ActivatedRoute:class",
              "shortType": "ActivatedRoute",
              "importPath": "@angular/router"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "activatedRoute",
              "type": "ActivatedRoute",
              "isOptional": false,
              "canonicalReference": "@angular/router!ActivatedRoute:class",
              "shortType": "ActivatedRoute",
              "importPath": "@angular/router"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        },
        "topLevelApiElementName": "CheckoutDeliveryModeComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "ngOnDestroy",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "topLevelApiElementName": "CheckoutDeliveryModeComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "ngOnInit",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "topLevelApiElementName": "CheckoutDeliveryModeComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "subscriptions",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "subscriptions",
          "type": "Subscription"
        },
        "topLevelApiElementName": "CheckoutDeliveryModeComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "supportedDeliveryModes$",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "supportedDeliveryModes$",
          "type": "Observable<DeliveryMode[]>"
        },
        "new": {
          "kind": "Property",
          "name": "supportedDeliveryModes$",
          "type": "Observable<import(\"@spartacus/cart/base/root\").DeliveryMode[]>"
        },
        "topLevelApiElementName": "CheckoutDeliveryModeComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/checkout/base/components",
      "kind": "Class",
      "name": "CheckoutDeliveryModeComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "checkoutConfigService",
              "type": "CheckoutConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutConfigService:class",
              "shortType": "CheckoutConfigService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "activatedRoute",
              "type": "ActivatedRoute",
              "isOptional": false,
              "canonicalReference": "@angular/router!ActivatedRoute:class",
              "shortType": "ActivatedRoute",
              "importPath": "@angular/router"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "activatedRoute",
          "type": "ActivatedRoute"
        },
        {
          "kind": "Property",
          "name": "activeCartFacade",
          "type": "ActiveCartFacade"
        },
        {
          "kind": "Method",
          "name": "back",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "backBtnText", "type": "string" },
        {
          "kind": "Property",
          "name": "busy$",
          "type": "BehaviorSubject<boolean>"
        },
        {
          "kind": "Property",
          "name": "CartOutlets",
          "type": "typeof CartOutlets"
        },
        {
          "kind": "Method",
          "name": "changeMode",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "code",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "checkoutConfigService",
          "type": "CheckoutConfigService"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryModesFacade",
          "type": "CheckoutDeliveryModesFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutStepService",
          "type": "CheckoutStepService"
        },
        {
          "kind": "Property",
          "name": "deliveryModeInvalid",
          "type": "boolean"
        },
        { "kind": "Property", "name": "fb", "type": "UntypedFormBuilder" },
        {
          "kind": "Method",
          "name": "getAriaChecked",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "code",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Property",
          "name": "isUpdating$",
          "type": "Observable<boolean>"
        },
        { "kind": "Property", "name": "mode", "type": "UntypedFormGroup" },
        {
          "kind": "Method",
          "name": "next",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onError",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "selectedDeliveryModeCode$",
          "type": "Observable<string | undefined>"
        },
        {
          "kind": "Property",
          "name": "supportedDeliveryModes$",
          "type": "Observable<import(\"@spartacus/cart/base/root\").DeliveryMode[]>"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/checkout/base/components",
    "kind": "Class",
    "name": "CheckoutPaymentFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutPaymentFacade",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "checkoutDeliveryAddressFacade",
            "type": "CheckoutDeliveryAddressFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
            "shortType": "CheckoutDeliveryAddressFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!UserPaymentService:class",
            "shortType": "UserPaymentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fb",
            "type": "UntypedFormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
            "shortType": "UntypedFormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "checkoutPaymentFacade",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "checkoutDeliveryAddressFacade",
            "type": "CheckoutDeliveryAddressFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
            "shortType": "CheckoutDeliveryAddressFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!UserPaymentService:class",
            "shortType": "UserPaymentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fb",
            "type": "UntypedFormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
            "shortType": "UntypedFormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "billingAddressForm",
        "type": "UntypedFormGroup"
      },
      {
        "kind": "Property",
        "name": "cardTypes$",
        "type": "Observable<CardType[]>"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryAddressFacade",
        "type": "CheckoutDeliveryAddressFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentFacade",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "closeForm", "type": "EventEmitter<any>" },
      {
        "kind": "Property",
        "name": "countries$",
        "type": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "countrySelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "country",
            "type": "Country",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Country:interface",
            "shortType": "Country",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "deliveryAddress$",
        "type": "Observable<Address | undefined>"
      },
      {
        "kind": "Method",
        "name": "expMonthAndYear",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "fb", "type": "UntypedFormBuilder" },
      {
        "kind": "Method",
        "name": "getAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Card"
      },
      {
        "kind": "Method",
        "name": "getAddressCardContent",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          },
          {
            "name": "returnAsync",
            "type": "true",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "goBack", "type": "EventEmitter<any>" },
      {
        "kind": "Method",
        "name": "handleAddressVerificationResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "AddressValidation",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!AddressValidation:interface",
            "shortType": "AddressValidation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      { "kind": "Property", "name": "loading", "type": "boolean" },
      { "kind": "Property", "name": "months", "type": "string[]" },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openSuggestedAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "AddressValidation",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!AddressValidation:interface",
            "shortType": "AddressValidation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "paymentDetails",
        "type": "PaymentDetails"
      },
      { "kind": "Property", "name": "paymentForm", "type": "UntypedFormGroup" },
      { "kind": "Property", "name": "paymentMethodsCount", "type": "number" },
      {
        "kind": "Property",
        "name": "regions$",
        "type": "Observable<Region[]>"
      },
      {
        "kind": "Property",
        "name": "sameAsDeliveryAddress",
        "type": "boolean"
      },
      {
        "kind": "Property",
        "name": "selectedCountry$",
        "type": "BehaviorSubject<string>"
      },
      { "kind": "Property", "name": "setAsDefaultField", "type": "boolean" },
      {
        "kind": "Property",
        "name": "setPaymentDetails",
        "type": "EventEmitter<any>"
      },
      {
        "kind": "Property",
        "name": "showSameAsDeliveryAddressCheckbox$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "toggleDefaultPaymentMethod",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleSameAsDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translationService",
        "type": "TranslationService | undefined"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userPaymentService",
        "type": "UserPaymentService"
      },
      {
        "kind": "Method",
        "name": "verifyAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "years", "type": "number[]" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "userPaymentService",
              "type": "UserPaymentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserPaymentService:class",
              "shortType": "UserPaymentService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "userAddressService",
              "type": "UserAddressService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
              "shortType": "UserAddressService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "userPaymentService",
              "type": "UserPaymentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserPaymentService:class",
              "shortType": "UserPaymentService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "userAddressService",
              "type": "UserAddressService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
              "shortType": "UserAddressService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "CheckoutPaymentFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "getAddressCardContent",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "getAddressCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Card"
        },
        "new": {
          "kind": "Method",
          "name": "getAddressCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Observable<Card>"
        },
        "topLevelApiElementName": "CheckoutPaymentFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getAddressCardContent",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "getAddressCardContent",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            },
            {
              "name": "returnAsync",
              "type": "true",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        "topLevelApiElementName": "CheckoutPaymentFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "translationService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService"
        },
        "topLevelApiElementName": "CheckoutPaymentFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/checkout/base/components",
      "kind": "Class",
      "name": "CheckoutPaymentFormComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "userPaymentService",
              "type": "UserPaymentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserPaymentService:class",
              "shortType": "UserPaymentService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "fb",
              "type": "UntypedFormBuilder",
              "isOptional": false,
              "canonicalReference": "@angular/forms!UntypedFormBuilder:class",
              "shortType": "UntypedFormBuilder",
              "importPath": "@angular/forms"
            },
            {
              "name": "userAddressService",
              "type": "UserAddressService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!UserAddressService:class",
              "shortType": "UserAddressService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "back",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "billingAddressForm",
          "type": "UntypedFormGroup"
        },
        {
          "kind": "Property",
          "name": "cardTypes$",
          "type": "Observable<CardType[]>"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryAddressFacade",
          "type": "CheckoutDeliveryAddressFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutPaymentFacade",
          "type": "CheckoutPaymentFacade"
        },
        {
          "kind": "Method",
          "name": "close",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "closeForm",
          "type": "EventEmitter<any>"
        },
        {
          "kind": "Property",
          "name": "countries$",
          "type": "Observable<Country[]>"
        },
        {
          "kind": "Method",
          "name": "countrySelected",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "country",
              "type": "Country",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Country:interface",
              "shortType": "Country",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "deliveryAddress$",
          "type": "Observable<Address | undefined>"
        },
        {
          "kind": "Method",
          "name": "expMonthAndYear",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "fb", "type": "UntypedFormBuilder" },
        {
          "kind": "Method",
          "name": "getAddressCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        { "kind": "Property", "name": "goBack", "type": "EventEmitter<any>" },
        {
          "kind": "Method",
          "name": "handleAddressVerificationResults",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "results",
              "type": "AddressValidation",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!AddressValidation:interface",
              "shortType": "AddressValidation",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Property",
          "name": "launchDialogService",
          "type": "LaunchDialogService"
        },
        { "kind": "Property", "name": "loading", "type": "boolean" },
        { "kind": "Property", "name": "months", "type": "string[]" },
        {
          "kind": "Method",
          "name": "next",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "openSuggestedAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "results",
              "type": "AddressValidation",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!AddressValidation:interface",
              "shortType": "AddressValidation",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "paymentDetails",
          "type": "PaymentDetails"
        },
        {
          "kind": "Property",
          "name": "paymentForm",
          "type": "UntypedFormGroup"
        },
        { "kind": "Property", "name": "paymentMethodsCount", "type": "number" },
        {
          "kind": "Property",
          "name": "regions$",
          "type": "Observable<Region[]>"
        },
        {
          "kind": "Property",
          "name": "sameAsDeliveryAddress",
          "type": "boolean"
        },
        {
          "kind": "Property",
          "name": "selectedCountry$",
          "type": "BehaviorSubject<string>"
        },
        { "kind": "Property", "name": "setAsDefaultField", "type": "boolean" },
        {
          "kind": "Property",
          "name": "setPaymentDetails",
          "type": "EventEmitter<any>"
        },
        {
          "kind": "Property",
          "name": "showSameAsDeliveryAddressCheckbox$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "toggleDefaultPaymentMethod",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "toggleSameAsDeliveryAddress",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService"
        },
        {
          "kind": "Property",
          "name": "userAddressService",
          "type": "UserAddressService"
        },
        {
          "kind": "Property",
          "name": "userPaymentService",
          "type": "UserPaymentService"
        },
        {
          "kind": "Method",
          "name": "verifyAddress",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "years", "type": "number[]" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/checkout/base/components",
    "kind": "Class",
    "name": "CheckoutReviewSubmitComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutDeliveryAddressFacade",
            "type": "CheckoutDeliveryAddressFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
            "shortType": "CheckoutDeliveryAddressFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "checkoutPaymentFacade",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "activeCartFacade",
            "type": "ActiveCartFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
            "shortType": "ActiveCartFacade",
            "importPath": "@spartacus/cart/base/root"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/base/components"
          },
          {
            "name": "checkoutDeliveryModesFacade",
            "type": "CheckoutDeliveryModesFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
            "shortType": "CheckoutDeliveryModesFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_base_components!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartFacade",
        "type": "ActiveCartFacade"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartOutlets",
        "type": "typeof CartOutlets"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryAddressFacade",
        "type": "CheckoutDeliveryAddressFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryModesFacade",
        "type": "CheckoutDeliveryModesFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentFacade",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "checkoutStepTypeDeliveryAddress",
        "type": "CheckoutStepType"
      },
      {
        "kind": "Property",
        "name": "checkoutStepTypeDeliveryMode",
        "type": "CheckoutStepType"
      },
      {
        "kind": "Property",
        "name": "checkoutStepTypePaymentDetails",
        "type": "CheckoutStepType"
      },
      {
        "kind": "Property",
        "name": "deliveryAddress$",
        "type": "Observable<Address | undefined>"
      },
      {
        "kind": "Property",
        "name": "deliveryMode$",
        "type": "Observable<DeliveryMode | undefined>"
      },
      {
        "kind": "Method",
        "name": "deliverySteps",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "steps",
            "type": "CheckoutStep[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          }
        ],
        "returnType": "CheckoutStep[]"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "getCheckoutDeliverySteps",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Array<CheckoutStepType | string>"
      },
      {
        "kind": "Method",
        "name": "getCheckoutPaymentSteps",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Array<CheckoutStepType | string>"
      },
      {
        "kind": "Method",
        "name": "getCheckoutStepUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepType",
            "type": "CheckoutStepType | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType",
            "importPath": "@spartacus/checkout/base/root"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getDeliveryAddressCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryAddress",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          },
          {
            "name": "countryName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModeCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryMode",
            "type": "DeliveryMode",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/cart/base/root"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPaymentMethodCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/cart/base/root"
          }
        ],
        "returnType": "Observable<Card>"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "paymentDetails$",
        "type": "Observable<PaymentDetails | undefined>"
      },
      {
        "kind": "Method",
        "name": "paymentSteps",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "steps",
            "type": "CheckoutStep[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          }
        ],
        "returnType": "CheckoutStep[]"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      },
      {
        "kind": "Property",
        "name": "translationService",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/checkout_base_components!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ]
        },
        "topLevelApiElementName": "CheckoutReviewSubmitComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "CheckoutReviewSubmitComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/checkout/base/components",
      "kind": "Class",
      "name": "CheckoutReviewSubmitComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "activeCartFacade",
          "type": "ActiveCartFacade"
        },
        { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
        {
          "kind": "Property",
          "name": "cartOutlets",
          "type": "typeof CartOutlets"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryAddressFacade",
          "type": "CheckoutDeliveryAddressFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryModesFacade",
          "type": "CheckoutDeliveryModesFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutPaymentFacade",
          "type": "CheckoutPaymentFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutStepService",
          "type": "CheckoutStepService"
        },
        {
          "kind": "Property",
          "name": "checkoutStepTypeDeliveryAddress",
          "type": "CheckoutStepType"
        },
        {
          "kind": "Property",
          "name": "checkoutStepTypeDeliveryMode",
          "type": "CheckoutStepType"
        },
        {
          "kind": "Property",
          "name": "checkoutStepTypePaymentDetails",
          "type": "CheckoutStepType"
        },
        {
          "kind": "Property",
          "name": "deliveryAddress$",
          "type": "Observable<Address | undefined>"
        },
        {
          "kind": "Property",
          "name": "deliveryMode$",
          "type": "Observable<DeliveryMode | undefined>"
        },
        {
          "kind": "Method",
          "name": "deliverySteps",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "steps",
              "type": "CheckoutStep[]",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "returnType": "CheckoutStep[]"
        },
        {
          "kind": "Property",
          "name": "entries$",
          "type": "Observable<OrderEntry[]>"
        },
        {
          "kind": "Method",
          "name": "getCheckoutDeliverySteps",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Array<CheckoutStepType | string>"
        },
        {
          "kind": "Method",
          "name": "getCheckoutPaymentSteps",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Array<CheckoutStepType | string>"
        },
        {
          "kind": "Method",
          "name": "getCheckoutStepUrl",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "stepType",
              "type": "CheckoutStepType | string",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepType:enum",
              "shortType": "CheckoutStepType",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "returnType": "string | undefined"
        },
        {
          "kind": "Method",
          "name": "getDeliveryAddressCard",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "deliveryAddress",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            },
            {
              "name": "countryName",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getDeliveryModeCard",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "deliveryMode",
              "type": "DeliveryMode",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!DeliveryMode:interface",
              "shortType": "DeliveryMode",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getPaymentMethodCard",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "paymentDetails",
              "type": "PaymentDetails",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!PaymentDetails:interface",
              "shortType": "PaymentDetails",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "returnType": "Observable<Card>"
        },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Property",
          "name": "paymentDetails$",
          "type": "Observable<PaymentDetails | undefined>"
        },
        {
          "kind": "Method",
          "name": "paymentSteps",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "steps",
              "type": "CheckoutStep[]",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "returnType": "CheckoutStep[]"
        },
        {
          "kind": "Property",
          "name": "promotionLocation",
          "type": "PromotionLocation"
        },
        {
          "kind": "Property",
          "name": "steps$",
          "type": "Observable<CheckoutStep[]>"
        },
        {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/checkout/base/components",
    "kind": "Class",
    "name": "CheckoutStepsSetGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/base/components"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutDeliveryAddressFacade",
            "type": "CheckoutDeliveryAddressFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
            "shortType": "CheckoutDeliveryAddressFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "checkoutPaymentFacade",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "checkoutDeliveryModesFacade",
            "type": "CheckoutDeliveryModesFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
            "shortType": "CheckoutDeliveryModesFacade",
            "importPath": "@spartacus/checkout/base/root"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryAddressFacade",
        "type": "CheckoutDeliveryAddressFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryModesFacade",
        "type": "CheckoutDeliveryModesFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentFacade",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "getUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routeName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "UrlTree"
      },
      {
        "kind": "Method",
        "name": "isDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isDeliveryModeSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isPaymentDetailsSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isStepSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/base/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        },
        "topLevelApiElementName": "CheckoutStepsSetGuard",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/checkout/base/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/checkout/base/components",
      "kind": "Class",
      "name": "CheckoutStepsSetGuard",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "checkoutStepService",
              "type": "CheckoutStepService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepService:class",
              "shortType": "CheckoutStepService",
              "importPath": "@spartacus/checkout/base/components"
            },
            {
              "name": "routingConfigService",
              "type": "RoutingConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!RoutingConfigService:class",
              "shortType": "RoutingConfigService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "checkoutDeliveryAddressFacade",
              "type": "CheckoutDeliveryAddressFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryAddressFacade:class",
              "shortType": "CheckoutDeliveryAddressFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutPaymentFacade",
              "type": "CheckoutPaymentFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutPaymentFacade:class",
              "shortType": "CheckoutPaymentFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "checkoutDeliveryModesFacade",
              "type": "CheckoutDeliveryModesFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutDeliveryModesFacade:class",
              "shortType": "CheckoutDeliveryModesFacade",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "activeCartFacade",
              "type": "ActiveCartFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!ActiveCartFacade:class",
              "shortType": "ActiveCartFacade",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "activeCartFacade",
          "type": "ActiveCartFacade"
        },
        {
          "kind": "Method",
          "name": "canActivate",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "route",
              "type": "ActivatedRouteSnapshot",
              "isOptional": false,
              "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
              "shortType": "ActivatedRouteSnapshot",
              "importPath": "@angular/router"
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryAddressFacade",
          "type": "CheckoutDeliveryAddressFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutDeliveryModesFacade",
          "type": "CheckoutDeliveryModesFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutPaymentFacade",
          "type": "CheckoutPaymentFacade"
        },
        {
          "kind": "Property",
          "name": "checkoutStepService",
          "type": "CheckoutStepService"
        },
        {
          "kind": "Method",
          "name": "getUrl",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "routeName",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "UrlTree"
        },
        {
          "kind": "Method",
          "name": "isDeliveryAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        {
          "kind": "Method",
          "name": "isDeliveryModeSet",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        {
          "kind": "Method",
          "name": "isPaymentDetailsSet",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        {
          "kind": "Method",
          "name": "isStepSet",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "step",
              "type": "CheckoutStep",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStep:interface",
              "shortType": "CheckoutStep",
              "importPath": "@spartacus/checkout/base/root"
            }
          ],
          "returnType": "Observable<boolean | UrlTree>"
        },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "router", "type": "Router" },
        {
          "kind": "Property",
          "name": "routingConfigService",
          "type": "RoutingConfigService"
        },
        {
          "kind": "Method",
          "name": "setStepNameMultiLine",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "stepType",
              "type": "CheckoutStepType",
              "isOptional": false,
              "canonicalReference": "@spartacus/checkout_base_components!CheckoutStepType:enum",
              "shortType": "CheckoutStepType",
              "importPath": "@spartacus/checkout/base/root"
            },
            {
              "name": "value",
              "type": "boolean",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "subscription", "type": "Subscription" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "HttpErrorHandler",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platformId",
            "type": "Object | undefined",
            "isOptional": true,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "getErrorTranslationKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common"
          },
          {
            "name": "errorResponse",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errorResponse",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSsr",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "platformId",
        "type": "Object | undefined"
      },
      { "kind": "Property", "name": "responseStatus", "type": "number" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/core!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "platformId",
              "type": "Object | undefined",
              "isOptional": true,
              "canonicalReference": "!Object:interface",
              "shortType": "Object",
              "importPath": ""
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/core!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/core!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "platformId",
              "type": "Object | undefined",
              "isOptional": true,
              "canonicalReference": "!Object:interface",
              "shortType": "Object",
              "importPath": ""
            }
          ]
        },
        "topLevelApiElementName": "HttpErrorHandler",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/core"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "HttpErrorHandler",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/core",
      "kind": "Class",
      "name": "HttpErrorHandler",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/core!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "platformId",
              "type": "Object | undefined",
              "isOptional": true,
              "canonicalReference": "!Object:interface",
              "shortType": "Object",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Method",
          "name": "getErrorTranslationKey",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "reason",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getPriority",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Priority"
        },
        {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        {
          "kind": "Method",
          "name": "handleError",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "request",
              "type": "HttpRequest<any>",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpRequest:class",
              "shortType": "HttpRequest",
              "importPath": "@angular/common"
            },
            {
              "name": "errorResponse",
              "type": "HttpErrorResponse",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpErrorResponse:class",
              "shortType": "HttpErrorResponse",
              "importPath": "@angular/common"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "hasMatch",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "errorResponse",
              "type": "HttpErrorResponse",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpErrorResponse:class",
              "shortType": "HttpErrorResponse",
              "importPath": "@angular/common"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isSsr",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Property",
          "name": "platformId",
          "type": "Object | undefined"
        },
        { "kind": "Property", "name": "responseStatus", "type": "number" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "I18nextBackendService",
    "members": [
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "InitOptions"
      },
      {
        "name": "constructor",
        "kind": "Constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "name": "constructor",
          "kind": "Constructor",
          "overloadIndex": 1,
          "parameters": []
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "backendInitializers",
              "type": "I18nextBackendInitializer[] | null",
              "isOptional": false,
              "canonicalReference": "@spartacus/core!I18nextBackendInitializer:class",
              "shortType": "I18nextBackendInitializer",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "I18nextBackendService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/core",
      "kind": "Class",
      "name": "I18nextBackendService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "backendInitializers",
              "type": "I18nextBackendInitializer[] | null",
              "isOptional": false,
              "canonicalReference": "@spartacus/core!I18nextBackendInitializer:class",
              "shortType": "I18nextBackendInitializer",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "backendInitializers",
          "type": "I18nextBackendInitializer[] | null"
        },
        {
          "kind": "Method",
          "name": "initialize",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "InitOptions"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "I18nextHttpBackendService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "i18next",
            "type": "i18n",
            "isOptional": false,
            "canonicalReference": "i18next!i18n:interface",
            "shortType": "i18n",
            "importPath": "i18next"
          },
          {
            "name": "i18nextHttpClient",
            "type": "I18nextHttpBackendClient",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!I18nextHttpBackendClient:type",
            "shortType": "I18nextHttpBackendClient",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "I18nConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!I18nConfig:class",
            "shortType": "I18nConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "windowRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "I18nConfig" },
      {
        "kind": "Method",
        "name": "getBackendConfig",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "BackendOptions"
      },
      {
        "kind": "Method",
        "name": "getLoadPath",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "path",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "i18next", "type": "i18n" },
      {
        "kind": "Property",
        "name": "i18nextHttpClient",
        "type": "I18nextHttpBackendClient"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "InitOptions"
      },
      { "kind": "Property", "name": "windowRef", "type": "WindowRef" }
    ],
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "I18nextHttpBackendService",
        "changeElementCategory": "TOP_LEVEL_API",
        "topLevelApiElementName": "I18nextHttpBackendService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/core"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderConsignedEntriesComponent",
    "members": [
      { "kind": "Property", "name": "buyItAgainTranslation", "type": "string" },
      {
        "kind": "Property",
        "name": "CartOutlets",
        "type": "typeof CartOutlets"
      },
      { "kind": "Property", "name": "consignments", "type": "Consignment[]" },
      {
        "kind": "Property",
        "name": "enableAddToCart",
        "type": "boolean | undefined"
      },
      {
        "kind": "Method",
        "name": "getConsignmentProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consignment",
            "type": "Consignment",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!Consignment:interface",
            "shortType": "Consignment",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderEntry[]"
      },
      { "kind": "Property", "name": "order", "type": "Order" },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      {
        "name": "constructor",
        "kind": "Constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "getConsignmentProducts",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "getConsignmentProducts",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "consignment",
              "type": "Consignment",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!Consignment:interface",
              "shortType": "Consignment",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "OrderEntry[]"
        },
        "topLevelApiElementName": "OrderConsignedEntriesComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/order/components",
      "kind": "Class",
      "name": "OrderConsignedEntriesComponent",
      "members": [
        {
          "kind": "Property",
          "name": "buyItAgainTranslation",
          "type": "string"
        },
        {
          "kind": "Property",
          "name": "CartOutlets",
          "type": "typeof CartOutlets"
        },
        { "kind": "Property", "name": "consignments", "type": "Consignment[]" },
        {
          "kind": "Property",
          "name": "enableAddToCart",
          "type": "boolean | undefined"
        },
        { "kind": "Property", "name": "order", "type": "Order" },
        {
          "kind": "Property",
          "name": "OrderOutlets",
          "type": "typeof OrderOutlets"
        },
        {
          "kind": "Property",
          "name": "promotionLocation",
          "type": "PromotionLocation"
        },
        {
          "name": "constructor",
          "kind": "Constructor",
          "overloadIndex": 1,
          "parameters": []
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "component",
            "type": "CmsComponentData<CmsOrderDetailItemsComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "buyItAgainTranslation$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "cancel$",
        "type": "Observable<Consignment[] | undefined>"
      },
      {
        "kind": "Property",
        "name": "CartOutlets",
        "type": "typeof CartOutlets"
      },
      {
        "kind": "Property",
        "name": "completed$",
        "type": "Observable<Consignment[] | undefined>"
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsOrderDetailItemsComponent>"
      },
      {
        "kind": "Property",
        "name": "enableAddToCart$",
        "type": "Observable<boolean | undefined>"
      },
      {
        "kind": "Property",
        "name": "isOrderLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<Order>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Property",
        "name": "others$",
        "type": "Observable<Consignment[] | undefined>"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsOrderDetailItemsComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsOrderDetailItemsComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "topLevelApiElementName": "OrderDetailItemsComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "buyItAgainTranslation$",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "buyItAgainTranslation$",
          "type": "Observable<string>"
        },
        "topLevelApiElementName": "OrderDetailItemsComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "cancel$",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "cancel$",
          "type": "Observable<Consignment[] | undefined>"
        },
        "topLevelApiElementName": "OrderDetailItemsComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "completed$",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "completed$",
          "type": "Observable<Consignment[] | undefined>"
        },
        "topLevelApiElementName": "OrderDetailItemsComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "ngOnInit",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "topLevelApiElementName": "OrderDetailItemsComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "others$",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "others$",
          "type": "Observable<Consignment[] | undefined>"
        },
        "topLevelApiElementName": "OrderDetailItemsComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "translation",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        },
        "topLevelApiElementName": "OrderDetailItemsComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/order/components",
      "kind": "Class",
      "name": "OrderDetailItemsComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsOrderDetailItemsComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "CartOutlets",
          "type": "typeof CartOutlets"
        },
        {
          "kind": "Property",
          "name": "component",
          "type": "CmsComponentData<CmsOrderDetailItemsComponent>"
        },
        {
          "kind": "Property",
          "name": "deliveryConsignments",
          "type": "Consignment[] | undefined"
        },
        {
          "kind": "Property",
          "name": "displayConsignmentDelivery$",
          "type": "Observable<boolean | undefined>"
        },
        {
          "kind": "Property",
          "name": "enableAddToCart$",
          "type": "Observable<boolean | undefined>"
        },
        {
          "kind": "Method",
          "name": "getGroupedConsignments",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "order",
              "type": "Order",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!Order:interface",
              "shortType": "Order",
              "importPath": "@spartacus/core"
            },
            {
              "name": "pickup",
              "type": "boolean",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Consignment[] | undefined"
        },
        {
          "kind": "Method",
          "name": "groupConsignments",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "consignments",
              "type": "Consignment[] | undefined",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!Consignment:interface",
              "shortType": "Consignment",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Consignment[] | undefined"
        },
        {
          "kind": "Property",
          "name": "isOrderLoading$",
          "type": "Observable<boolean>"
        },
        { "kind": "Property", "name": "order$", "type": "Observable<Order>" },
        {
          "kind": "Property",
          "name": "orderDetailsService",
          "type": "OrderDetailsService"
        },
        {
          "kind": "Property",
          "name": "OrderOutlets",
          "type": "typeof OrderOutlets"
        },
        {
          "kind": "Property",
          "name": "pickupConsignments",
          "type": "Consignment[] | undefined"
        },
        {
          "kind": "Property",
          "name": "promotionLocation",
          "type": "PromotionLocation"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailShippingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isOrderLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderDetailShippingComponent",
        "changeElementCategory": "TOP_LEVEL_API",
        "topLevelApiElementName": "OrderDetailShippingComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "orderHistoryFacade",
            "type": "OrderHistoryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
            "shortType": "OrderHistoryFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "replenishmentOrderHistoryFacade",
            "type": "ReplenishmentOrderHistoryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
            "shortType": "ReplenishmentOrderHistoryFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "orderHistoryFacade",
            "type": "OrderHistoryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
            "shortType": "OrderHistoryFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "replenishmentOrderHistoryFacade",
            "type": "ReplenishmentOrderHistoryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
            "shortType": "ReplenishmentOrderHistoryFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byOrderNumber: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "Order",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "hasPONumber",
        "type": "boolean | undefined"
      },
      {
        "kind": "Property",
        "name": "hasReplenishmentOrder$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "orderHistoryFacade",
        "type": "OrderHistoryFacade"
      },
      {
        "kind": "Property",
        "name": "orders$",
        "type": "Observable<OrderHistoryList | undefined>"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderHistoryFacade",
        "type": "ReplenishmentOrderHistoryFacade"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "tabTitleParam$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "routing",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "routing",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        },
        "topLevelApiElementName": "OrderHistoryComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "OrderHistoryComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/order/components",
      "kind": "Class",
      "name": "OrderHistoryComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "routing",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderHistoryFacade",
              "type": "OrderHistoryFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!OrderHistoryFacade:class",
              "shortType": "OrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "replenishmentOrderHistoryFacade",
              "type": "ReplenishmentOrderHistoryFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!ReplenishmentOrderHistoryFacade:class",
              "shortType": "ReplenishmentOrderHistoryFacade",
              "importPath": "@spartacus/order/root"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "changeSortCode",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "sortCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "getSortLabels",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<{\n        byDate: string;\n        byOrderNumber: string;\n    }>"
        },
        {
          "kind": "Method",
          "name": "goToOrderDetail",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "order",
              "type": "Order",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!Order:interface",
              "shortType": "Order",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "hasPONumber",
          "type": "boolean | undefined"
        },
        {
          "kind": "Property",
          "name": "hasReplenishmentOrder$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "isLoaded$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "orderHistoryFacade",
          "type": "OrderHistoryFacade"
        },
        {
          "kind": "Property",
          "name": "orders$",
          "type": "Observable<OrderHistoryList | undefined>"
        },
        {
          "kind": "Method",
          "name": "pageChange",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "page",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "replenishmentOrderHistoryFacade",
          "type": "ReplenishmentOrderHistoryFacade"
        },
        { "kind": "Property", "name": "routing", "type": "RoutingService" },
        { "kind": "Property", "name": "sortType", "type": "string" },
        {
          "kind": "Property",
          "name": "tabTitleParam$",
          "type": "Observable<number>"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryAddress",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getBillingAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "billingAddress",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCostCenterCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryMode",
            "type": "DeliveryMode",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/cart/base/root"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getMethodOfPaymentCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "hasPaymentInfo",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/cart/base/root"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderCodeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderCurrentDateCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string | null",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderStatusCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "status",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPaymentInfoCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payment",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/cart/base/root"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPurchaseOrderNumber",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "poNumber",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentActiveCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "active",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentCodeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentFrequencyCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "frequency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentNextDateCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string | null",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentStartOnCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string | null",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      { "kind": "Property", "name": "order", "type": "any" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsOrderDetailOverviewComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "topLevelApiElementName": "OrderOverviewComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "order",
        "changeElementCategory": "MEMBER",
        "old": { "kind": "Property", "name": "order", "type": "any" },
        "topLevelApiElementName": "OrderOverviewComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/order/components",
      "kind": "Class",
      "name": "OrderOverviewComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "orderDetailsService",
              "type": "OrderDetailsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
              "shortType": "OrderDetailsService",
              "importPath": "@spartacus/order/components"
            },
            {
              "name": "component",
              "type": "CmsComponentData<CmsOrderDetailOverviewComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "component",
          "type": "CmsComponentData<CmsOrderDetailOverviewComponent>"
        },
        {
          "kind": "Method",
          "name": "getAddressCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "deliveryAddress",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getBillingAddressCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "billingAddress",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getCostCenterCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "costCenter",
              "type": "CostCenter",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!CostCenter:interface",
              "shortType": "CostCenter",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getDeliveryModeCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "deliveryMode",
              "type": "DeliveryMode",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!DeliveryMode:interface",
              "shortType": "DeliveryMode",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getMethodOfPaymentCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "hasPaymentInfo",
              "type": "PaymentDetails",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!PaymentDetails:interface",
              "shortType": "PaymentDetails",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getOrderCodeCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getOrderCurrentDateCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "isoDate",
              "type": "string | null",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getOrderStatusCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "status",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getPaymentInfoCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payment",
              "type": "PaymentDetails",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_components!PaymentDetails:interface",
              "shortType": "PaymentDetails",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getPurchaseOrderNumber",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "poNumber",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getReplenishmentActiveCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "active",
              "type": "boolean",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getReplenishmentCodeCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getReplenishmentFrequencyCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "frequency",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getReplenishmentNextDateCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "isoDate",
              "type": "string | null",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Method",
          "name": "getReplenishmentStartOnCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "isoDate",
              "type": "string | null",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Property",
          "name": "isOrderLoading$",
          "type": "Observable<boolean>"
        },
        { "kind": "Property", "name": "order$", "type": "Observable<any>" },
        {
          "kind": "Property",
          "name": "orderDetailsService",
          "type": "OrderDetailsService"
        },
        {
          "kind": "Property",
          "name": "simple$",
          "type": "Observable<boolean | undefined>"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderOverviewModule",
    "members": [
      {
        "name": "constructor",
        "kind": "Constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ],
    "breakingChanges": [
      {
        "change": "CLASS_DELETED",
        "changeType": "DELETED",
        "changeKind": "Class",
        "changeLabel": "deleted",
        "changeElementName": "OrderOverviewModule",
        "changeElementCategory": "TOP_LEVEL_API",
        "topLevelApiElementName": "OrderOverviewModule",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/components"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderHistoryService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrder>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/order_core!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/order/root"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetailsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryListLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "resetCancelOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithOrder>" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "store",
              "type": "Store<StateWithOrder>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_core!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/order_core!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "store",
              "type": "Store<StateWithOrder>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_core!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "OrderHistoryService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/core"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "OrderHistoryService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/order/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/order/core",
      "kind": "Class",
      "name": "OrderHistoryService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "store",
              "type": "Store<StateWithOrder>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "processStateStore",
              "type": "Store<StateWithProcess<void>>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_core!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "cancelOrder",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "cancelRequestInput",
              "type": "CancellationRequestEntryInputList",
              "isOptional": false,
              "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
              "shortType": "CancellationRequestEntryInputList",
              "importPath": "@spartacus/order/root"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "clearConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "clearOrderDetails",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "clearOrderList",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "getCancelOrderLoading",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "getCancelOrderSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "getConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<ConsignmentTracking>"
        },
        {
          "kind": "Method",
          "name": "getOrderDetails",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<Order>"
        },
        {
          "kind": "Method",
          "name": "getOrderDetailsLoading",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "getOrderHistoryList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "pageSize",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<OrderHistoryList | undefined>"
        },
        {
          "kind": "Method",
          "name": "getOrderHistoryListLoaded",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "loadConsignmentTracking",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "consignmentCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "loadOrderDetails",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orderCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "loadOrderList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "pageSize",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "currentPage",
              "type": "number",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "sort",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "processStateStore",
          "type": "Store<StateWithProcess<void>>"
        },
        {
          "kind": "Method",
          "name": "resetCancelOrderProcessState",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "routingService",
          "type": "RoutingService"
        },
        {
          "kind": "Property",
          "name": "store",
          "type": "Store<StateWithOrder>"
        },
        { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentUnitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentUnitService",
        "type": "CurrentUnitService"
      },
      { "kind": "Property", "name": "routerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "unit$",
        "type": "Observable<B2BUnit | undefined>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "currentUnitService",
              "type": "CurrentUnitService",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
              "shortType": "CurrentUnitService",
              "importPath": "@spartacus/organization/administration/components"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "currentUnitService",
              "type": "CurrentUnitService",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
              "shortType": "CurrentUnitService",
              "importPath": "@spartacus/organization/administration/components"
            },
            {
              "name": "b2bUserService",
              "type": "B2BUserService",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
              "shortType": "B2BUserService",
              "importPath": "@spartacus/organization/administration/core"
            }
          ]
        },
        "topLevelApiElementName": "UnitUserListComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/organization/administration/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/organization/administration/components",
      "kind": "Class",
      "name": "UnitUserListComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "currentUnitService",
              "type": "CurrentUnitService",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
              "shortType": "CurrentUnitService",
              "importPath": "@spartacus/organization/administration/components"
            },
            {
              "name": "b2bUserService",
              "type": "B2BUserService",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
              "shortType": "B2BUserService",
              "importPath": "@spartacus/organization/administration/core"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "b2bUserService",
          "type": "B2BUserService"
        },
        {
          "kind": "Property",
          "name": "currentUnitService",
          "type": "CurrentUnitService"
        },
        {
          "kind": "Property",
          "name": "isUpdatingUserAllowed",
          "type": "boolean"
        },
        { "kind": "Property", "name": "routerKey", "type": "string" },
        {
          "kind": "Property",
          "name": "unit$",
          "type": "Observable<B2BUnit | undefined>"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserRolesCellComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "OutletContextData<TableDataOutletContext>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
            "shortType": "OutletContextData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "itemService",
            "type": "ItemService<B2BUnit>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getRouterModel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "uid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<B2BUnit>"
      },
      {
        "kind": "Property",
        "name": "outlet",
        "type": "OutletContextData<TableDataOutletContext>"
      },
      { "kind": "Property", "name": "unitKey$", "type": "Observable<string>" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "outlet",
              "type": "OutletContextData<TableDataOutletContext>",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
              "shortType": "OutletContextData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "itemService",
              "type": "ItemService<B2BUnit>",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
              "shortType": "ItemService",
              "importPath": "@spartacus/organization/administration/components"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "outlet",
              "type": "OutletContextData<TableDataOutletContext>",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
              "shortType": "OutletContextData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "itemService",
              "type": "ItemService<B2BUnit>",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
              "shortType": "ItemService",
              "importPath": "@spartacus/organization/administration/components"
            },
            {
              "name": "b2bUserService",
              "type": "B2BUserService",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
              "shortType": "B2BUserService",
              "importPath": "@spartacus/organization/administration/core"
            }
          ]
        },
        "topLevelApiElementName": "UnitUserRolesCellComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/organization/administration/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/organization/administration/components",
      "kind": "Class",
      "name": "UnitUserRolesCellComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "outlet",
              "type": "OutletContextData<TableDataOutletContext>",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
              "shortType": "OutletContextData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "itemService",
              "type": "ItemService<B2BUnit>",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
              "shortType": "ItemService",
              "importPath": "@spartacus/organization/administration/components"
            },
            {
              "name": "b2bUserService",
              "type": "B2BUserService",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
              "shortType": "B2BUserService",
              "importPath": "@spartacus/organization/administration/core"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "b2bUserService",
          "type": "B2BUserService"
        },
        {
          "kind": "Method",
          "name": "getRouterModel",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "uid",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "any"
        },
        {
          "kind": "Property",
          "name": "isUpdatingUserAllowed",
          "type": "boolean"
        },
        {
          "kind": "Property",
          "name": "itemService",
          "type": "ItemService<B2BUnit>"
        },
        {
          "kind": "Property",
          "name": "outlet",
          "type": "OutletContextData<TableDataOutletContext>"
        },
        { "kind": "Property", "name": "unitKey$", "type": "Observable<string>" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrgUnitService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrganization>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearAssignedUsersList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "findUnitChildrenInTree",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orginitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "unit",
            "type": "B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "B2BUnitNode[]"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "getActiveUnitList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<B2BUnitNode[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "getAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Address | undefined>"
      },
      {
        "kind": "Method",
        "name": "getAddresses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Address> | undefined>"
      },
      {
        "kind": "Method",
        "name": "getAddressLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Address>>"
      },
      {
        "kind": "Method",
        "name": "getApprovalProcesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<B2BApprovalProcess[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "getChildUnits",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUnitNode>>"
      },
      {
        "kind": "Method",
        "name": "getCostCenters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      },
      {
        "kind": "Method",
        "name": "getErrorState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<B2BUnitNode[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "getLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUnit>>"
      },
      {
        "kind": "Method",
        "name": "getTree",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<B2BUnitNode | undefined>"
      },
      {
        "kind": "Method",
        "name": "getUsers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser> | undefined>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadAddresses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadApprovalProcesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadTree",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadUsers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "sortUnitList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "a",
            "type": "B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          },
          {
            "name": "b",
            "type": "B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "1 | -1 | 0"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithOrganization>"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unassignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "unit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Method",
        "changeLabel": "changed",
        "changeElementName": "sortUnitList",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "sortUnitList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "a",
              "type": "B2BUnitNode",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
              "shortType": "B2BUnitNode",
              "importPath": "@spartacus/core"
            },
            {
              "name": "b",
              "type": "B2BUnitNode",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
              "shortType": "B2BUnitNode",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "1 | -1 | 0"
        },
        "new": {
          "kind": "Method",
          "name": "sortUnitList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "a",
              "type": "B2BUnitNode",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
              "shortType": "B2BUnitNode",
              "importPath": "@spartacus/core"
            },
            {
              "name": "b",
              "type": "B2BUnitNode",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
              "shortType": "B2BUnitNode",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "0 | 1 | -1"
        },
        "topLevelApiElementName": "OrgUnitService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/organization/administration/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/organization/administration/core",
      "kind": "Class",
      "name": "OrgUnitService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "store",
              "type": "Store<StateWithOrganization>",
              "isOptional": false,
              "canonicalReference": "@ngrx/store!Store:class",
              "shortType": "Store",
              "importPath": "@ngrx/store"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "assignApprover",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "orgCustomerId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "roleId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "assignRole",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgCustomerId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "roleId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "clearAssignedUsersList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "roleId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "params",
              "type": "SearchConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
              "shortType": "SearchConfig",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "create",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "unit",
              "type": "B2BUnit",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
              "shortType": "B2BUnit",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "createAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "deleteAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "addressId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "findUnitChildrenInTree",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orginitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "unit",
              "type": "B2BUnitNode",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
              "shortType": "B2BUnitNode",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "B2BUnitNode[]"
        },
        {
          "kind": "Method",
          "name": "get",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<B2BUnit>"
        },
        {
          "kind": "Method",
          "name": "getActiveUnitList",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<B2BUnitNode[] | undefined>"
        },
        {
          "kind": "Method",
          "name": "getAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "addressId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Address | undefined>"
        },
        {
          "kind": "Method",
          "name": "getAddresses",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<EntitiesModel<Address> | undefined>"
        },
        {
          "kind": "Method",
          "name": "getAddressLoadingStatus",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "addressId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<OrganizationItemStatus<Address>>"
        },
        {
          "kind": "Method",
          "name": "getApprovalProcesses",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<B2BApprovalProcess[] | undefined>"
        },
        {
          "kind": "Method",
          "name": "getChildUnits",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<EntitiesModel<B2BUnitNode>>"
        },
        {
          "kind": "Method",
          "name": "getCostCenters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<EntitiesModel<CostCenter>>"
        },
        {
          "kind": "Method",
          "name": "getErrorState",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgCustomerId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "getList",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<B2BUnitNode[] | undefined>"
        },
        {
          "kind": "Method",
          "name": "getLoadingStatus",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<OrganizationItemStatus<B2BUnit>>"
        },
        {
          "kind": "Method",
          "name": "getTree",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<B2BUnitNode | undefined>"
        },
        {
          "kind": "Method",
          "name": "getUsers",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "roleId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "params",
              "type": "SearchConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
              "shortType": "SearchConfig",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Observable<EntitiesModel<B2BUser> | undefined>"
        },
        {
          "kind": "Method",
          "name": "load",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "loadAddresses",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "loadApprovalProcesses",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "loadList",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "loadTree",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "loadUsers",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "roleId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "params",
              "type": "SearchConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
              "shortType": "SearchConfig",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "sortUnitList",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "a",
              "type": "B2BUnitNode",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
              "shortType": "B2BUnitNode",
              "importPath": "@spartacus/core"
            },
            {
              "name": "b",
              "type": "B2BUnitNode",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
              "shortType": "B2BUnitNode",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "0 | 1 | -1"
        },
        {
          "kind": "Property",
          "name": "store",
          "type": "Store<StateWithOrganization>"
        },
        {
          "kind": "Method",
          "name": "unassignApprover",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "orgCustomerId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "roleId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "unassignRole",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgCustomerId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "roleId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "update",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "unitCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "unit",
              "type": "B2BUnit",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
              "shortType": "B2BUnit",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "updateAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "orgUnitId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "addressId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorCartEntryBundleInfoComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configCartEntryBundleInfoService",
            "type": "ConfiguratorCartEntryBundleInfoService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!ConfiguratorCartEntryBundleInfoService:class",
            "shortType": "ConfiguratorCartEntryBundleInfoService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartItemContext",
            "type": "CartItemContext | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
            "shortType": "CartItemContext",
            "importPath": "@spartacus/cart/base/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Property",
        "name": "cartItemContext",
        "type": "CartItemContext | undefined"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Property",
        "name": "configCartEntryBundleInfoService",
        "type": "ConfiguratorCartEntryBundleInfoService"
      },
      {
        "kind": "Method",
        "name": "getButtonText",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translatedText",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getHiddenItemInfo",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "LineItem",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!LineItem:interface",
            "shortType": "LineItem",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getHiddenItemInfoId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getItemsMsg",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "items",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "hideItems", "type": "boolean" },
      {
        "kind": "Method",
        "name": "isBundleBasedConfigurator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!~\"\\\"@spartacus/cart/base/root\\\"\".OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/cart/base/root"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isDesktop",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "lineItems$",
        "type": "Observable<LineItem[]>"
      },
      {
        "kind": "Property",
        "name": "numberOfLineItems$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "orderEntry$",
        "type": "Observable<OrderEntry>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<UntypedFormControl>"
      },
      {
        "kind": "Property",
        "name": "readonly$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "shouldShowButton$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "toggleItems",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isDesktop",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "isDesktop",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        "topLevelApiElementName": "ConfiguratorCartEntryBundleInfoComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/common"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/common",
      "kind": "Class",
      "name": "ConfiguratorCartEntryBundleInfoComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "commonConfigUtilsService",
              "type": "CommonConfiguratorUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
              "shortType": "CommonConfiguratorUtilsService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configCartEntryBundleInfoService",
              "type": "ConfiguratorCartEntryBundleInfoService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_common!ConfiguratorCartEntryBundleInfoService:class",
              "shortType": "ConfiguratorCartEntryBundleInfoService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_common!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_common!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "cartItemContext",
              "type": "CartItemContext | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
              "shortType": "CartItemContext",
              "importPath": "@spartacus/cart/base/root"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "breakpointService",
          "type": "BreakpointService"
        },
        {
          "kind": "Property",
          "name": "cartItemContext",
          "type": "CartItemContext | undefined"
        },
        {
          "kind": "Property",
          "name": "commonConfigUtilsService",
          "type": "CommonConfiguratorUtilsService"
        },
        {
          "kind": "Property",
          "name": "configCartEntryBundleInfoService",
          "type": "ConfiguratorCartEntryBundleInfoService"
        },
        {
          "kind": "Method",
          "name": "getButtonText",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "translatedText",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getHiddenItemInfo",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "item",
              "type": "LineItem",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_common!LineItem:interface",
              "shortType": "LineItem",
              "importPath": "@spartacus/product-configurator/common"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getHiddenItemInfoId",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getItemsMsg",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "items",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        { "kind": "Property", "name": "hideItems", "type": "boolean" },
        {
          "kind": "Method",
          "name": "isBundleBasedConfigurator",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "entry",
              "type": "OrderEntry",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_common!~\"\\\"@spartacus/cart/base/root\\\"\".OrderEntry:interface",
              "shortType": "OrderEntry",
              "importPath": "@spartacus/cart/base/root"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Property",
          "name": "lineItems$",
          "type": "Observable<LineItem[]>"
        },
        {
          "kind": "Property",
          "name": "numberOfLineItems$",
          "type": "Observable<number>"
        },
        {
          "kind": "Property",
          "name": "orderEntry$",
          "type": "Observable<OrderEntry>"
        },
        {
          "kind": "Property",
          "name": "quantityControl$",
          "type": "Observable<UntypedFormControl>"
        },
        {
          "kind": "Property",
          "name": "readonly$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "shouldShowButton$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "toggleItems",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqAccessLoaderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getCpqAccessData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CpqAccessData>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Property",
        "name": "userIdService",
        "type": "UserIdService | undefined"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "http",
              "type": "HttpClient",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpClient:class",
              "shortType": "HttpClient",
              "importPath": "@angular/common"
            },
            {
              "name": "occEndpointsService",
              "type": "OccEndpointsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased_root!OccEndpointsService:class",
              "shortType": "OccEndpointsService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "http",
              "type": "HttpClient",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpClient:class",
              "shortType": "HttpClient",
              "importPath": "@angular/common"
            },
            {
              "name": "occEndpointsService",
              "type": "OccEndpointsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased_root!OccEndpointsService:class",
              "shortType": "OccEndpointsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased_root!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "CpqAccessLoaderService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased/root"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "userIdService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "userIdService",
          "type": "UserIdService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "userIdService",
          "type": "UserIdService"
        },
        "topLevelApiElementName": "CpqAccessLoaderService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased/root"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased/root",
      "kind": "Class",
      "name": "CpqAccessLoaderService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "http",
              "type": "HttpClient",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpClient:class",
              "shortType": "HttpClient",
              "importPath": "@angular/common"
            },
            {
              "name": "occEndpointsService",
              "type": "OccEndpointsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased_root!OccEndpointsService:class",
              "shortType": "OccEndpointsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userIdService",
              "type": "UserIdService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased_root!UserIdService:class",
              "shortType": "UserIdService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "getCpqAccessData",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<CpqAccessData>"
        },
        { "kind": "Property", "name": "http", "type": "HttpClient" },
        {
          "kind": "Property",
          "name": "occEndpointsService",
          "type": "OccEndpointsService"
        },
        { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "TypeAlias",
    "name": "ConfiguratorAction",
    "namespace": "ConfiguratorActions",
    "members": [
      "CreateConfiguration",
      " | ",
      "CreateConfigurationFail",
      " | ",
      "CreateConfigurationSuccess",
      " | ",
      "ReadConfiguration",
      " | ",
      "ReadConfigurationFail",
      " | ",
      "ReadConfigurationSuccess",
      " | ",
      "UpdateConfiguration",
      " | ",
      "UpdateConfigurationFail",
      " | ",
      "UpdateConfigurationSuccess",
      " | ",
      "UpdateConfigurationFinalizeFail",
      " | ",
      "UpdateConfigurationFinalizeSuccess",
      " | ",
      "UpdatePriceSummary",
      " | ",
      "UpdatePriceSummaryFail",
      " | ",
      "UpdatePriceSummarySuccess",
      " | ",
      "ChangeGroup",
      " | ",
      "ChangeGroupFinalize",
      " | ",
      "GetConfigurationOverview",
      " | ",
      "GetConfigurationOverviewFail",
      " | ",
      "GetConfigurationOverviewSuccess",
      " | ",
      "UpdateConfigurationOverview",
      " | ",
      "UpdateConfigurationOverviewFail",
      " | ",
      "UpdateConfigurationOverviewSuccess",
      " | ",
      "RemoveConfiguration",
      " | ",
      "SetInteractionState",
      " | ",
      "SetMenuParentGroup",
      " | ",
      "SetCurrentGroup",
      " | ",
      "SetGroupsVisited",
      " | ",
      "RemoveProductBoundConfigurations"
    ],
    "breakingChanges": [
      {
        "change": "TYPEALIAS_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "TypeAlias",
        "changeLabel": "changed",
        "changeElementName": "ConfiguratorAction",
        "changeElementCategory": "TOP_LEVEL_API",
        "topLevelApiElementName": "ConfiguratorAction",
        "topLevelApiElementKind": "TypeAlias",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "TypeAlias",
      "name": "ConfiguratorAction",
      "namespace": "ConfiguratorActions",
      "members": [
        "CreateConfiguration",
        " | ",
        "CreateConfigurationFail",
        " | ",
        "CreateConfigurationSuccess",
        " | ",
        "ReadConfiguration",
        " | ",
        "ReadConfigurationFail",
        " | ",
        "ReadConfigurationSuccess",
        " | ",
        "UpdateConfiguration",
        " | ",
        "UpdateConfigurationFail",
        " | ",
        "UpdateConfigurationSuccess",
        " | ",
        "UpdateConfigurationFinalizeFail",
        " | ",
        "UpdateConfigurationFinalizeSuccess",
        " | ",
        "UpdatePriceSummary",
        " | ",
        "UpdatePriceSummaryFail",
        " | ",
        "UpdatePriceSummarySuccess",
        " | ",
        "ChangeGroup",
        " | ",
        "ChangeGroupFinalize",
        " | ",
        "GetConfigurationOverview",
        " | ",
        "GetConfigurationOverviewFail",
        " | ",
        "GetConfigurationOverviewSuccess",
        " | ",
        "UpdateConfigurationOverview",
        " | ",
        "UpdateConfigurationOverviewFail",
        " | ",
        "UpdateConfigurationOverviewSuccess",
        " | ",
        "RemoveConfiguration",
        " | ",
        "SetInteractionState",
        " | ",
        "SetMenuParentGroup",
        " | ",
        "SetCurrentGroup",
        " | ",
        "SetGroupsVisited",
        " | ",
        "RemoveProductBoundConfigurations",
        " | ",
        "CheckConflictDialoge",
        " | ",
        "DissmissConflictDialoge"
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "CreateConfiguration",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        owner: CommonConfigurator.Owner;\n        configIdTemplate?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        owner: CommonConfigurator.Owner;\n        configIdTemplate?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        owner: CommonConfigurator.Owner;\n        configIdTemplate?: string;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        owner: CommonConfigurator.Owner;\n        configIdTemplate?: string;\n        forceReset?: boolean;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        "topLevelApiElementName": "CreateConfiguration",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "payload",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        owner: CommonConfigurator.Owner;\n        configIdTemplate?: string;\n    }"
        },
        "new": {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        owner: CommonConfigurator.Owner;\n        configIdTemplate?: string;\n        forceReset?: boolean;\n    }"
        },
        "topLevelApiElementName": "CreateConfiguration",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "CreateConfiguration",
      "namespace": "ConfiguratorActions",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "payload",
              "type": "{\n        owner: CommonConfigurator.Owner;\n        configIdTemplate?: string;\n        forceReset?: boolean;\n    }",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ]
        },
        {
          "kind": "Property",
          "name": "payload",
          "type": "{\n        owner: CommonConfigurator.Owner;\n        configIdTemplate?: string;\n        forceReset?: boolean;\n    }"
        },
        { "kind": "Property", "name": "type", "type": "" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeCheckBoxComponent",
    "members": [
      {
        "kind": "Method",
        "name": "assembleSingleValue",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Configurator.Value[]"
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "attributeCheckBoxForm",
        "type": "UntypedFormControl"
      },
      { "kind": "Property", "name": "expMode", "type": "boolean" },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      },
      {
        "name": "constructor",
        "kind": "Constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "selectionChange",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "selectionChange",
          "type": "EventEmitter<ConfigFormUpdateEvent>"
        },
        "topLevelApiElementName": "ConfiguratorAttributeCheckBoxComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "name": "constructor",
          "kind": "Constructor",
          "overloadIndex": 1,
          "parameters": []
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeCheckBoxComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeCheckBoxComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "assembleSingleValue",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Configurator.Value[]"
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeCheckBoxForm",
          "type": "UntypedFormControl"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        { "kind": "Property", "name": "expMode", "type": "boolean" },
        {
          "kind": "Method",
          "name": "extractValuePriceFormulaParameters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "ConfiguratorPriceComponentOptions | undefined"
        },
        { "kind": "Property", "name": "group", "type": "string" },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSelect",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "ownerKey", "type": "string" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeCheckBoxListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtilsService",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "allowZeroValueQuantity",
        "type": "boolean"
      },
      {
        "kind": "Property",
        "name": "attributeCheckBoxForms",
        "type": "UntypedFormControl[]"
      },
      {
        "kind": "Property",
        "name": "configUtilsService",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeValueQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "valueCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "formIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeCheckBoxListComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeCheckBoxListComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "allowZeroValueQuantity",
          "type": "boolean"
        },
        {
          "kind": "Property",
          "name": "attributeCheckBoxForms",
          "type": "UntypedFormControl[]"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "configUtilsService",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        { "kind": "Property", "name": "group", "type": "string" },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onChangeQuantity",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "eventObject",
              "type": "any",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onChangeValueQuantity",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "eventObject",
              "type": "any",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "valueCode",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "formIndex",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSelect",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "quantityService",
          "type": "ConfiguratorAttributeQuantityService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeDropDownComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeDropDownForm",
        "type": "UntypedFormControl"
      },
      {
        "kind": "Method",
        "name": "getSelectedValue",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Configurator.Value | undefined"
      },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeDropDownComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeDropDownComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "attributeDropDownForm",
          "type": "UntypedFormControl"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Method",
          "name": "getSelectedValue",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Configurator.Value | undefined"
        },
        { "kind": "Property", "name": "group", "type": "string" },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "quantityService",
          "type": "ConfiguratorAttributeQuantityService"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeFooterComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      { "kind": "Property", "name": "groupId", "type": "string" },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isUserInputEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "input",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "needsUserInputMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "owner",
        "type": "CommonConfigurator.Owner"
      },
      {
        "kind": "Property",
        "name": "showRequiredMessageForUserInput$",
        "type": "Observable<boolean>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeFooterComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeFooterComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "configUtils",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        { "kind": "Property", "name": "groupId", "type": "string" },
        { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
        {
          "kind": "Method",
          "name": "isUserInputEmpty",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "input",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "needsUserInputMessage",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "owner",
          "type": "CommonConfigurator.Owner"
        },
        {
          "kind": "Property",
          "name": "showRequiredMessageForUserInput$",
          "type": "Observable<boolean>"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeHeaderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorUiSettings",
            "type": "ConfiguratorUISettingsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
            "shortType": "ConfiguratorUISettingsConfig",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "configuratorUiSettings",
        "type": "ConfiguratorUISettingsConfig"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      { "kind": "Property", "name": "expMode", "type": "boolean" },
      {
        "kind": "Method",
        "name": "findConflictGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "currentAttribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "focusValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getConflictMessageKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRequiredMessageKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "groupId", "type": "string" },
      {
        "kind": "Property",
        "name": "groupType",
        "type": "Configurator.GroupType"
      },
      { "kind": "Property", "name": "hasImage", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "image",
        "type": "Configurator.Image | undefined"
      },
      {
        "kind": "Method",
        "name": "isAttributeGroup",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "isMultiSelection", "type": "boolean" },
      {
        "kind": "Method",
        "name": "isNavigationToConflictEnabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRequiredAttributeWithDomain",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSingleSelection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "logError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "text",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "navigateToGroup",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onNavigationCompleted",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "callback",
            "type": "() => void",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "owner",
        "type": "CommonConfigurator.Owner"
      },
      {
        "kind": "Method",
        "name": "scrollToAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "showRequiredMessageForDomainAttribute$",
        "type": "Observable<boolean>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorUiSettings",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorUiSettings",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeHeaderComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeHeaderComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorUiSettings",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "configuratorGroupsService",
          "type": "ConfiguratorGroupsService"
        },
        {
          "kind": "Property",
          "name": "configuratorUiSettings",
          "type": "ConfiguratorUISettingsConfig"
        },
        {
          "kind": "Property",
          "name": "configUtils",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        { "kind": "Property", "name": "expMode", "type": "boolean" },
        {
          "kind": "Method",
          "name": "findConflictGroupId",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "currentAttribute",
              "type": "Configurator.Attribute",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
              "shortType": "Configurator.Attribute",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string | undefined"
        },
        {
          "kind": "Method",
          "name": "focusValue",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attribute",
              "type": "Configurator.Attribute",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
              "shortType": "Configurator.Attribute",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "getConflictMessageKey",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getRequiredMessageKey",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "string"
        },
        { "kind": "Property", "name": "groupId", "type": "string" },
        {
          "kind": "Property",
          "name": "groupType",
          "type": "Configurator.GroupType"
        },
        { "kind": "Property", "name": "hasImage", "type": "boolean" },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Property",
          "name": "image",
          "type": "Configurator.Image | undefined"
        },
        {
          "kind": "Method",
          "name": "isAttributeGroup",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isConflictResolutionActive",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        { "kind": "Property", "name": "isMultiSelection", "type": "boolean" },
        {
          "kind": "Method",
          "name": "isNavigationToConflictEnabled",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Property",
          "name": "isNavigationToGroupEnabled",
          "type": "boolean"
        },
        {
          "kind": "Method",
          "name": "isRequiredAttributeWithDomain",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isSingleSelection",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "logError",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "text",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "navigateToGroup",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onNavigationCompleted",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "callback",
              "type": "() => void",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "owner",
          "type": "CommonConfigurator.Owner"
        },
        {
          "kind": "Method",
          "name": "scrollToAttribute",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "name",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "showRequiredMessageForDomainAttribute$",
          "type": "Observable<boolean>"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeInputFieldComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "ConfiguratorUISettingsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
            "shortType": "ConfiguratorUISettingsConfig",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "attributeInputForm",
        "type": "UntypedFormControl"
      },
      {
        "kind": "Property",
        "name": "config",
        "type": "ConfiguratorUISettingsConfig"
      },
      { "kind": "Property", "name": "FALLBACK_DEBOUNCE_TIME", "type": "" },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Property",
        "name": "inputChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      },
      { "kind": "Property", "name": "isRequired", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "ownerType",
        "type": "CommonConfigurator.OwnerType"
      },
      { "kind": "Property", "name": "sub", "type": "Subscription" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "config",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "config",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeInputFieldComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "inputChange",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "inputChange",
          "type": "EventEmitter<ConfigFormUpdateEvent>"
        },
        "topLevelApiElementName": "ConfiguratorAttributeInputFieldComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeInputFieldComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "config",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "attributeInputForm",
          "type": "UntypedFormControl"
        },
        {
          "kind": "Property",
          "name": "config",
          "type": "ConfiguratorUISettingsConfig"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        { "kind": "Property", "name": "FALLBACK_DEBOUNCE_TIME", "type": "" },
        { "kind": "Property", "name": "group", "type": "string" },
        { "kind": "Property", "name": "isRequired", "type": "boolean" },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onChange",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "ownerKey", "type": "string" },
        {
          "kind": "Property",
          "name": "ownerType",
          "type": "CommonConfigurator.OwnerType"
        },
        { "kind": "Property", "name": "sub", "type": "Subscription" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeMultiSelectionBaseComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "disableQuantityActions",
        "type": "boolean"
      },
      { "kind": "Property", "name": "expMode", "type": "boolean" },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractQuantityParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "initialQuantity",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "allowZero",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorAttributeQuantityComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "onHandleAttributeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      },
      { "kind": "Property", "name": "withQuantity", "type": "boolean" },
      {
        "kind": "Property",
        "name": "withQuantityOnAttributeLevel",
        "type": "boolean"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeMultiSelectionBaseComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "selectionChange",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "selectionChange",
          "type": "EventEmitter<ConfigFormUpdateEvent>"
        },
        "topLevelApiElementName": "ConfiguratorAttributeMultiSelectionBaseComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeMultiSelectionBaseComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "disableQuantityActions",
          "type": "boolean"
        },
        { "kind": "Property", "name": "expMode", "type": "boolean" },
        {
          "kind": "Method",
          "name": "extractPriceFormulaParameters",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "ConfiguratorPriceComponentOptions"
        },
        {
          "kind": "Method",
          "name": "extractQuantityParameters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "initialQuantity",
              "type": "number",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "allowZero",
              "type": "boolean",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "ConfiguratorAttributeQuantityComponentOptions"
        },
        {
          "kind": "Method",
          "name": "extractValuePriceFormulaParameters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "ConfiguratorPriceComponentOptions | undefined"
        },
        {
          "kind": "Property",
          "name": "loading$",
          "type": "BehaviorSubject<boolean>"
        },
        {
          "kind": "Method",
          "name": "onHandleAttributeQuantity",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantity",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "ownerKey", "type": "string" },
        {
          "kind": "Property",
          "name": "quantityService",
          "type": "ConfiguratorAttributeQuantityService"
        },
        { "kind": "Property", "name": "withQuantity", "type": "boolean" },
        {
          "kind": "Property",
          "name": "withQuantityOnAttributeLevel",
          "type": "boolean"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeMultiSelectionImageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtilsService",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "attributeCheckBoxForms",
        "type": "UntypedFormControl[]"
      },
      {
        "kind": "Property",
        "name": "configUtilsService",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      { "kind": "Property", "name": "expMode", "type": "boolean" },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeMultiSelectionImageComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "selectionChange",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "selectionChange",
          "type": "EventEmitter<ConfigFormUpdateEvent>"
        },
        "topLevelApiElementName": "ConfiguratorAttributeMultiSelectionImageComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeMultiSelectionImageComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeCheckBoxForms",
          "type": "UntypedFormControl[]"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "configUtilsService",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        { "kind": "Property", "name": "expMode", "type": "boolean" },
        {
          "kind": "Method",
          "name": "extractValuePriceFormulaParameters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "ConfiguratorPriceComponentOptions | undefined"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSelect",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "index",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "ownerKey", "type": "string" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeNumericInputFieldComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configAttributeNumericInputFieldService",
            "type": "ConfiguratorAttributeNumericInputFieldService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInputFieldService:class",
            "shortType": "ConfiguratorAttributeNumericInputFieldService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "config",
            "type": "ConfiguratorUISettingsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
            "shortType": "ConfiguratorUISettingsConfig",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "config",
        "type": "ConfiguratorUISettingsConfig"
      },
      {
        "kind": "Property",
        "name": "configAttributeNumericInputFieldService",
        "type": "ConfiguratorAttributeNumericInputFieldService"
      },
      {
        "kind": "Method",
        "name": "getAdditionalIntervalText",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getAriaLabelComplete",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getDefaultSettings",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "DefaultSettings"
      },
      {
        "kind": "Method",
        "name": "getHelpTextForInterval",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getInfiniteIntervalText",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getInstalledLocale",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "locale",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getIntervalText",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "interval",
            "type": "ConfiguratorAttributeNumericInterval",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInterval:interface",
            "shortType": "ConfiguratorAttributeNumericInterval",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getTextForPartialInterval",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "interval",
            "type": "ConfiguratorAttributeNumericInterval",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInterval:interface",
            "shortType": "ConfiguratorAttributeNumericInterval",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "intervalText",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "formattedMinValue",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "formattedMaxValue",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getTextForRealInterval",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formattedMinValue",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "formattedMaxValue",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "intervalText",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "interval",
            "type": "ConfiguratorAttributeNumericInterval",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInterval:interface",
            "shortType": "ConfiguratorAttributeNumericInterval",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "intervals",
        "type": "ConfiguratorAttributeNumericInterval[]"
      },
      { "kind": "Property", "name": "language", "type": "string" },
      { "kind": "Property", "name": "locale", "type": "string" },
      {
        "kind": "Method",
        "name": "mustDisplayValidationMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "numericFormatPattern", "type": "string" },
      {
        "kind": "Method",
        "name": "reportMissingLocaleData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lang",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configAttributeNumericInputFieldService",
              "type": "ConfiguratorAttributeNumericInputFieldService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInputFieldService:class",
              "shortType": "ConfiguratorAttributeNumericInputFieldService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "config",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configAttributeNumericInputFieldService",
              "type": "ConfiguratorAttributeNumericInputFieldService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInputFieldService:class",
              "shortType": "ConfiguratorAttributeNumericInputFieldService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "config",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeNumericInputFieldComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeNumericInputFieldComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configAttributeNumericInputFieldService",
              "type": "ConfiguratorAttributeNumericInputFieldService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInputFieldService:class",
              "shortType": "ConfiguratorAttributeNumericInputFieldService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "config",
              "type": "ConfiguratorUISettingsConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
              "shortType": "ConfiguratorUISettingsConfig",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "config",
          "type": "ConfiguratorUISettingsConfig"
        },
        {
          "kind": "Property",
          "name": "configAttributeNumericInputFieldService",
          "type": "ConfiguratorAttributeNumericInputFieldService"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Method",
          "name": "getAdditionalIntervalText",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getAriaLabelComplete",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getDefaultSettings",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "DefaultSettings"
        },
        {
          "kind": "Method",
          "name": "getHelpTextForInterval",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getInfiniteIntervalText",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "value",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getInstalledLocale",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "locale",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getIntervalText",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "interval",
              "type": "ConfiguratorAttributeNumericInterval",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInterval:interface",
              "shortType": "ConfiguratorAttributeNumericInterval",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getTextForPartialInterval",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "interval",
              "type": "ConfiguratorAttributeNumericInterval",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInterval:interface",
              "shortType": "ConfiguratorAttributeNumericInterval",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "intervalText",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "formattedMinValue",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "formattedMaxValue",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getTextForRealInterval",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "formattedMinValue",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "formattedMaxValue",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "intervalText",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "interval",
              "type": "ConfiguratorAttributeNumericInterval",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInterval:interface",
              "shortType": "ConfiguratorAttributeNumericInterval",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
        {
          "kind": "Property",
          "name": "intervals",
          "type": "ConfiguratorAttributeNumericInterval[]"
        },
        { "kind": "Property", "name": "language", "type": "string" },
        { "kind": "Property", "name": "locale", "type": "string" },
        {
          "kind": "Method",
          "name": "mustDisplayValidationMessage",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "numericFormatPattern",
          "type": "string"
        },
        {
          "kind": "Method",
          "name": "reportMissingLocaleData",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "lang",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeRadioButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeRadioButtonForm",
        "type": "UntypedFormControl"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeRadioButtonComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeRadioButtonComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "attributeRadioButtonForm",
          "type": "UntypedFormControl"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "quantityService",
          "type": "ConfiguratorAttributeQuantityService"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeReadOnlyComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      { "kind": "Property", "name": "expMode", "type": "boolean" },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "getAriaLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "value",
            "type": "Configurator.Value | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCurrentValueName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "group", "type": "String" },
      {
        "kind": "Method",
        "name": "translate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "resourceKey",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "valueName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "formattedPrice",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "translationService",
        "type": "TranslationService | undefined"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeReadOnlyComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "group",
        "changeElementCategory": "MEMBER",
        "old": { "kind": "Property", "name": "group", "type": "String" },
        "new": { "kind": "Property", "name": "group", "type": "string" },
        "topLevelApiElementName": "ConfiguratorAttributeReadOnlyComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "translationService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService"
        },
        "topLevelApiElementName": "ConfiguratorAttributeReadOnlyComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeReadOnlyComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        { "kind": "Property", "name": "expMode", "type": "boolean" },
        {
          "kind": "Method",
          "name": "extractValuePriceFormulaParameters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "ConfiguratorPriceComponentOptions"
        },
        {
          "kind": "Method",
          "name": "getAriaLabel",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attribute",
              "type": "Configurator.Attribute",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
              "shortType": "Configurator.Attribute",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "value",
              "type": "Configurator.Value | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getCurrentValueName",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attribute",
              "type": "Configurator.Attribute",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
              "shortType": "Configurator.Attribute",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": true,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        { "kind": "Property", "name": "group", "type": "string" },
        {
          "kind": "Method",
          "name": "translate",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "resourceKey",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "valueName",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "attribute",
              "type": "Configurator.Attribute",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
              "shortType": "Configurator.Attribute",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "formattedPrice",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionBaseComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "disableQuantityActions",
        "type": "boolean"
      },
      { "kind": "Property", "name": "expMode", "type": "boolean" },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractQuantityParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "UntypedFormControl",
            "isOptional": true,
            "canonicalReference": "@angular/forms!UntypedFormControl:type",
            "shortType": "UntypedFormControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "ConfiguratorAttributeQuantityComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      {
        "kind": "Method",
        "name": "getAdditionalValueAriaLabel",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getAriaLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getAriaLabelWithoutAdditionalValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getInitialQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "UntypedFormControl",
            "isOptional": true,
            "canonicalReference": "@angular/forms!UntypedFormControl:type",
            "shortType": "UntypedFormControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getSelectedValuePrice",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Configurator.PriceDetails | undefined"
      },
      {
        "kind": "Property",
        "name": "isAdditionalValueAlphaNumeric",
        "type": "boolean"
      },
      {
        "kind": "Property",
        "name": "isAdditionalValueNumeric",
        "type": "boolean"
      },
      { "kind": "Property", "name": "language", "type": "string" },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "onChangeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "form",
            "type": "UntypedFormControl",
            "isOptional": true,
            "canonicalReference": "@angular/forms!UntypedFormControl:type",
            "shortType": "UntypedFormControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onHandleQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelectAdditionalValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "ConfigFormUpdateEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfigFormUpdateEvent:class",
            "shortType": "ConfigFormUpdateEvent",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      { "kind": "Property", "name": "ownerType", "type": "string" },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      { "kind": "Property", "name": "withQuantity", "type": "boolean" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeSingleSelectionBaseComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "selectionChange",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "selectionChange",
          "type": "EventEmitter<ConfigFormUpdateEvent>"
        },
        "topLevelApiElementName": "ConfiguratorAttributeSingleSelectionBaseComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeSingleSelectionBaseComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "disableQuantityActions",
          "type": "boolean"
        },
        { "kind": "Property", "name": "expMode", "type": "boolean" },
        {
          "kind": "Method",
          "name": "extractPriceFormulaParameters",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "ConfiguratorPriceComponentOptions"
        },
        {
          "kind": "Method",
          "name": "extractQuantityParameters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "form",
              "type": "UntypedFormControl",
              "isOptional": true,
              "canonicalReference": "@angular/forms!UntypedFormControl:type",
              "shortType": "UntypedFormControl",
              "importPath": "@angular/forms"
            }
          ],
          "returnType": "ConfiguratorAttributeQuantityComponentOptions"
        },
        {
          "kind": "Method",
          "name": "extractValuePriceFormulaParameters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": true,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "ConfiguratorPriceComponentOptions | undefined"
        },
        {
          "kind": "Method",
          "name": "getAdditionalValueAriaLabel",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getAriaLabel",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attribute",
              "type": "Configurator.Attribute",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
              "shortType": "Configurator.Attribute",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getAriaLabelWithoutAdditionalValue",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "attribute",
              "type": "Configurator.Attribute",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
              "shortType": "Configurator.Attribute",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getInitialQuantity",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "form",
              "type": "UntypedFormControl",
              "isOptional": true,
              "canonicalReference": "@angular/forms!UntypedFormControl:type",
              "shortType": "UntypedFormControl",
              "importPath": "@angular/forms"
            }
          ],
          "returnType": "number"
        },
        {
          "kind": "Method",
          "name": "getSelectedValuePrice",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Configurator.PriceDetails | undefined"
        },
        {
          "kind": "Property",
          "name": "isAdditionalValueAlphaNumeric",
          "type": "boolean"
        },
        {
          "kind": "Property",
          "name": "isAdditionalValueNumeric",
          "type": "boolean"
        },
        { "kind": "Property", "name": "language", "type": "string" },
        {
          "kind": "Property",
          "name": "loading$",
          "type": "BehaviorSubject<boolean>"
        },
        {
          "kind": "Method",
          "name": "onChangeQuantity",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "eventObject",
              "type": "any",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "form",
              "type": "UntypedFormControl",
              "isOptional": true,
              "canonicalReference": "@angular/forms!UntypedFormControl:type",
              "shortType": "UntypedFormControl",
              "importPath": "@angular/forms"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onHandleQuantity",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantity",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSelect",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSelectAdditionalValue",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "ConfigFormUpdateEvent",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfigFormUpdateEvent:class",
              "shortType": "ConfigFormUpdateEvent",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "ownerKey", "type": "string" },
        { "kind": "Property", "name": "ownerType", "type": "string" },
        {
          "kind": "Property",
          "name": "quantityService",
          "type": "ConfiguratorAttributeQuantityService"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        },
        { "kind": "Property", "name": "withQuantity", "type": "boolean" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionBundleDropdownComponent",
    "members": [
      {
        "kind": "Property",
        "name": "attributeDropDownForm",
        "type": "UntypedFormControl"
      },
      {
        "kind": "Method",
        "name": "extractProductCardParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorAttributeProductCardComponentOptions"
      },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectionValue",
        "type": "Configurator.Value"
      },
      {
        "name": "constructor",
        "kind": "Constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "name": "constructor",
          "kind": "Constructor",
          "overloadIndex": 1,
          "parameters": []
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeSingleSelectionBundleDropdownComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeSingleSelectionBundleDropdownComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "quantityService",
              "type": "ConfiguratorAttributeQuantityService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
              "shortType": "ConfiguratorAttributeQuantityService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "attributeDropDownForm",
          "type": "UntypedFormControl"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Method",
          "name": "extractProductCardParameters",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "ConfiguratorAttributeProductCardComponentOptions"
        },
        { "kind": "Property", "name": "group", "type": "string" },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "quantityService",
          "type": "ConfiguratorAttributeQuantityService"
        },
        {
          "kind": "Property",
          "name": "selectionValue",
          "type": "Configurator.Value"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionImageComponent",
    "members": [
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "attributeRadioButtonForm",
        "type": "UntypedFormControl"
      },
      { "kind": "Property", "name": "expMode", "type": "boolean" },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      },
      {
        "name": "constructor",
        "kind": "Constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "selectionChange",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "selectionChange",
          "type": "EventEmitter<ConfigFormUpdateEvent>"
        },
        "topLevelApiElementName": "ConfiguratorAttributeSingleSelectionImageComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "name": "constructor",
          "kind": "Constructor",
          "overloadIndex": 1,
          "parameters": []
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorAttributeSingleSelectionImageComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorAttributeSingleSelectionImageComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attributeComponentContext",
              "type": "ConfiguratorAttributeCompositionContext",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeCompositionContext:class",
              "shortType": "ConfiguratorAttributeCompositionContext",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attribute",
          "type": "Configurator.Attribute"
        },
        {
          "kind": "Property",
          "name": "attributeComponentContext",
          "type": "ConfiguratorAttributeCompositionContext"
        },
        {
          "kind": "Property",
          "name": "attributeRadioButtonForm",
          "type": "UntypedFormControl"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        { "kind": "Property", "name": "expMode", "type": "boolean" },
        {
          "kind": "Method",
          "name": "extractValuePriceFormulaParameters",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "Configurator.Value",
              "isOptional": true,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
              "shortType": "Configurator.Value",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "ConfiguratorPriceComponentOptions | undefined"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onClick",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "ownerKey", "type": "string" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configExpertModeService",
            "type": "ConfiguratorExpertModeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
            "shortType": "ConfiguratorExpertModeService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeLanguage$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "configExpertModeService",
        "type": "ConfiguratorExpertModeService | undefined"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "createGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "currentGroup$",
        "type": "Observable<Configurator.Group>"
      },
      {
        "kind": "Method",
        "name": "displayConflictDescription",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "expMode",
        "type": "Observable<boolean> | undefined"
      },
      {
        "kind": "Method",
        "name": "isConflictGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "uiType",
        "type": "typeof Configurator.UiType"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "ConfigFormUpdateEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfigFormUpdateEvent:class",
            "shortType": "ConfigFormUpdateEvent",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "languageService",
              "type": "LanguageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!LanguageService:class",
              "shortType": "LanguageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "languageService",
              "type": "LanguageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!LanguageService:class",
              "shortType": "LanguageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "activeLanguage$",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "activeLanguage$",
          "type": "Observable<string>"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "configExpertModeService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "configUtils",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "configUtils",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "createGroupId",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "createGroupId",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "groupId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string | undefined"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "displayConflictDescription",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "displayConflictDescription",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "expMode",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "expMode",
          "type": "Observable<boolean> | undefined"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "isConflictGroupType",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "isConflictGroupType",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "groupType",
              "type": "Configurator.GroupType",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
              "shortType": "Configurator.GroupType",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "languageService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "languageService",
          "type": "LanguageService"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "subscriptions",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "subscriptions",
          "type": "Subscription"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "uiType",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "uiType",
          "type": "typeof Configurator.UiType"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "updateConfiguration",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "updateConfiguration",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "ConfigFormUpdateEvent",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfigFormUpdateEvent:class",
              "shortType": "ConfigFormUpdateEvent",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "void"
        },
        "topLevelApiElementName": "ConfiguratorFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorFormComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        {
          "kind": "Property",
          "name": "configRouterExtractorService",
          "type": "ConfiguratorRouterExtractorService"
        },
        {
          "kind": "Property",
          "name": "configuration$",
          "type": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "configuratorGroupsService",
          "type": "ConfiguratorGroupsService"
        },
        {
          "kind": "Property",
          "name": "currentGroup$",
          "type": "Observable<Configurator.Group>"
        },
        {
          "kind": "Method",
          "name": "isDialogActive",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isNavigationToGroupEnabled",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Property",
          "name": "launchDialogService",
          "type": "LaunchDialogService"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "routerData$",
          "type": "Observable<ConfiguratorRouter.Data>"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupMenuComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configGroupMenuService",
            "type": "ConfiguratorGroupMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
            "shortType": "ConfiguratorGroupMenuService",
            "importPath": ""
          },
          {
            "name": "directionService",
            "type": "DirectionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
            "shortType": "DirectionService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configExpertModeService",
            "type": "ConfiguratorExpertModeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
            "shortType": "ConfiguratorExpertModeService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "configCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configGroupMenuService",
            "type": "ConfiguratorGroupMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
            "shortType": "ConfiguratorGroupMenuService",
            "importPath": ""
          },
          {
            "name": "directionService",
            "type": "DirectionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
            "shortType": "DirectionService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "click",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "COMPLETE", "type": "string" },
      {
        "kind": "Method",
        "name": "condenseGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Configurator.Group[]"
      },
      {
        "kind": "Property",
        "name": "configCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configExpertModeService",
        "type": "ConfiguratorExpertModeService | undefined"
      },
      {
        "kind": "Property",
        "name": "configGroupMenuService",
        "type": "ConfiguratorGroupMenuService"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "containsSelectedGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "createAriaControls",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "createIconId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "ICON_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ICON_TYPE:enum",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "currentGroup$",
        "type": "Observable<Configurator.Group>"
      },
      {
        "kind": "Property",
        "name": "directionService",
        "type": "DirectionService"
      },
      {
        "kind": "Property",
        "name": "displayedGroups$",
        "type": "Observable<Configurator.Group[]>"
      },
      {
        "kind": "Property",
        "name": "displayedParentGroup$",
        "type": "Observable<Configurator.Group | undefined>"
      },
      { "kind": "Property", "name": "ERROR", "type": "string" },
      {
        "kind": "Method",
        "name": "getAriaDescribedby",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getAriaLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCondensedParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parentGroup",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<Configurator.Group | undefined>"
      },
      {
        "kind": "Method",
        "name": "getConflictNumber",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getGroupMenuTitle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getGroupStatusStyles",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<Configurator.Group | undefined>"
      },
      {
        "kind": "Method",
        "name": "getTabIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "groups",
        "type": "QueryList<ElementRef<HTMLElement>>"
      },
      {
        "kind": "Property",
        "name": "hamburgerMenuService",
        "type": "HamburgerMenuService"
      },
      {
        "kind": "Method",
        "name": "hasSubGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "ICON", "type": "string" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isBackNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConflictGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConflictGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConflictHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isForwardsNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGroupSelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGroupVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLTRDirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRTLDirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "navigateUp",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routerData$",
        "type": "Observable<ConfiguratorRouter.Data>"
      },
      {
        "kind": "Method",
        "name": "setFocusForMainMenu",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFocusForSubGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "switchGroupOnArrowPress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          },
          {
            "name": "groupIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "targetGroup",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "currentGroup",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      { "kind": "Property", "name": "WARNING", "type": "string" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "configCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configGroupMenuService",
              "type": "ConfiguratorGroupMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
              "shortType": "ConfiguratorGroupMenuService",
              "importPath": ""
            },
            {
              "name": "directionService",
              "type": "DirectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
              "shortType": "DirectionService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configGroupMenuService",
              "type": "ConfiguratorGroupMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
              "shortType": "ConfiguratorGroupMenuService",
              "importPath": ""
            },
            {
              "name": "directionService",
              "type": "DirectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
              "shortType": "DirectionService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorGroupMenuComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "configExpertModeService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        "topLevelApiElementName": "ConfiguratorGroupMenuComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorGroupMenuComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configGroupMenuService",
              "type": "ConfiguratorGroupMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
              "shortType": "ConfiguratorGroupMenuService",
              "importPath": ""
            },
            {
              "name": "directionService",
              "type": "DirectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
              "shortType": "DirectionService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "click",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "COMPLETE", "type": "string" },
        {
          "kind": "Method",
          "name": "condenseGroups",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "groups",
              "type": "Configurator.Group[]",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Configurator.Group[]"
        },
        {
          "kind": "Property",
          "name": "configCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        {
          "kind": "Property",
          "name": "configGroupMenuService",
          "type": "ConfiguratorGroupMenuService"
        },
        {
          "kind": "Property",
          "name": "configRouterExtractorService",
          "type": "ConfiguratorRouterExtractorService"
        },
        {
          "kind": "Property",
          "name": "configuration$",
          "type": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Property",
          "name": "configuratorGroupsService",
          "type": "ConfiguratorGroupsService"
        },
        {
          "kind": "Property",
          "name": "configUtils",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        {
          "kind": "Method",
          "name": "containsSelectedGroup",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "currentGroupId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "createAriaControls",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "groupId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string | undefined"
        },
        {
          "kind": "Method",
          "name": "createIconId",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "type",
              "type": "ICON_TYPE",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ICON_TYPE:enum",
              "shortType": "ICON_TYPE",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "groupId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string | undefined"
        },
        {
          "kind": "Property",
          "name": "currentGroup$",
          "type": "Observable<Configurator.Group>"
        },
        {
          "kind": "Property",
          "name": "directionService",
          "type": "DirectionService"
        },
        {
          "kind": "Property",
          "name": "displayedGroups$",
          "type": "Observable<Configurator.Group[]>"
        },
        {
          "kind": "Property",
          "name": "displayedParentGroup$",
          "type": "Observable<Configurator.Group | undefined>"
        },
        {
          "kind": "Method",
          "name": "displayMenuItem",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<boolean>"
        },
        { "kind": "Property", "name": "ERROR", "type": "string" },
        {
          "kind": "Method",
          "name": "getAriaDescribedby",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<string>"
        },
        {
          "kind": "Method",
          "name": "getAriaLabel",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getCondensedParentGroup",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "parentGroup",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<Configurator.Group | undefined>"
        },
        {
          "kind": "Method",
          "name": "getConflictNumber",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getGroupMenuTitle",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string | undefined"
        },
        {
          "kind": "Method",
          "name": "getGroupStatusStyles",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<string>"
        },
        {
          "kind": "Method",
          "name": "getParentGroup",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<Configurator.Group | undefined>"
        },
        {
          "kind": "Method",
          "name": "getTabIndex",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "currentGroupId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "number"
        },
        {
          "kind": "Property",
          "name": "groups",
          "type": "QueryList<ElementRef<HTMLElement>>"
        },
        {
          "kind": "Property",
          "name": "hamburgerMenuService",
          "type": "HamburgerMenuService"
        },
        {
          "kind": "Method",
          "name": "hasSubGroups",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        { "kind": "Property", "name": "ICON", "type": "string" },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Method",
          "name": "isBackNavigation",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "isOptional": false,
              "canonicalReference": "!KeyboardEvent:interface",
              "shortType": "KeyboardEvent",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isConflictGroup",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isConflictGroupType",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "groupType",
              "type": "Configurator.GroupType",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
              "shortType": "Configurator.GroupType",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isConflictHeader",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isDialogActive",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isForwardsNavigation",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "isOptional": false,
              "canonicalReference": "!KeyboardEvent:interface",
              "shortType": "KeyboardEvent",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isGroupSelected",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "groupId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "currentGroupId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isGroupVisited",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "isLTRDirection",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isRTLDirection",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "navigateUp",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "routerData$",
          "type": "Observable<ConfiguratorRouter.Data>"
        },
        {
          "kind": "Method",
          "name": "setFocusForMainMenu",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "currentGroupId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "setFocusForSubGroup",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "currentGroupId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "switchGroupOnArrowPress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "isOptional": false,
              "canonicalReference": "!KeyboardEvent:interface",
              "shortType": "KeyboardEvent",
              "importPath": ""
            },
            {
              "name": "groupIndex",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "targetGroup",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "currentGroup",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        },
        { "kind": "Property", "name": "WARNING", "type": "string" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupTitleComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configExpertModeService",
            "type": "ConfiguratorExpertModeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
            "shortType": "ConfiguratorExpertModeService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "configuratorStorefrontUtilsService",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService | undefined"
      },
      {
        "kind": "Property",
        "name": "configExpertModeService",
        "type": "ConfiguratorExpertModeService | undefined"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "configuratorStorefrontUtilsService",
        "type": "ConfiguratorStorefrontUtilsService | undefined"
      },
      {
        "kind": "Property",
        "name": "displayedGroup$",
        "type": "Observable<Configurator.Group>"
      },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "getGroupTitle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string | undefined"
      },
      { "kind": "Property", "name": "ghostStyle", "type": "boolean" },
      {
        "kind": "Property",
        "name": "hamburgerMenuService",
        "type": "HamburgerMenuService | undefined"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isMobile",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configuratorStorefrontUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorGroupTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configuratorStorefrontUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configuratorStorefrontUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorGroupTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "breakpointService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "breakpointService",
          "type": "BreakpointService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "breakpointService",
          "type": "BreakpointService"
        },
        "topLevelApiElementName": "ConfiguratorGroupTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "configExpertModeService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        "topLevelApiElementName": "ConfiguratorGroupTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "configuratorStorefrontUtilsService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "configuratorStorefrontUtilsService",
          "type": "ConfiguratorStorefrontUtilsService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "configuratorStorefrontUtilsService",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        "topLevelApiElementName": "ConfiguratorGroupTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "ConfiguratorGroupTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "hamburgerMenuService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "hamburgerMenuService",
          "type": "HamburgerMenuService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "hamburgerMenuService",
          "type": "HamburgerMenuService"
        },
        "topLevelApiElementName": "ConfiguratorGroupTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorGroupTitleComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorGroupsService",
              "type": "ConfiguratorGroupsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
              "shortType": "ConfiguratorGroupsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "breakpointService",
              "type": "BreakpointService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
              "shortType": "BreakpointService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "configuratorStorefrontUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "hamburgerMenuService",
              "type": "HamburgerMenuService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
              "shortType": "HamburgerMenuService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "breakpointService",
          "type": "BreakpointService"
        },
        {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        {
          "kind": "Property",
          "name": "configRouterExtractorService",
          "type": "ConfiguratorRouterExtractorService"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "configuratorGroupsService",
          "type": "ConfiguratorGroupsService"
        },
        {
          "kind": "Property",
          "name": "configuratorStorefrontUtilsService",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        {
          "kind": "Property",
          "name": "displayedGroup$",
          "type": "Observable<Configurator.Group>"
        },
        {
          "kind": "Method",
          "name": "getGroupTitle",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "group",
              "type": "Configurator.Group",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
              "shortType": "Configurator.Group",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string | undefined"
        },
        { "kind": "Property", "name": "ghostStyle", "type": "boolean" },
        {
          "kind": "Property",
          "name": "hamburgerMenuService",
          "type": "HamburgerMenuService"
        },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Method",
          "name": "isMobile",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "subscription", "type": "Subscription" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorStorefrontUtilsService",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeOverviewType",
        "type": "typeof Configurator.AttributeOverviewType"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorStorefrontUtilsService",
        "type": "ConfiguratorStorefrontUtilsService | undefined"
      },
      {
        "kind": "Method",
        "name": "getGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "idPrefix",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getGroupLevelStyleClasses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "level",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "subGroups",
            "type": "Configurator.GroupOverview[] | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupOverview:interface",
            "shortType": "Configurator.GroupOverview",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getStyleClasses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attributes",
            "type": "Configurator.AttributeOverview[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AttributeOverview:interface",
            "shortType": "Configurator.AttributeOverview",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "ghostStyle", "type": "boolean" },
      {
        "kind": "Method",
        "name": "hasAttributes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "hasGroupWithAttributes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.GroupOverview[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupOverview:interface",
            "shortType": "Configurator.GroupOverview",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSameAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attributes",
            "type": "Configurator.AttributeOverview[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AttributeOverview:interface",
            "shortType": "Configurator.AttributeOverview",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configUtils",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configuratorStorefrontUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configuratorStorefrontUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorOverviewFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "configuratorStorefrontUtilsService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "configuratorStorefrontUtilsService",
          "type": "ConfiguratorStorefrontUtilsService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "configuratorStorefrontUtilsService",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        "topLevelApiElementName": "ConfiguratorOverviewFormComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorOverviewFormComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configuratorStorefrontUtilsService",
              "type": "ConfiguratorStorefrontUtilsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
              "shortType": "ConfiguratorStorefrontUtilsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "attributeOverviewType",
          "type": "typeof Configurator.AttributeOverviewType"
        },
        {
          "kind": "Property",
          "name": "configRouterExtractorService",
          "type": "ConfiguratorRouterExtractorService"
        },
        {
          "kind": "Property",
          "name": "configuration$",
          "type": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "configuratorStorefrontUtilsService",
          "type": "ConfiguratorStorefrontUtilsService"
        },
        {
          "kind": "Method",
          "name": "getGroupId",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "idPrefix",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "groupId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getGroupLevelStyleClasses",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "level",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "subGroups",
              "type": "Configurator.GroupOverview[] | undefined",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupOverview:interface",
              "shortType": "Configurator.GroupOverview",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getPrefixId",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "idPrefix",
              "type": "string | undefined",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "groupId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getStyleClasses",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attributes",
              "type": "Configurator.AttributeOverview[]",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AttributeOverview:interface",
              "shortType": "Configurator.AttributeOverview",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "index",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        { "kind": "Property", "name": "ghostStyle", "type": "boolean" },
        {
          "kind": "Method",
          "name": "hasAttributes",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "hasGroupWithAttributes",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "groups",
              "type": "Configurator.GroupOverview[]",
              "isOptional": true,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupOverview:interface",
              "shortType": "Configurator.GroupOverview",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isSameAttribute",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "attributes",
              "type": "Configurator.AttributeOverview[]",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AttributeOverview:interface",
              "shortType": "Configurator.AttributeOverview",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "index",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorPriceComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "directionService",
            "type": "DirectionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
            "shortType": "DirectionService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addSign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sign",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "before",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "compileFormattedValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "priceValue",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "formattedValue",
            "type": "string | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "isRTL",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "directionService",
        "type": "DirectionService | undefined"
      },
      {
        "kind": "Method",
        "name": "displayFormula",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayPriceOnly",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayQuantityAndPrice",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "formula",
        "type": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "isPriceLightedUp",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRTLDirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "price", "type": "string" },
      { "kind": "Property", "name": "priceTotal", "type": "string" },
      {
        "kind": "Method",
        "name": "quantityWithPrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formattedQuantity",
            "type": "string | null",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "removeSign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sign",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "styleClass", "type": "string" }
    ],
    "breakingChanges": [
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "directionService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "directionService",
          "type": "DirectionService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "directionService",
          "type": "DirectionService"
        },
        "topLevelApiElementName": "ConfiguratorPriceComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorPriceComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "directionService",
              "type": "DirectionService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
              "shortType": "DirectionService",
              "importPath": "@spartacus/storefront"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "addSign",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "string | undefined",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "sign",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "before",
              "type": "boolean",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "compileFormattedValue",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "priceValue",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "formattedValue",
              "type": "string | undefined",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "isRTL",
              "type": "boolean",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Property",
          "name": "directionService",
          "type": "DirectionService"
        },
        {
          "kind": "Method",
          "name": "displayFormula",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "displayPriceOnly",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "displayQuantityAndPrice",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Property",
          "name": "formula",
          "type": "ConfiguratorPriceComponentOptions"
        },
        {
          "kind": "Method",
          "name": "isPriceLightedUp",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "isRTLDirection",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        { "kind": "Property", "name": "price", "type": "string" },
        { "kind": "Property", "name": "priceTotal", "type": "string" },
        {
          "kind": "Method",
          "name": "quantityWithPrice",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "formattedQuantity",
              "type": "string | null",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "removeSign",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "value",
              "type": "string | undefined",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "sign",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "string"
        },
        { "kind": "Property", "name": "styleClass", "type": "string" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorProductTitleComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configExpertModeService",
            "type": "ConfiguratorExpertModeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
            "shortType": "ConfiguratorExpertModeService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configExpertModeService",
        "type": "ConfiguratorExpertModeService | undefined"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "expMode",
        "type": "Observable<boolean> | undefined"
      },
      { "kind": "Property", "name": "ghostStyle", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "product$",
        "type": "Observable<Product | undefined>"
      },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      { "kind": "Property", "name": "showMore", "type": "boolean" },
      {
        "kind": "Method",
        "name": "triggerDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "productService",
              "type": "ProductService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "productService",
              "type": "ProductService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "ConfiguratorProductTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "configExpertModeService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        "topLevelApiElementName": "ConfiguratorProductTitleComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "ConfiguratorProductTitleComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuratorCommonsService",
              "type": "ConfiguratorCommonsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
              "shortType": "ConfiguratorCommonsService",
              "importPath": "@spartacus/product-configurator/rulebased"
            },
            {
              "name": "configRouterExtractorService",
              "type": "ConfiguratorRouterExtractorService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
              "shortType": "ConfiguratorRouterExtractorService",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "productService",
              "type": "ProductService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        {
          "kind": "Property",
          "name": "configRouterExtractorService",
          "type": "ConfiguratorRouterExtractorService"
        },
        {
          "kind": "Property",
          "name": "configuration$",
          "type": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Property",
          "name": "configuratorCommonsService",
          "type": "ConfiguratorCommonsService"
        },
        {
          "kind": "Property",
          "name": "expMode",
          "type": "Observable<boolean> | undefined"
        },
        { "kind": "Property", "name": "ghostStyle", "type": "boolean" },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Property",
          "name": "product$",
          "type": "Observable<Product | undefined>"
        },
        {
          "kind": "Property",
          "name": "productService",
          "type": "ProductService"
        },
        { "kind": "Property", "name": "showMore", "type": "boolean" },
        {
          "kind": "Method",
          "name": "triggerDetails",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "VariantConfiguratorOccAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configExpertModeService",
            "type": "ConfiguratorExpertModeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
            "shortType": "ConfiguratorExpertModeService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Property",
        "name": "configExpertModeService",
        "type": "ConfiguratorExpertModeService | undefined"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "createConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configIdTemplate",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Overview>"
      },
      {
        "kind": "Method",
        "name": "getConfiguratorType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getExpModeRequested",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "indicateSendUserForAsm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "HttpContext"
      },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "readConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configurationOwner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readPriceSummary",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "searchVariants",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Variant[]>"
      },
      {
        "kind": "Method",
        "name": "setExpModeActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "expMode",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Method",
        "name": "updateConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ovInput",
            "type": "Configurator.Overview",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Overview:interface",
            "shortType": "Configurator.Overview",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Observable<Configurator.Overview>"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "http",
              "type": "HttpClient",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpClient:class",
              "shortType": "HttpClient",
              "importPath": "@angular/common"
            },
            {
              "name": "occEndpointsService",
              "type": "OccEndpointsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!OccEndpointsService:class",
              "shortType": "OccEndpointsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "converterService",
              "type": "ConverterService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "http",
              "type": "HttpClient",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpClient:class",
              "shortType": "HttpClient",
              "importPath": "@angular/common"
            },
            {
              "name": "occEndpointsService",
              "type": "OccEndpointsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!OccEndpointsService:class",
              "shortType": "OccEndpointsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "converterService",
              "type": "ConverterService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        "topLevelApiElementName": "VariantConfiguratorOccAdapter",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "configExpertModeService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        "topLevelApiElementName": "VariantConfiguratorOccAdapter",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/product-configurator/rulebased"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/product-configurator/rulebased",
      "kind": "Class",
      "name": "VariantConfiguratorOccAdapter",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "http",
              "type": "HttpClient",
              "isOptional": false,
              "canonicalReference": "@angular/common!HttpClient:class",
              "shortType": "HttpClient",
              "importPath": "@angular/common"
            },
            {
              "name": "occEndpointsService",
              "type": "OccEndpointsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!OccEndpointsService:class",
              "shortType": "OccEndpointsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "converterService",
              "type": "ConverterService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConverterService:class",
              "shortType": "ConverterService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "configExpertModeService",
              "type": "ConfiguratorExpertModeService",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorExpertModeService:class",
              "shortType": "ConfiguratorExpertModeService",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "addToCart",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "parameters",
              "type": "Configurator.AddToCartParameters",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AddToCartParameters:interface",
              "shortType": "Configurator.AddToCartParameters",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<CartModification>"
        },
        {
          "kind": "Property",
          "name": "configExpertModeService",
          "type": "ConfiguratorExpertModeService"
        },
        {
          "kind": "Property",
          "name": "converterService",
          "type": "ConverterService"
        },
        {
          "kind": "Method",
          "name": "createConfiguration",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "owner",
              "type": "CommonConfigurator.Owner",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
              "shortType": "CommonConfigurator.Owner",
              "importPath": "@spartacus/product-configurator/common"
            },
            {
              "name": "configIdTemplate",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "forceReset",
              "type": "boolean",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Method",
          "name": "getConfigurationOverview",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Configurator.Overview>"
        },
        {
          "kind": "Method",
          "name": "getConfiguratorType",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "string"
        },
        {
          "kind": "Method",
          "name": "getExpModeRequested",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        { "kind": "Property", "name": "http", "type": "HttpClient" },
        {
          "kind": "Method",
          "name": "indicateSendUserForAsm",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "HttpContext"
        },
        {
          "kind": "Property",
          "name": "occEndpointsService",
          "type": "OccEndpointsService"
        },
        {
          "kind": "Method",
          "name": "readConfiguration",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "groupId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "configurationOwner",
              "type": "CommonConfigurator.Owner",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
              "shortType": "CommonConfigurator.Owner",
              "importPath": "@spartacus/product-configurator/common"
            }
          ],
          "returnType": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Method",
          "name": "readConfigurationForCartEntry",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "parameters",
              "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
              "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
              "importPath": "@spartacus/product-configurator/common"
            }
          ],
          "returnType": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Method",
          "name": "readConfigurationForOrderEntry",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "parameters",
              "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
              "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
              "importPath": "@spartacus/product-configurator/common"
            }
          ],
          "returnType": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Method",
          "name": "readPriceSummary",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Method",
          "name": "searchVariants",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "Observable<Configurator.Variant[]>"
        },
        {
          "kind": "Method",
          "name": "setExpModeActive",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "expMode",
              "type": "boolean",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "updateConfiguration",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "configuration",
              "type": "Configurator.Configuration",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
              "shortType": "Configurator.Configuration",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<Configurator.Configuration>"
        },
        {
          "kind": "Method",
          "name": "updateConfigurationForCartEntry",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "parameters",
              "type": "Configurator.UpdateConfigurationForCartEntryParameters",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateConfigurationForCartEntryParameters:interface",
              "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<CartModification>"
        },
        {
          "kind": "Method",
          "name": "updateConfigurationOverview",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "ovInput",
              "type": "Configurator.Overview",
              "isOptional": false,
              "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Overview:interface",
              "shortType": "Configurator.Overview",
              "importPath": "@spartacus/product-configurator/rulebased"
            }
          ],
          "returnType": "Observable<Configurator.Overview>"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/smartedit/core",
    "kind": "Class",
    "name": "SmartEditService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "zone",
            "type": "NgZone",
            "isOptional": false,
            "canonicalReference": "@angular/core!NgZone:class",
            "shortType": "NgZone",
            "importPath": "@angular/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          },
          {
            "name": "config",
            "type": "SmartEditConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!SmartEditConfig:class",
            "shortType": "SmartEditConfig",
            "importPath": "@spartacus/smartedit/root"
          },
          {
            "name": "scriptLoader",
            "type": "ScriptLoader",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!ScriptLoader:class",
            "shortType": "ScriptLoader",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addPageContract",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsPage",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addSmartEditContract",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "Element",
            "isOptional": false,
            "canonicalReference": "!Element:interface",
            "shortType": "Element",
            "importPath": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "properties",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      { "kind": "Property", "name": "config", "type": "SmartEditConfig" },
      {
        "kind": "Method",
        "name": "goToPreviewPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsPage",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadScript",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "processCmsPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "renderComponent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "componentType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parentId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      },
      {
        "kind": "Method",
        "name": "reprocessPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "scriptLoader", "type": "ScriptLoader" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" },
      { "kind": "Property", "name": "zone", "type": "NgZone" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "cmsService",
              "type": "CmsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!CmsService:class",
              "shortType": "CmsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "baseSiteService",
              "type": "BaseSiteService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!BaseSiteService:class",
              "shortType": "BaseSiteService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "zone",
              "type": "NgZone",
              "isOptional": false,
              "canonicalReference": "@angular/core!NgZone:class",
              "shortType": "NgZone",
              "importPath": "@angular/core"
            },
            {
              "name": "winRef",
              "type": "WindowRef",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            },
            {
              "name": "rendererFactory",
              "type": "RendererFactory2",
              "isOptional": false,
              "canonicalReference": "@angular/core!RendererFactory2:class",
              "shortType": "RendererFactory2",
              "importPath": "@angular/core"
            },
            {
              "name": "config",
              "type": "SmartEditConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!SmartEditConfig:class",
              "shortType": "SmartEditConfig",
              "importPath": "@spartacus/smartedit/root"
            },
            {
              "name": "scriptLoader",
              "type": "ScriptLoader",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!ScriptLoader:class",
              "shortType": "ScriptLoader",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "cmsService",
              "type": "CmsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!CmsService:class",
              "shortType": "CmsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "baseSiteService",
              "type": "BaseSiteService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!BaseSiteService:class",
              "shortType": "BaseSiteService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "zone",
              "type": "NgZone",
              "isOptional": false,
              "canonicalReference": "@angular/core!NgZone:class",
              "shortType": "NgZone",
              "importPath": "@angular/core"
            },
            {
              "name": "winRef",
              "type": "WindowRef",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            },
            {
              "name": "rendererFactory",
              "type": "RendererFactory2",
              "isOptional": false,
              "canonicalReference": "@angular/core!RendererFactory2:class",
              "shortType": "RendererFactory2",
              "importPath": "@angular/core"
            },
            {
              "name": "config",
              "type": "SmartEditConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!SmartEditConfig:class",
              "shortType": "SmartEditConfig",
              "importPath": "@spartacus/smartedit/root"
            }
          ]
        },
        "topLevelApiElementName": "SmartEditService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/smartedit/core"
      },
      {
        "change": "METHOD_DELETED",
        "changeType": "DELETED",
        "changeKind": "Method",
        "changeLabel": "deleted",
        "changeElementName": "loadScript",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Method",
          "name": "loadScript",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        "topLevelApiElementName": "SmartEditService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/smartedit/core"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "scriptLoader",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "scriptLoader",
          "type": "ScriptLoader"
        },
        "topLevelApiElementName": "SmartEditService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/smartedit/core"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/smartedit/core",
      "kind": "Class",
      "name": "SmartEditService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "cmsService",
              "type": "CmsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!CmsService:class",
              "shortType": "CmsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "baseSiteService",
              "type": "BaseSiteService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!BaseSiteService:class",
              "shortType": "BaseSiteService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "zone",
              "type": "NgZone",
              "isOptional": false,
              "canonicalReference": "@angular/core!NgZone:class",
              "shortType": "NgZone",
              "importPath": "@angular/core"
            },
            {
              "name": "winRef",
              "type": "WindowRef",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!WindowRef:class",
              "shortType": "WindowRef",
              "importPath": "@spartacus/core"
            },
            {
              "name": "rendererFactory",
              "type": "RendererFactory2",
              "isOptional": false,
              "canonicalReference": "@angular/core!RendererFactory2:class",
              "shortType": "RendererFactory2",
              "importPath": "@angular/core"
            },
            {
              "name": "config",
              "type": "SmartEditConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!SmartEditConfig:class",
              "shortType": "SmartEditConfig",
              "importPath": "@spartacus/smartedit/root"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "addPageContract",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "cmsPage",
              "type": "Page",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!Page:interface",
              "shortType": "Page",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "addSmartEditContract",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "element",
              "type": "Element",
              "isOptional": false,
              "canonicalReference": "!Element:interface",
              "shortType": "Element",
              "importPath": ""
            },
            {
              "name": "renderer",
              "type": "Renderer2",
              "isOptional": false,
              "canonicalReference": "@angular/core!Renderer2:class",
              "shortType": "Renderer2",
              "importPath": "@angular/core"
            },
            {
              "name": "properties",
              "type": "any",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "baseSiteService",
          "type": "BaseSiteService"
        },
        { "kind": "Property", "name": "cmsService", "type": "CmsService" },
        { "kind": "Property", "name": "config", "type": "SmartEditConfig" },
        {
          "kind": "Method",
          "name": "goToPreviewPage",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "cmsPage",
              "type": "Page",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_core!Page:interface",
              "shortType": "Page",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "processCmsPage",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "renderComponent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "componentId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "componentType",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            },
            {
              "name": "parentId",
              "type": "string",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "boolean"
        },
        {
          "kind": "Property",
          "name": "rendererFactory",
          "type": "RendererFactory2"
        },
        {
          "kind": "Method",
          "name": "reprocessPage",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "routingService",
          "type": "RoutingService"
        },
        { "kind": "Property", "name": "winRef", "type": "WindowRef" },
        { "kind": "Property", "name": "zone", "type": "NgZone" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/smartedit/root",
    "kind": "Class",
    "name": "SmartEditLauncherService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SmartEditConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_root!SmartEditConfig:class",
            "shortType": "SmartEditConfig",
            "importPath": "@spartacus/smartedit/root"
          },
          {
            "name": "location",
            "type": "Location",
            "isOptional": false,
            "canonicalReference": "@angular/common!~Location_2:class",
            "shortType": "Location",
            "importPath": "@angular/common"
          },
          {
            "name": "featureModules",
            "type": "FeatureModulesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_root!FeatureModulesService:class",
            "shortType": "FeatureModulesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "scriptLoader",
            "type": "ScriptLoader",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_root!ScriptLoader:class",
            "shortType": "ScriptLoader",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "config",
            "type": "SmartEditConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_root!SmartEditConfig:class",
            "shortType": "SmartEditConfig",
            "importPath": "@spartacus/smartedit/root"
          },
          {
            "name": "location",
            "type": "Location",
            "isOptional": false,
            "canonicalReference": "@angular/common!~Location_2:class",
            "shortType": "Location",
            "importPath": "@angular/common"
          },
          {
            "name": "featureModules",
            "type": "FeatureModulesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_root!FeatureModulesService:class",
            "shortType": "FeatureModulesService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsTicketId",
        "type": "string | undefined"
      },
      { "kind": "Property", "name": "config", "type": "SmartEditConfig" },
      {
        "kind": "Property",
        "name": "featureModules",
        "type": "FeatureModulesService"
      },
      {
        "kind": "Method",
        "name": "isLaunchedInSmartEdit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "location", "type": "Location" },
      {
        "kind": "Property",
        "name": "scriptLoader",
        "type": "ScriptLoader | undefined"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "config",
              "type": "SmartEditConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!SmartEditConfig:class",
              "shortType": "SmartEditConfig",
              "importPath": "@spartacus/smartedit/root"
            },
            {
              "name": "location",
              "type": "Location",
              "isOptional": false,
              "canonicalReference": "@angular/common!~Location_2:class",
              "shortType": "Location",
              "importPath": "@angular/common"
            },
            {
              "name": "featureModules",
              "type": "FeatureModulesService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!FeatureModulesService:class",
              "shortType": "FeatureModulesService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "scriptLoader",
              "type": "ScriptLoader",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!ScriptLoader:class",
              "shortType": "ScriptLoader",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "config",
              "type": "SmartEditConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!SmartEditConfig:class",
              "shortType": "SmartEditConfig",
              "importPath": "@spartacus/smartedit/root"
            },
            {
              "name": "location",
              "type": "Location",
              "isOptional": false,
              "canonicalReference": "@angular/common!~Location_2:class",
              "shortType": "Location",
              "importPath": "@angular/common"
            },
            {
              "name": "scriptLoader",
              "type": "ScriptLoader",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!ScriptLoader:class",
              "shortType": "ScriptLoader",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "SmartEditLauncherService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/smartedit/root"
      },
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "config",
              "type": "SmartEditConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!SmartEditConfig:class",
              "shortType": "SmartEditConfig",
              "importPath": "@spartacus/smartedit/root"
            },
            {
              "name": "location",
              "type": "Location",
              "isOptional": false,
              "canonicalReference": "@angular/common!~Location_2:class",
              "shortType": "Location",
              "importPath": "@angular/common"
            },
            {
              "name": "featureModules",
              "type": "FeatureModulesService",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!FeatureModulesService:class",
              "shortType": "FeatureModulesService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "config",
              "type": "SmartEditConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!SmartEditConfig:class",
              "shortType": "SmartEditConfig",
              "importPath": "@spartacus/smartedit/root"
            },
            {
              "name": "location",
              "type": "Location",
              "isOptional": false,
              "canonicalReference": "@angular/common!~Location_2:class",
              "shortType": "Location",
              "importPath": "@angular/common"
            },
            {
              "name": "scriptLoader",
              "type": "ScriptLoader",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!ScriptLoader:class",
              "shortType": "ScriptLoader",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "SmartEditLauncherService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/smartedit/root"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureModules",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureModules",
          "type": "FeatureModulesService"
        },
        "topLevelApiElementName": "SmartEditLauncherService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/smartedit/root"
      },
      {
        "change": "PROPERTY_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Property",
        "changeLabel": "changed",
        "changeElementName": "scriptLoader",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "scriptLoader",
          "type": "ScriptLoader | undefined"
        },
        "new": {
          "kind": "Property",
          "name": "scriptLoader",
          "type": "ScriptLoader"
        },
        "topLevelApiElementName": "SmartEditLauncherService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/smartedit/root"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/smartedit/root",
      "kind": "Class",
      "name": "SmartEditLauncherService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "config",
              "type": "SmartEditConfig",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!SmartEditConfig:class",
              "shortType": "SmartEditConfig",
              "importPath": "@spartacus/smartedit/root"
            },
            {
              "name": "location",
              "type": "Location",
              "isOptional": false,
              "canonicalReference": "@angular/common!~Location_2:class",
              "shortType": "Location",
              "importPath": "@angular/common"
            },
            {
              "name": "scriptLoader",
              "type": "ScriptLoader",
              "isOptional": false,
              "canonicalReference": "@spartacus/smartedit_root!ScriptLoader:class",
              "shortType": "ScriptLoader",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "cmsTicketId",
          "type": "string | undefined"
        },
        { "kind": "Property", "name": "config", "type": "SmartEditConfig" },
        {
          "kind": "Method",
          "name": "isLaunchedInSmartEdit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "boolean"
        },
        {
          "kind": "Method",
          "name": "load",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "location", "type": "Location" },
        { "kind": "Property", "name": "scriptLoader", "type": "ScriptLoader" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddressBookComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "AddressBookComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
            "shortType": "AddressBookComponentService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "service",
            "type": "AddressBookComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
            "shortType": "AddressBookComponentService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addAddressButtonHandle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addAddressCancel",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addAddressSubmit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "addresses$",
        "type": "Observable<Address[]>"
      },
      {
        "kind": "Property",
        "name": "addressesStateLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "cancelCard",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cards$", "type": "Observable<Card[]>" },
      { "kind": "Property", "name": "currentAddress", "type": "Address" },
      {
        "kind": "Method",
        "name": "deleteAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressButtonHandle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressCancel",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressSubmit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "editCard", "type": "string | null" },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "getCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "AddressBookComponentService"
      },
      {
        "kind": "Method",
        "name": "setAddressAsDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setEdit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "showAddAddressForm", "type": "boolean" },
      { "kind": "Property", "name": "showEditAddressForm", "type": "boolean" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "service",
              "type": "AddressBookComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
              "shortType": "AddressBookComponentService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "service",
              "type": "AddressBookComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
              "shortType": "AddressBookComponentService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "AddressBookComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/storefront"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "AddressBookComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/storefront"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/storefront",
      "kind": "Class",
      "name": "AddressBookComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "service",
              "type": "AddressBookComponentService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
              "shortType": "AddressBookComponentService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "translation",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Method",
          "name": "addAddressButtonHandle",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "addAddressCancel",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "addAddressSubmit",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "addresses$",
          "type": "Observable<Address[]>"
        },
        {
          "kind": "Property",
          "name": "addressesStateLoading$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "cancelCard",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        { "kind": "Property", "name": "cards$", "type": "Observable<Card[]>" },
        { "kind": "Property", "name": "currentAddress", "type": "Address" },
        {
          "kind": "Method",
          "name": "deleteAddress",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "addressId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "editAddressButtonHandle",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "editAddressCancel",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "editAddressSubmit",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "editCard", "type": "string | null" },
        {
          "kind": "Method",
          "name": "getCardContent",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "Observable<Card>"
        },
        {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "service",
          "type": "AddressBookComponentService"
        },
        {
          "kind": "Method",
          "name": "setAddressAsDefault",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "address",
              "type": "Address",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!Address:interface",
              "shortType": "Address",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "setEdit",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "addressId",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "showAddAddressForm", "type": "boolean" },
        {
          "kind": "Property",
          "name": "showEditAddressForm",
          "type": "boolean"
        },
        {
          "kind": "Property",
          "name": "translation",
          "type": "TranslationService"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MyInterestsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productInterestService",
            "type": "UserInterestsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserInterestsService:class",
            "shortType": "UserInterestsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "productInterestService",
            "type": "UserInterestsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserInterestsService:class",
            "shortType": "UserInterestsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "getInterestsloading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "interests$",
        "type": "Observable<ProductInterestSearchResultUI>"
      },
      {
        "kind": "Property",
        "name": "isRemoveDisabled$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "pagination", "type": "PaginationModel" },
      {
        "kind": "Method",
        "name": "removeInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "relation",
            "type": "ProductInterestEntryRelation & {\n        product$?: Observable<Product | undefined>;\n    }",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductInterestEntryRelation:interface",
            "shortType": "ProductInterestEntryRelation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "sort", "type": "string" },
      {
        "kind": "Method",
        "name": "sortChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sort",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "sortLabels",
        "type": "Observable<{\n        byNameAsc: string;\n        byNameDesc: string;\n    }>"
      },
      {
        "kind": "Property",
        "name": "sortOptions",
        "type": "{\n        code: string;\n        selected: boolean;\n    }[]"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 2,
          "parameters": [
            {
              "name": "productInterestService",
              "type": "UserInterestsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!UserInterestsService:class",
              "shortType": "UserInterestsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productService",
              "type": "ProductService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "productInterestService",
              "type": "UserInterestsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!UserInterestsService:class",
              "shortType": "UserInterestsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productService",
              "type": "ProductService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "MyInterestsComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/storefront"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/storefront",
      "kind": "Class",
      "name": "MyInterestsComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "productInterestService",
              "type": "UserInterestsService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!UserInterestsService:class",
              "shortType": "UserInterestsService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "productService",
              "type": "ProductService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!ProductService:class",
              "shortType": "ProductService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "getInterestsloading$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "interests$",
          "type": "Observable<ProductInterestSearchResultUI>"
        },
        {
          "kind": "Property",
          "name": "isRemoveDisabled$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "ngOnDestroy",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "pageChange",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "page",
              "type": "number",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "pagination", "type": "PaginationModel" },
        {
          "kind": "Method",
          "name": "removeInterest",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "relation",
              "type": "ProductInterestEntryRelation & {\n        product$?: Observable<Product | undefined>;\n    }",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!ProductInterestEntryRelation:interface",
              "shortType": "ProductInterestEntryRelation",
              "importPath": "@spartacus/core"
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "sort", "type": "string" },
        {
          "kind": "Method",
          "name": "sortChange",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "sort",
              "type": "string",
              "isOptional": false,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "sortLabels",
          "type": "Observable<{\n        byNameAsc: string;\n        byNameDesc: string;\n    }>"
        },
        {
          "kind": "Property",
          "name": "sortOptions",
          "type": "{\n        code: string;\n        selected: boolean;\n    }[]"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ParagraphComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "CmsComponentData<CmsParagraphComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsParagraphComponent>"
      },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "router", "type": "Router" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "component",
              "type": "CmsComponentData<CmsParagraphComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/storefront!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "component",
              "type": "CmsComponentData<CmsParagraphComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ]
        },
        "topLevelApiElementName": "ParagraphComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/storefront"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "ParagraphComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/storefront"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/storefront",
      "kind": "Class",
      "name": "ParagraphComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "component",
              "type": "CmsComponentData<CmsParagraphComponent>",
              "isOptional": false,
              "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
              "shortType": "CmsComponentData",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "router",
              "type": "Router",
              "isOptional": false,
              "canonicalReference": "@angular/router!Router:class",
              "shortType": "Router",
              "importPath": "@angular/router"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "component",
          "type": "CmsComponentData<CmsParagraphComponent>"
        },
        {
          "kind": "Method",
          "name": "handleClick",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "Event",
              "isOptional": false,
              "canonicalReference": "!Event:interface",
              "shortType": "Event",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "router", "type": "Router" }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "CloseAccountModalComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userProfile",
            "type": "UserProfileFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserProfileFacade:class",
            "shortType": "UserProfileFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "featureConfigService",
            "type": "FeatureConfigService | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/user_profile_components!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "closeAccount",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dismissModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "featureConfigService",
        "type": "FeatureConfigService | undefined"
      },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isLoggedIn$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "translationService",
        "type": "TranslationService"
      },
      { "kind": "Property", "name": "userProfile", "type": "UserProfileFacade" }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userProfile",
              "type": "UserProfileFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!UserProfileFacade:class",
              "shortType": "UserProfileFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "isOptional": false,
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            },
            {
              "name": "featureConfigService",
              "type": "FeatureConfigService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/user_profile_components!FeatureConfigService:class",
              "shortType": "FeatureConfigService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userProfile",
              "type": "UserProfileFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!UserProfileFacade:class",
              "shortType": "UserProfileFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "isOptional": false,
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ]
        },
        "topLevelApiElementName": "CloseAccountModalComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/user/profile/components"
      },
      {
        "change": "PROPERTY_DELETED",
        "changeType": "DELETED",
        "changeKind": "Property",
        "changeLabel": "deleted",
        "changeElementName": "featureConfigService",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Property",
          "name": "featureConfigService",
          "type": "FeatureConfigService | undefined"
        },
        "topLevelApiElementName": "CloseAccountModalComponent",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/user/profile/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/user/profile/components",
      "kind": "Class",
      "name": "CloseAccountModalComponent",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "translationService",
              "type": "TranslationService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!TranslationService:class",
              "shortType": "TranslationService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "userProfile",
              "type": "UserProfileFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!UserProfileFacade:class",
              "shortType": "UserProfileFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "launchDialogService",
              "type": "LaunchDialogService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!LaunchDialogService:class",
              "shortType": "LaunchDialogService",
              "importPath": "@spartacus/storefront"
            },
            {
              "name": "el",
              "type": "ElementRef",
              "isOptional": false,
              "canonicalReference": "@angular/core!ElementRef:class",
              "shortType": "ElementRef",
              "importPath": "@angular/core"
            }
          ]
        },
        { "kind": "Property", "name": "authService", "type": "AuthService" },
        {
          "kind": "Method",
          "name": "closeAccount",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "dismissModal",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "reason",
              "type": "any",
              "isOptional": true,
              "canonicalReference": "",
              "shortType": "",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "el", "type": "ElementRef" },
        { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
        {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        {
          "kind": "Method",
          "name": "handleClick",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "event",
              "type": "UIEvent",
              "isOptional": false,
              "canonicalReference": "!UIEvent:interface",
              "shortType": "UIEvent",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
        {
          "kind": "Property",
          "name": "isLoading$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "isLoggedIn$",
          "type": "Observable<boolean>"
        },
        {
          "kind": "Property",
          "name": "launchDialogService",
          "type": "LaunchDialogService"
        },
        {
          "kind": "Property",
          "name": "loading$",
          "type": "BehaviorSubject<boolean>"
        },
        {
          "kind": "Method",
          "name": "ngOnInit",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onError",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "routingService",
          "type": "RoutingService"
        },
        {
          "kind": "Property",
          "name": "translationService",
          "type": "TranslationService"
        },
        {
          "kind": "Property",
          "name": "userProfile",
          "type": "UserProfileFacade"
        }
      ]
    }
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdatePasswordComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userPasswordService",
            "type": "UserPasswordFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserPasswordFacade:class",
            "shortType": "UserPasswordFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "userPasswordService",
            "type": "UserPasswordFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserPasswordFacade:class",
            "shortType": "UserPasswordFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService | undefined"
      },
      {
        "kind": "Property",
        "name": "authService",
        "type": "AuthService | undefined"
      },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "form", "type": "UntypedFormGroup" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_error",
            "type": "Error",
            "isOptional": false,
            "canonicalReference": "!Error:interface",
            "shortType": "Error",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "updatePassword",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userPasswordService",
        "type": "UserPasswordFacade"
      }
    ],
    "breakingChanges": [
      {
        "change": "CONSTRUCTOR_CHANGED",
        "changeType": "CHANGED",
        "changeKind": "Constructor",
        "changeLabel": "changed",
        "changeElementName": "constructor",
        "changeElementCategory": "MEMBER",
        "old": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userPasswordService",
              "type": "UserPasswordFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!UserPasswordFacade:class",
              "shortType": "UserPasswordFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authRedirectService",
              "type": "AuthRedirectService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!AuthRedirectService:class",
              "shortType": "AuthRedirectService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authService",
              "type": "AuthService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "new": {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userPasswordService",
              "type": "UserPasswordFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!UserPasswordFacade:class",
              "shortType": "UserPasswordFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authRedirectService",
              "type": "AuthRedirectService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/user_profile_components!AuthRedirectService:class",
              "shortType": "AuthRedirectService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authService",
              "type": "AuthService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        "topLevelApiElementName": "UpdatePasswordComponentService",
        "topLevelApiElementKind": "Class",
        "entryPoint": "@spartacus/user/profile/components"
      }
    ],
    "newApiElement": {
      "entryPoint": "@spartacus/user/profile/components",
      "kind": "Class",
      "name": "UpdatePasswordComponentService",
      "members": [
        {
          "kind": "Constructor",
          "name": "constructor",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "userPasswordService",
              "type": "UserPasswordFacade",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!UserPasswordFacade:class",
              "shortType": "UserPasswordFacade",
              "importPath": "@spartacus/user/profile/root"
            },
            {
              "name": "routingService",
              "type": "RoutingService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
              "shortType": "RoutingService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "globalMessageService",
              "type": "GlobalMessageService",
              "isOptional": false,
              "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
              "shortType": "GlobalMessageService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authRedirectService",
              "type": "AuthRedirectService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/user_profile_components!AuthRedirectService:class",
              "shortType": "AuthRedirectService",
              "importPath": "@spartacus/core"
            },
            {
              "name": "authService",
              "type": "AuthService | undefined",
              "isOptional": true,
              "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
              "shortType": "AuthService",
              "importPath": "@spartacus/core"
            }
          ]
        },
        {
          "kind": "Property",
          "name": "authRedirectService",
          "type": "AuthRedirectService | undefined"
        },
        {
          "kind": "Property",
          "name": "authService",
          "type": "AuthService | undefined"
        },
        {
          "kind": "Property",
          "name": "busy$",
          "type": "BehaviorSubject<boolean>"
        },
        { "kind": "Property", "name": "form", "type": "UntypedFormGroup" },
        {
          "kind": "Property",
          "name": "globalMessageService",
          "type": "GlobalMessageService"
        },
        {
          "kind": "Property",
          "name": "isUpdating$",
          "type": "import(\"rxjs\").Observable<boolean>"
        },
        {
          "kind": "Method",
          "name": "onError",
          "overloadIndex": 1,
          "parameters": [
            {
              "name": "_error",
              "type": "Error",
              "isOptional": false,
              "canonicalReference": "!Error:interface",
              "shortType": "Error",
              "importPath": ""
            }
          ],
          "returnType": "void"
        },
        {
          "kind": "Method",
          "name": "onSuccess",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "routingService",
          "type": "RoutingService"
        },
        {
          "kind": "Method",
          "name": "updatePassword",
          "overloadIndex": 1,
          "parameters": [],
          "returnType": "void"
        },
        {
          "kind": "Property",
          "name": "userPasswordService",
          "type": "UserPasswordFacade"
        }
      ]
    }
  }
]
