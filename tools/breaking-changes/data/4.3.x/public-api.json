[
  {
    "entryPoint": "@spartacus/asm/assets",
    "kind": "Variable",
    "name": "asmTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/asm/assets",
    "kind": "Variable",
    "name": "asmTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "AsmComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "csAgentAuthService",
            "type": "CsAgentAuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!CsAgentAuthService:class",
            "shortType": "CsAgentAuthService",
            "importPath": "@spartacus/asm/root"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "csAgentAuthService",
        "type": "CsAgentAuthService"
      },
      {
        "kind": "Method",
        "name": "isCustomerEmulationSessionInProgress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "logoutCustomer",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "logoutCustomerSupportAgentAndCustomer",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unload",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "AsmComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "AsmMainUiComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "csAgentAuthService",
            "type": "CsAgentAuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!CsAgentAuthService:class",
            "shortType": "CsAgentAuthService",
            "importPath": "@spartacus/asm/root"
          },
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "asmComponentService",
            "type": "AsmComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmComponentService:class",
            "shortType": "AsmComponentService",
            "importPath": "@spartacus/asm/components"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "asmService",
            "type": "AsmService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmService:class",
            "shortType": "AsmService",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "asmComponentService",
        "type": "AsmComponentService"
      },
      { "kind": "Property", "name": "asmService", "type": "AsmService" },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "csAgentAuthService",
        "type": "CsAgentAuthService"
      },
      {
        "kind": "Property",
        "name": "csAgentTokenLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "customer$",
        "type": "Observable<User | undefined>"
      },
      {
        "kind": "Property",
        "name": "customerSupportAgentLoggedIn$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleCustomerSessionStartRedirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hideUi",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isCollapsed$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loginCustomerSupportAgent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ userId, password, }",
            "type": "{\n        userId: string;\n        password: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "logout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "startCustomerEmulationSession",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ customerId }",
            "type": "{\n        customerId?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "startingCustomerSession",
        "type": "boolean"
      },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "AsmSessionTimerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "AsmConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
            "shortType": "AsmConfig",
            "importPath": "@spartacus/asm/core"
          },
          {
            "name": "asmComponentService",
            "type": "AsmComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmComponentService:class",
            "shortType": "AsmComponentService",
            "importPath": "@spartacus/asm/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "changeDetectorRef",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "asmComponentService",
        "type": "AsmComponentService"
      },
      {
        "kind": "Property",
        "name": "changeDetectorRef",
        "type": "ChangeDetectorRef"
      },
      { "kind": "Property", "name": "config", "type": "AsmConfig" },
      {
        "kind": "Method",
        "name": "getTimerStartDelayInSeconds",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "number"
      },
      { "kind": "Property", "name": "interval", "type": "any" },
      {
        "kind": "Property",
        "name": "maxStartDelayInSeconds",
        "type": "number"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetOnCustomerSessionChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetOnNavigate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetTimer",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      { "kind": "Property", "name": "timeLeft", "type": "number" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "AsmToggleUiComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "asmService",
            "type": "AsmService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmService:class",
            "shortType": "AsmService",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      { "kind": "Property", "name": "asmService", "type": "AsmService" },
      { "kind": "Property", "name": "isCollapsed", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "toggleUi",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "CSAgentLoginFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          }
        ]
      },
      { "kind": "Property", "name": "csAgentLoginForm", "type": "FormGroup" },
      { "kind": "Property", "name": "csAgentTokenLoading", "type": "boolean" },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "submitEvent",
        "type": "EventEmitter<{\n        userId: string;\n        password: string;\n    }>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "CustomerEmulationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "asmComponentService",
            "type": "AsmComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmComponentService:class",
            "shortType": "AsmComponentService",
            "importPath": "@spartacus/asm/components"
          },
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "asmComponentService",
        "type": "AsmComponentService"
      },
      { "kind": "Property", "name": "customer", "type": "User" },
      {
        "kind": "Property",
        "name": "isCustomerEmulationSessionInProgress$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "logoutCustomer",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "CustomerSelectionComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "asmService",
            "type": "AsmService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmService:class",
            "shortType": "AsmService",
            "importPath": "@spartacus/asm/core"
          },
          {
            "name": "config",
            "type": "AsmConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!AsmConfig:class",
            "shortType": "AsmConfig",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      { "kind": "Property", "name": "asmService", "type": "AsmService" },
      {
        "kind": "Method",
        "name": "closeResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "AsmConfig" },
      {
        "kind": "Property",
        "name": "customerSelectionForm",
        "type": "FormGroup"
      },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "handleSearchTerm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "searchTermValue",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onDocumentClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "resultList", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "searchResults",
        "type": "Observable<CustomerSearchPage>"
      },
      {
        "kind": "Property",
        "name": "searchResultsLoading$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "searchTerm", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "selectCustomerFromList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customer",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_components!User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedCustomer",
        "type": "User | undefined"
      },
      {
        "kind": "Property",
        "name": "submitEvent",
        "type": "EventEmitter<{\n        customerId?: string | undefined;\n    }>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/components",
    "kind": "Class",
    "name": "FormatTimerPipe",
    "members": [
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "totalSeconds",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "ASM_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Namespace",
    "name": "AsmActions"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "ASM_UI_UPDATE",
    "namespace": "AsmActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "TypeAlias",
    "name": "AsmUiAction",
    "namespace": "AsmActions",
    "members": ["AsmUiUpdate"]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmUiUpdate",
    "namespace": "AsmActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "AsmUi",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!AsmUi:interface",
            "shortType": "AsmUi",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "AsmUi" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "CUSTOMER_SEARCH_FAIL",
    "namespace": "AsmActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "CUSTOMER_SEARCH_RESET",
    "namespace": "AsmActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "CUSTOMER_SEARCH_SUCCESS",
    "namespace": "AsmActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "CUSTOMER_SEARCH",
    "namespace": "AsmActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "TypeAlias",
    "name": "CustomerAction",
    "namespace": "AsmActions",
    "members": [
      "CustomerSearch",
      " | ",
      "CustomerSearchFail",
      " | ",
      "CustomerSearchSuccess",
      " | ",
      "CustomerSearchReset"
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "CustomerSearch",
    "namespace": "AsmActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CustomerSearchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
            "shortType": "CustomerSearchOptions",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CustomerSearchOptions"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "CustomerSearchFail",
    "namespace": "AsmActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "CustomerSearchReset",
    "namespace": "AsmActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "CustomerSearchSuccess",
    "namespace": "AsmActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CustomerSearchPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!CustomerSearchPage:interface",
            "shortType": "CustomerSearchPage",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CustomerSearchPage" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "LOGOUT_CUSTOMER_SUPPORT_AGENT",
    "namespace": "AsmActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "LogoutCustomerSupportAgent",
    "namespace": "AsmActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "customerSearch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "CustomerSearchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
            "shortType": "CustomerSearchOptions",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "Observable<CustomerSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmConfig",
    "members": [
      {
        "kind": "Property",
        "name": "asm",
        "type": "{\n        agentSessionTimer?: {\n            startingDelayInSeconds?: number;\n        };\n        customerSearch?: {\n            maxResults?: number;\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "asmAdapter",
            "type": "AsmAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!AsmAdapter:class",
            "shortType": "AsmAdapter",
            "importPath": "@spartacus/asm/core"
          }
        ]
      },
      { "kind": "Property", "name": "asmAdapter", "type": "AsmAdapter" },
      {
        "kind": "Method",
        "name": "customerSearch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "CustomerSearchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
            "shortType": "CustomerSearchOptions",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "Observable<CustomerSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Namespace",
    "name": "AsmSelectors"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "getAsmState",
    "namespace": "AsmSelectors",
    "type": "MemoizedSelector<StateWithAsm, AsmState>"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "getAsmUi",
    "namespace": "AsmSelectors",
    "type": "MemoizedSelector<StateWithAsm, AsmUi>"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "getCustomerSearchResults",
    "namespace": "AsmSelectors",
    "type": "MemoizedSelector<StateWithAsm, CustomerSearchPage>"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "getCustomerSearchResultsLoaderState",
    "namespace": "AsmSelectors",
    "type": "MemoizedSelector<StateWithAsm, StateUtils.LoaderState<CustomerSearchPage>>"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "getCustomerSearchResultsLoading",
    "namespace": "AsmSelectors",
    "type": "MemoizedSelector<StateWithAsm, boolean>"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithAsm>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "customerSearch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "CustomerSearchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!CustomerSearchOptions:interface",
            "shortType": "CustomerSearchOptions",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "customerSearchReset",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAsmUiState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AsmUi>"
      },
      {
        "kind": "Method",
        "name": "getCustomerSearchResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CustomerSearchPage>"
      },
      {
        "kind": "Method",
        "name": "getCustomerSearchResultsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithAsm>" },
      {
        "kind": "Method",
        "name": "updateAsmUiState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "asmUi",
            "type": "AsmUi",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!AsmUi:interface",
            "shortType": "AsmUi",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "AsmState",
    "members": [
      { "kind": "PropertySignature", "name": "asmUi", "type": "AsmUi" },
      {
        "kind": "PropertySignature",
        "name": "customerSearchResult",
        "type": "StateUtils.LoaderState<CustomerSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Function",
    "name": "asmStatePersistenceFactory",
    "parameters": [
      {
        "name": "asmStatePersistenceService",
        "type": "AsmStatePersistenceService",
        "isOptional": false,
        "canonicalReference": "@spartacus/asm_core!AsmStatePersistenceService:class",
        "shortType": "AsmStatePersistenceService",
        "importPath": "@spartacus/asm/core"
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Class",
    "name": "AsmStatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "statePersistenceService",
            "type": "StatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!StatePersistenceService:class",
            "shortType": "StatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "store",
            "type": "Store<StateWithAsm>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "authStorageService",
            "type": "AsmAuthStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!AsmAuthStorageService:class",
            "shortType": "AsmAuthStorageService",
            "importPath": "@spartacus/asm/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AsmAuthStorageService"
      },
      {
        "kind": "Method",
        "name": "getAsmState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<SyncedAsmState>"
      },
      {
        "kind": "Method",
        "name": "initSync",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onRead",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "state",
            "type": "SyncedAsmState | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_core!SyncedAsmState:interface",
            "shortType": "SyncedAsmState",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "statePersistenceService",
        "type": "StatePersistenceService"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithAsm>" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "AsmUi",
    "members": [
      { "kind": "PropertySignature", "name": "collapsed", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "CUSTOMER_SEARCH_DATA",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Variable",
    "name": "CUSTOMER_SEARCH_PAGE_NORMALIZER",
    "type": "InjectionToken<Converter<any, CustomerSearchPage>>"
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "CustomerSearchOptions",
    "members": [
      { "kind": "PropertySignature", "name": "pageSize", "type": "number" },
      { "kind": "PropertySignature", "name": "query", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "CustomerSearchPage",
    "members": [
      { "kind": "PropertySignature", "name": "entries", "type": "User[]" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "StateWithAsm",
    "members": [
      { "kind": "PropertySignature", "name": "asm", "type": "AsmState" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/core",
    "kind": "Interface",
    "name": "SyncedAsmState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "emulatedUserToken",
        "type": "AuthToken"
      },
      {
        "kind": "PropertySignature",
        "name": "tokenTarget",
        "type": "TokenTarget"
      },
      { "kind": "PropertySignature", "name": "ui", "type": "AsmUi" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/occ",
    "kind": "Class",
    "name": "AsmOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/asm/occ",
    "kind": "Class",
    "name": "OccAsmAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "AsmConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_occ!AsmConfig:class",
            "shortType": "AsmConfig",
            "importPath": "@spartacus/asm/core"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_occ!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      { "kind": "Property", "name": "config", "type": "AsmConfig" },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "customerSearch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "CustomerSearchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_occ!CustomerSearchOptions:interface",
            "shortType": "CustomerSearchOptions",
            "importPath": "@spartacus/asm/core"
          }
        ],
        "returnType": "Observable<CustomerSearchPage>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Variable",
    "name": "ASM_ENABLED_LOCAL_STORAGE_KEY",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Variable",
    "name": "ASM_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Class",
    "name": "AsmAuthHttpHeaderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authStorageService",
            "type": "AuthStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!AuthStorageService:class",
            "shortType": "AuthStorageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "csAgentAuthService",
            "type": "CsAgentAuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!CsAgentAuthService:class",
            "shortType": "CsAgentAuthService",
            "importPath": "@spartacus/asm/root"
          },
          {
            "name": "oAuthLibWrapperService",
            "type": "OAuthLibWrapperService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!OAuthLibWrapperService:class",
            "shortType": "OAuthLibWrapperService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "alterRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "token",
            "type": "AuthToken",
            "isOptional": true,
            "canonicalReference": "@spartacus/asm_root!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "HttpRequest<any>"
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AuthStorageService"
      },
      {
        "kind": "Property",
        "name": "csAgentAuthService",
        "type": "CsAgentAuthService"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleExpiredRefreshToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isCSAgentTokenRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "oAuthLibWrapperService",
        "type": "OAuthLibWrapperService"
      },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "shouldAddAuthorizationHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "shouldCatchError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Class",
    "name": "AsmAuthService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithClientAuth>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "oAuthLibWrapperService",
            "type": "OAuthLibWrapperService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!OAuthLibWrapperService:class",
            "shortType": "OAuthLibWrapperService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authStorageService",
            "type": "AsmAuthStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!AsmAuthStorageService:class",
            "shortType": "AsmAuthStorageService",
            "importPath": "@spartacus/asm/root"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AsmAuthStorageService"
      },
      {
        "kind": "Method",
        "name": "canUserLogin",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "coreLogout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<any>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "isUserLoggedIn",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loginWithCredentials",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "loginWithRedirect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "oAuthLibWrapperService",
        "type": "OAuthLibWrapperService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithClientAuth>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Method",
        "name": "warnAboutLoggedCSAgent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Class",
    "name": "AsmAuthStorageService",
    "members": [
      {
        "kind": "Property",
        "name": "_tokenTarget$",
        "type": "Observable<TokenTarget>"
      },
      {
        "kind": "Method",
        "name": "clearEmulatedUserToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "emulatedUserToken", "type": "AuthToken" },
      {
        "kind": "Method",
        "name": "getEmulatedUserToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "AuthToken | undefined"
      },
      {
        "kind": "Method",
        "name": "getTokenTarget",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<TokenTarget>"
      },
      {
        "kind": "Method",
        "name": "setEmulatedUserToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "AuthToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setTokenTarget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tokenTarget",
            "type": "TokenTarget",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!TokenTarget:enum",
            "shortType": "TokenTarget",
            "importPath": "@spartacus/asm/root"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "switchTokenTargetToCSAgent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "switchTokenTargetToUser",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Class",
    "name": "AsmEnablerService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "location",
            "type": "Location",
            "isOptional": false,
            "canonicalReference": "@angular/common!Location:class",
            "shortType": "Location",
            "importPath": "@angular/common"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "featureModules",
            "type": "FeatureModulesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!FeatureModulesService:class",
            "shortType": "FeatureModulesService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addUi",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "featureModules",
        "type": "FeatureModulesService"
      },
      {
        "kind": "Method",
        "name": "isEnabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isLaunched",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isUsedBefore",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "location", "type": "Location" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Function",
    "name": "asmFactory",
    "parameters": [
      {
        "name": "asmEnablerService",
        "type": "AsmEnablerService",
        "isOptional": false,
        "canonicalReference": "@spartacus/asm_root!AsmEnablerService:class",
        "shortType": "AsmEnablerService",
        "importPath": "@spartacus/asm/root"
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Class",
    "name": "AsmLoaderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Class",
    "name": "AsmRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Class",
    "name": "CsAgentAuthService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authStorageService",
            "type": "AsmAuthStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!AsmAuthStorageService:class",
            "shortType": "AsmAuthStorageService",
            "importPath": "@spartacus/asm/root"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "oAuthLibWrapperService",
            "type": "OAuthLibWrapperService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!OAuthLibWrapperService:class",
            "shortType": "OAuthLibWrapperService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "store",
            "type": "Store",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/asm_root!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "authorizeCustomerSupportAgent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Promise<void>"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AsmAuthStorageService"
      },
      {
        "kind": "Method",
        "name": "getCustomerSupportAgentTokenLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isCustomerEmulated",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isCustomerSupportAgentLoggedIn",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "logoutCustomerSupportAgent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<void>"
      },
      {
        "kind": "Property",
        "name": "oAuthLibWrapperService",
        "type": "OAuthLibWrapperService"
      },
      {
        "kind": "Method",
        "name": "startCustomerEmulationSession",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "store", "type": "Store" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/asm/root",
    "kind": "Enum",
    "name": "TokenTarget",
    "members": ["CSAgent", "User"]
  },
  {
    "entryPoint": "@spartacus/asm",
    "kind": "Class",
    "name": "AsmModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/assets",
    "kind": "Interface",
    "name": "TranslationChunksConfig",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "chunk",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/assets",
    "kind": "Variable",
    "name": "translationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/assets",
    "kind": "Variable",
    "name": "translations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/cart/import-export/assets",
    "kind": "Variable",
    "name": "importExportTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/cart/import-export/assets",
    "kind": "Variable",
    "name": "importExportTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ExportOrderEntriesComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "exportEntriesService",
            "type": "ExportOrderEntriesToCsvService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ExportOrderEntriesToCsvService:class",
            "shortType": "ExportOrderEntriesToCsvService",
            "importPath": "@spartacus/cart/import-export/components"
          },
          {
            "name": "contextService",
            "type": "ContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ContextService:class",
            "shortType": "ContextService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "contextService",
        "type": "ContextService"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "exportCsv",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "exportEntriesService",
        "type": "ExportOrderEntriesToCsvService"
      },
      {
        "kind": "Property",
        "name": "orderEntriesContext$",
        "type": "Observable<OrderEntriesContext | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ExportOrderEntriesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ExportOrderEntriesToCsvService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "exportCsvFileService",
            "type": "ExportCsvFileService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ExportCsvFileService:class",
            "shortType": "ExportCsvFileService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "importExportConfig",
            "type": "ImportExportConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ImportExportConfig:class",
            "shortType": "ImportExportConfig",
            "importPath": "@spartacus/cart/import-export/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "columns", "type": "ExportColumn[]" },
      {
        "kind": "Method",
        "name": "displayExportMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "download",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "downloadCsv",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "exportConfig",
        "type": "ExportConfig | undefined"
      },
      {
        "kind": "Property",
        "name": "exportCsvFileService",
        "type": "ExportCsvFileService"
      },
      {
        "kind": "Method",
        "name": "getResolvedEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<string[][]>"
      },
      {
        "kind": "Method",
        "name": "getTranslatedColumnHeaders",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "importExportConfig",
        "type": "ImportExportConfig"
      },
      {
        "kind": "Method",
        "name": "limitValues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[][]"
      },
      {
        "kind": "Method",
        "name": "resolveValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "combinedKeys",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "resolveValues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string[][]"
      },
      { "kind": "Property", "name": "separator", "type": "string | undefined" },
      {
        "kind": "Property",
        "name": "translationService",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportEntriesDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "context$",
        "type": "Observable<AddOrderEntriesContext>"
      },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      { "kind": "Property", "name": "formState", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "importProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "AddOrderEntriesContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!AddOrderEntriesContext:interface",
            "shortType": "AddOrderEntriesContext",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "{ products, savedCartInfo, }",
            "type": "{\n        products: ProductData[];\n        savedCartInfo?: {\n            name: string;\n            description: string;\n        };\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isNewCartForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "AddOrderEntriesContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!AddOrderEntriesContext:interface",
            "shortType": "AddOrderEntriesContext",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "populateSummary",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "action",
            "type": "ProductImportInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ProductImportInfo:interface",
            "shortType": "ProductImportInfo",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "summary$",
        "type": "BehaviorSubject<ProductImportSummary>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportEntriesFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "importToCartService",
            "type": "ImportProductsFromCsvService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ImportProductsFromCsvService:class",
            "shortType": "ImportProductsFromCsvService",
            "importPath": "@spartacus/cart/import-export/components"
          },
          {
            "name": "importCsvService",
            "type": "ImportCsvFileService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ImportCsvFileService:class",
            "shortType": "ImportCsvFileService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "filesFormValidators",
            "type": "FilesFormValidators",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!FilesFormValidators:class",
            "shortType": "FilesFormValidators",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "importExportConfig",
            "type": "ImportExportConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ImportExportConfig:class",
            "shortType": "ImportExportConfig",
            "importPath": "@spartacus/cart/import-export/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "allowedTypes",
        "type": "string[] | undefined"
      },
      {
        "kind": "Method",
        "name": "buildForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "FormGroup"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "filesFormValidators",
        "type": "FilesFormValidators"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "formSubmitSubject$",
        "type": "Subject<unknown>"
      },
      {
        "kind": "Property",
        "name": "importCsvService",
        "type": "ImportCsvFileService"
      },
      {
        "kind": "Property",
        "name": "importExportConfig",
        "type": "ImportExportConfig"
      },
      {
        "kind": "Property",
        "name": "importToCartService",
        "type": "ImportProductsFromCsvService"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      { "kind": "Property", "name": "loadedFile", "type": "string[][] | null" },
      {
        "kind": "Property",
        "name": "maxEntries",
        "type": "number | undefined"
      },
      { "kind": "Property", "name": "maxSize", "type": "number | undefined" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "separator", "type": "string | undefined" },
      {
        "kind": "Property",
        "name": "submitEvent",
        "type": "EventEmitter<{\n        products: ProductData[];\n    }>"
      },
      { "kind": "Property", "name": "type", "type": "OrderEntriesSource" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportEntriesSummaryComponent",
    "members": [
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "closeEvent",
        "type": "EventEmitter<string>"
      },
      { "kind": "Property", "name": "errorDetailsOpened", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "orderEntriesSource",
        "type": "typeof OrderEntriesSource"
      },
      { "kind": "Property", "name": "summary", "type": "ProductImportSummary" },
      {
        "kind": "Method",
        "name": "toggleErrorList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleWarningList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "type", "type": "string" },
      { "kind": "Property", "name": "warningDetailsOpened", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportExportOrderEntriesComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "contextService",
            "type": "ContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ContextService:class",
            "shortType": "ContextService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "context$",
        "type": "Observable<OrderEntriesContext | undefined>"
      },
      {
        "kind": "Property",
        "name": "contextService",
        "type": "ContextService"
      },
      {
        "kind": "Property",
        "name": "shouldDisplayExport$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "shouldDisplayImport$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportExportOrderEntriesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportOrderEntriesComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "contextService",
            "type": "ContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ContextService:class",
            "shortType": "ContextService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "contextService",
        "type": "ContextService"
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderEntriesContext",
            "type": "OrderEntriesContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!OrderEntriesContext:type",
            "shortType": "OrderEntriesContext",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "orderEntriesContext$",
        "type": "Observable<OrderEntriesContext | undefined>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportOrderEntriesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportProductsFromCsvService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "csvDataToProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "csvData",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ProductData[]"
      },
      {
        "kind": "Method",
        "name": "isDataParsableToProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/components",
    "kind": "Class",
    "name": "ImportToNewSavedCartFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "importToCartService",
            "type": "ImportProductsFromCsvService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ImportProductsFromCsvService:class",
            "shortType": "ImportProductsFromCsvService",
            "importPath": "@spartacus/cart/import-export/components"
          },
          {
            "name": "importCsvService",
            "type": "ImportCsvFileService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ImportCsvFileService:class",
            "shortType": "ImportCsvFileService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "filesFormValidators",
            "type": "FilesFormValidators",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!FilesFormValidators:class",
            "shortType": "FilesFormValidators",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "importExportConfig",
            "type": "ImportExportConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!ImportExportConfig:class",
            "shortType": "ImportExportConfig",
            "importPath": "@spartacus/cart/import-export/core"
          },
          {
            "name": "datePipe",
            "type": "CxDatePipe",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_import-export_components!CxDatePipe:class",
            "shortType": "CxDatePipe",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "FormGroup"
      },
      {
        "kind": "Property",
        "name": "cartNameGeneration",
        "type": "CartNameGeneration | undefined"
      },
      { "kind": "Property", "name": "datePipe", "type": "CxDatePipe" },
      { "kind": "Property", "name": "descriptionMaxLength", "type": "number" },
      {
        "kind": "Property",
        "name": "descriptionsCharacterLeft",
        "type": "number"
      },
      {
        "kind": "Property",
        "name": "filesFormValidators",
        "type": "FilesFormValidators"
      },
      {
        "kind": "Property",
        "name": "importCsvService",
        "type": "ImportCsvFileService"
      },
      {
        "kind": "Property",
        "name": "importExportConfig",
        "type": "ImportExportConfig"
      },
      {
        "kind": "Property",
        "name": "importToCartService",
        "type": "ImportProductsFromCsvService"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      { "kind": "Property", "name": "nameMaxLength", "type": "number" },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFieldValueByDatetime",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nameField",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFieldValueByFileName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nameField",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "submitEvent",
        "type": "EventEmitter<{\n        products: ProductData[];\n        savedCartInfo?: {\n            name: string;\n            description: string;\n        } | undefined;\n    }>"
      },
      {
        "kind": "Method",
        "name": "updateCartName",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Interface",
    "name": "CartNameGeneration",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "fromDateOptions",
        "type": "{\n        prefix?: string;\n        suffix?: string;\n        mask?: string;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "source",
        "type": "CartNameSource"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Enum",
    "name": "CartNameSource",
    "members": ["DATE_TIME", "FILE_NAME"]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Variable",
    "name": "defaultImportExportConfig",
    "type": "ImportExportConfig"
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Interface",
    "name": "ExportColumn",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "Translatable" },
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Interface",
    "name": "ExportConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "additionalColumns",
        "type": "ExportColumn[]"
      },
      {
        "kind": "PropertySignature",
        "name": "downloadDelay",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "fileOptions",
        "type": "ExportFileOptions"
      },
      { "kind": "PropertySignature", "name": "maxEntries", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "messageEnabled",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Interface",
    "name": "FileValidity",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "allowedTypes",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "maxEntries",
        "type": "{\n        [key in OrderEntriesSource]?: number;\n    }"
      },
      { "kind": "PropertySignature", "name": "maxSize", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Interface",
    "name": "ImportConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cartNameGeneration",
        "type": "CartNameGeneration"
      },
      {
        "kind": "PropertySignature",
        "name": "fileValidity",
        "type": "FileValidity"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Class",
    "name": "ImportExportConfig",
    "members": [
      {
        "kind": "Property",
        "name": "cartImportExport",
        "type": "{\n        file: {\n            separator: string;\n        };\n        import?: ImportConfig;\n        export: ExportConfig;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/core",
    "kind": "Class",
    "name": "ImportExportCoreModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<ImportExportCoreModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/import-export/root",
    "kind": "Variable",
    "name": "CART_IMPORT_EXPORT_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/import-export/root",
    "kind": "Class",
    "name": "ImportExportRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/import-export",
    "kind": "Class",
    "name": "ImportExportModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/assets",
    "kind": "Variable",
    "name": "quickOrderTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/assets",
    "kind": "Variable",
    "name": "quickOrderTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "CartQuickOrderFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "applyQuickOrder",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "buildForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartEventsSubscription",
        "type": "Subscription"
      },
      {
        "kind": "Property",
        "name": "cartIsLoading$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      { "kind": "Property", "name": "formBuilder", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "getValidCount",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "min", "type": "number" },
      { "kind": "Property", "name": "minQuantityValue", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "quickOrderForm", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "resetForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "watchAddEntryFailEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "watchAddEntrySuccessEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "watchQuantityChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "CartQuickOrderFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "component",
            "type": "CmsComponentData<CmsQuickOrderComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          },
          {
            "name": "quickOrderStatePersistenceService",
            "type": "QuickOrderStatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderStatePersistenceService:class",
            "shortType": "QuickOrderStatePersistenceService",
            "importPath": "@spartacus/cart/quick-order/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderEntries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "addToCartInformation$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "canAddProduct",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "cartErrors$",
        "type": "BehaviorSubject<QuickOrderAddEntryEvent[]>"
      },
      { "kind": "Property", "name": "cartId$", "type": "Observable<string>" },
      {
        "kind": "Property",
        "name": "cartSuccesses$",
        "type": "BehaviorSubject<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "cartWarnings$",
        "type": "BehaviorSubject<QuickOrderAddEntryEvent[]>"
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearAddToCartInformation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearDeletion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearErrors",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearNonPurchasableError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearStatuses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSuccesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearWarnings",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsQuickOrderComponent>"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "errors$",
        "type": "Observable<QuickOrderAddEntryEvent[]>"
      },
      {
        "kind": "Method",
        "name": "extractErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errors",
            "type": "QuickOrderAddEntryEvent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": "@spartacus/cart/quick-order/root"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "extractSuccesses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errors",
            "type": "QuickOrderAddEntryEvent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": "@spartacus/cart/quick-order/root"
          },
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "extractWarnings",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errors",
            "type": "QuickOrderAddEntryEvent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": "@spartacus/cart/quick-order/root"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "globalMessageType",
        "type": "typeof GlobalMessageType"
      },
      {
        "kind": "Property",
        "name": "isCartStable$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "listLimitReached$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "nonPurchasableError$",
        "type": "Observable<Product | null>"
      },
      {
        "kind": "Property",
        "name": "nonPurchasableProductError$",
        "type": "BehaviorSubject<Product | null>"
      },
      {
        "kind": "Property",
        "name": "quickOrderForm",
        "type": "QuickOrderFormComponent"
      },
      {
        "kind": "Property",
        "name": "quickOrderListLimit$",
        "type": "Observable<number | undefined>"
      },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      {
        "kind": "Property",
        "name": "quickOrderStatePersistenceService",
        "type": "QuickOrderStatePersistenceService"
      },
      {
        "kind": "Method",
        "name": "setErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errors",
            "type": "QuickOrderAddEntryEvent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": "@spartacus/cart/quick-order/root"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setSuccesses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setWarnings",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "warnings",
            "type": "QuickOrderAddEntryEvent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderAddEntryEvent:type",
            "shortType": "QuickOrderAddEntryEvent",
            "importPath": "@spartacus/cart/quick-order/root"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "showAddedToCartSuccessMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "showAddToCartInformation$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Property",
        "name": "softDeletedEntries$",
        "type": "Observable<Record<string, OrderEntry>>"
      },
      {
        "kind": "Property",
        "name": "successes$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "undoDeletion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "warnings$",
        "type": "Observable<QuickOrderAddEntryEvent[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "blurSuggestionBox",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "buildForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "canAddProduct",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "cd",
        "type": "ChangeDetectorRef | undefined"
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": true,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "Config | undefined" },
      {
        "kind": "Method",
        "name": "focusNextChild",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "focusPreviousChild",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getFocusedElement",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "HTMLElement | any"
      },
      {
        "kind": "Method",
        "name": "getFocusedIndex",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getResultElements",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "HTMLElement[]"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "string",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isResultsBoxOpen",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "isSearching", "type": "boolean" },
      {
        "kind": "Method",
        "name": "isSuggestionFocused",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "noResults", "type": "boolean" },
      {
        "kind": "Method",
        "name": "onBlur",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      {
        "kind": "Method",
        "name": "resetSearchSubscription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "results", "type": "Product[]" },
      {
        "kind": "Method",
        "name": "searchProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "searchSubscription",
        "type": "Subscription"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "toggleBodyClass",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "className",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "add",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "watchProductAdd",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subscription"
      },
      {
        "kind": "Method",
        "name": "watchQueryChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subscription"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef | undefined" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderItemComponent",
    "members": [
      { "kind": "Property", "name": "_entry", "type": "OrderEntry" },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_components!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          }
        ]
      },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "index", "type": "number" },
      { "kind": "Property", "name": "loading", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "quantityControl", "type": "FormControl" },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "watchProductAdd",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subscription"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/components",
    "kind": "Class",
    "name": "QuickOrderTableComponent",
    "members": [
      { "kind": "Property", "name": "entries", "type": "OrderEntry[]" },
      { "kind": "Property", "name": "loading", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/core",
    "kind": "Interface",
    "name": "CmsQuickOrderComponent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "quickOrderListLimit",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/core",
    "kind": "Class",
    "name": "QuickOrderCoreModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<QuickOrderCoreModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/core",
    "kind": "Class",
    "name": "QuickOrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productAdapter",
            "type": "ProductAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!ProductAdapter:class",
            "shortType": "ProductAdapter",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addSoftEntryDeletion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          },
          {
            "name": "clearTimeout",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<[OrderEntry[], QuickOrderAddEntryEvent[]]>"
      },
      {
        "kind": "Method",
        "name": "canAdd",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "clearDeletedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearDeleteTimeout",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "clearDeleteTimeouts",
        "type": "Record<string, Subscription>"
      },
      {
        "kind": "Method",
        "name": "clearList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "BehaviorSubject<OrderEntry[]>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "generateOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "OrderEntry"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "BehaviorSubject<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Product | null>"
      },
      {
        "kind": "Method",
        "name": "getProductAdded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subject<string>"
      },
      {
        "kind": "Method",
        "name": "getSoftDeletedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Record<string, OrderEntry>>"
      },
      {
        "kind": "Method",
        "name": "getSoftDeletedEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "OrderEntry"
      },
      {
        "kind": "Method",
        "name": "hardDeleteEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "hardDeleteTimeout", "type": "number" },
      {
        "kind": "Method",
        "name": "isLimitExceeded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isProductOnTheList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "loadEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/cart_quick-order_core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "nonPurchasableProductError$",
        "type": "BehaviorSubject<Product | null>"
      },
      {
        "kind": "Property",
        "name": "productAdapter",
        "type": "ProductAdapter"
      },
      {
        "kind": "Property",
        "name": "productAdded$",
        "type": "Subject<string>"
      },
      {
        "kind": "Property",
        "name": "productSearchConnector",
        "type": "ProductSearchConnector | undefined"
      },
      { "kind": "Property", "name": "quickOrderListLimit", "type": "number" },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "restoreSoftDeletedEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "searchProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "maxProducts",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product[]>"
      },
      {
        "kind": "Method",
        "name": "setListLimit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "limit",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setProductAdded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "softDeletedEntries$",
        "type": "BehaviorSubject<Record<string, OrderEntry>>"
      },
      {
        "kind": "Method",
        "name": "softDeleteEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateEntryQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entryIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/core",
    "kind": "Class",
    "name": "QuickOrderStatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          },
          {
            "name": "siteContextParamsService",
            "type": "SiteContextParamsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!SiteContextParamsService:class",
            "shortType": "SiteContextParamsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "statePersistenceService",
            "type": "StatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!StatePersistenceService:class",
            "shortType": "StatePersistenceService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "initSync",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onRead",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "state",
            "type": "OrderEntry[] | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      {
        "kind": "Property",
        "name": "siteContextParamsService",
        "type": "SiteContextParamsService"
      },
      {
        "kind": "Property",
        "name": "statePersistenceService",
        "type": "StatePersistenceService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Variable",
    "name": "CART_QUICK_ORDER_CORE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Variable",
    "name": "CART_QUICK_ORDER_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Function",
    "name": "defaultQuickOrderComponentsConfig",
    "parameters": [],
    "returnType": "{\n    featureModules: {\n        cartQuickOrder: {\n            cmsComponents: string[];\n        };\n        cartQuickOrderCore: string;\n    };\n}"
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Variable",
    "name": "defaultQuickOrderConfig",
    "type": "QuickOrderConfig"
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Variable",
    "name": "defaultQuickOrderRoutingConfig",
    "type": "RoutingConfig"
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "TypeAlias",
    "name": "QuickOrderAddEntryEvent",
    "members": [
      "{\n    productCode: string;\n    entry?: ",
      "OrderEntry",
      ";\n    quantityAdded?: number;\n    quantity: number;\n    error?: ",
      "HttpErrorModel",
      ";\n}"
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Class",
    "name": "QuickOrderConfig",
    "members": [
      {
        "kind": "Property",
        "name": "quickOrder",
        "type": "{\n        searchForm?: {\n            displayProductImages: boolean;\n            maxProducts: number;\n            minCharactersBeforeRequest: number;\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Class",
    "name": "QuickOrderFacade",
    "members": [
      {
        "kind": "Method",
        "name": "addProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_root!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<[OrderEntry[], QuickOrderAddEntryEvent[]]>"
      },
      {
        "kind": "Method",
        "name": "canAdd",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "clearDeletedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "BehaviorSubject<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Product | null>"
      },
      {
        "kind": "Method",
        "name": "getProductAdded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subject<string>"
      },
      {
        "kind": "Method",
        "name": "getSoftDeletedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Record<string, OrderEntry>>"
      },
      {
        "kind": "Method",
        "name": "hardDeleteEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_root!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "restoreSoftDeletedEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "searchProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "maxProducts",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product[]>"
      },
      {
        "kind": "Method",
        "name": "setListLimit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "limit",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setNonPurchasableProductError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_root!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setProductAdded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "softDeleteEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateEntryQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entryIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Function",
    "name": "quickOrderFacadeFactory",
    "parameters": [],
    "returnType": "QuickOrderFacade"
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Class",
    "name": "QuickOrderOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quickOrderService",
            "type": "QuickOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_root!QuickOrderFacade:class",
            "shortType": "QuickOrderFacade",
            "importPath": "@spartacus/cart/quick-order/root"
          },
          {
            "name": "productConnector",
            "type": "ProductConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_root!ProductConnector:class",
            "shortType": "ProductConnector",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productsData",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "handleErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "results$",
            "type": "Subject<ProductImportInfo>",
            "isOptional": false,
            "canonicalReference": "rxjs!Subject:class",
            "shortType": "Subject",
            "importPath": "rxjs"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_root!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productData",
            "type": "ProductData",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_quick-order_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "results$",
            "type": "Subject<ProductImportInfo>",
            "isOptional": false,
            "canonicalReference": "rxjs!Subject:class",
            "shortType": "Subject",
            "importPath": "rxjs"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "productConnector",
        "type": "ProductConnector"
      },
      {
        "kind": "Property",
        "name": "quickOrderService",
        "type": "QuickOrderFacade"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/quick-order/root",
    "kind": "Class",
    "name": "QuickOrderRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/quick-order",
    "kind": "Class",
    "name": "QuickOrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/assets",
    "kind": "Variable",
    "name": "savedCartTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/assets",
    "kind": "Variable",
    "name": "savedCartTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "AddToSavedCartComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      { "kind": "Property", "name": "loggedIn", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "AddToSavedCartModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Variable",
    "name": "defaultSavedCartFormLayoutConfig",
    "type": "LayoutConfig"
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartDetailsActionComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "savedCartDetailsService",
            "type": "SavedCartDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartDetailsService:class",
            "shortType": "SavedCartDetailsService",
            "importPath": "@spartacus/cart/saved-cart/components"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          },
          {
            "name": "type",
            "type": "SavedCartFormType",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartFormType:enum",
            "shortType": "SavedCartFormType",
            "importPath": "@spartacus/cart/saved-cart/root"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "savedCart$",
        "type": "Observable<Cart | undefined>"
      },
      {
        "kind": "Property",
        "name": "savedCartDetailsService",
        "type": "SavedCartDetailsService"
      },
      {
        "kind": "Property",
        "name": "savedCartFormType",
        "type": "typeof SavedCartFormType"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartDetailsItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "savedCartDetailsService",
            "type": "SavedCartDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartDetailsService:class",
            "shortType": "SavedCartDetailsService",
            "importPath": "@spartacus/cart/saved-cart/components"
          },
          {
            "name": "savedCartService",
            "type": "SavedCartFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartFacade:class",
            "shortType": "SavedCartFacade",
            "importPath": "@spartacus/cart/saved-cart/root"
          },
          {
            "name": "eventSercvice",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "CartLocation",
        "type": "typeof PromotionLocation"
      },
      { "kind": "Property", "name": "eventSercvice", "type": "EventService" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onDeleteComplete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "success",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "savedCart$",
        "type": "Observable<Cart | undefined>"
      },
      {
        "kind": "Property",
        "name": "savedCartDetailsService",
        "type": "SavedCartDetailsService"
      },
      {
        "kind": "Property",
        "name": "savedCartService",
        "type": "SavedCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartDetailsOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "savedCartDetailsService",
            "type": "SavedCartDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartDetailsService:class",
            "shortType": "SavedCartDetailsService",
            "importPath": "@spartacus/cart/saved-cart/components"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "getCartDescription",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartDescription",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCartId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCartItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "totalItems",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCartName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCartQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "totalUnitCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCartTotal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "totalPriceWithTax",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getDateSaved",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "saveTime",
            "type": "string | null",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "savedCart$",
        "type": "Observable<Cart | undefined>"
      },
      {
        "kind": "Property",
        "name": "savedCartDetailsService",
        "type": "SavedCartDetailsService"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "savedCartService",
            "type": "SavedCartFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartFacade:class",
            "shortType": "SavedCartFacade",
            "importPath": "@spartacus/cart/saved-cart/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getCartDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart | undefined>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "savedCart$",
        "type": "Observable<Cart | undefined>"
      },
      { "kind": "Property", "name": "savedCartId$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "savedCartService",
        "type": "SavedCartFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartFormDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "savedCartService",
            "type": "SavedCartFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartFacade:class",
            "shortType": "SavedCartFacade",
            "importPath": "@spartacus/cart/saved-cart/root"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": true,
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cart", "type": "Cart" },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "descriptionMaxLength", "type": "number" },
      {
        "kind": "Property",
        "name": "descriptionsCharacterLeft",
        "type": "number"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isCloneSavedCart", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isDisableDeleteButton$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isDisableRestoreButton$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Property",
        "name": "layoutOption",
        "type": "string | undefined"
      },
      { "kind": "Property", "name": "nameMaxLength", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onComplete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "success",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "patchData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "savedCartFormType",
        "type": "typeof SavedCartFormType"
      },
      {
        "kind": "Property",
        "name": "savedCartService",
        "type": "SavedCartFacade"
      },
      {
        "kind": "Method",
        "name": "saveOrEditCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleIsCloneSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartFormDialogModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Interface",
    "name": "SavedCartFormDialogOptions",
    "members": [
      { "kind": "PropertySignature", "name": "cart", "type": "Cart" },
      { "kind": "PropertySignature", "name": "layoutOption", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "savedCartService",
            "type": "SavedCartFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!SavedCartFacade:class",
            "shortType": "SavedCartFacade",
            "importPath": "@spartacus/cart/saved-cart/root"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "goToSavedCartDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          },
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_components!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "restoreButton", "type": "ElementRef" },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Property",
        "name": "savedCarts$",
        "type": "Observable<Cart[]>"
      },
      {
        "kind": "Property",
        "name": "savedCartService",
        "type": "SavedCartFacade"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/components",
    "kind": "Class",
    "name": "SavedCartListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "SAVED_CART_CLONE_CART_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "SAVED_CART_LIST_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "SAVED_CART_RESTORE_CART_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "SAVED_CART_SAVE_CART_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Namespace",
    "name": "SavedCartActions"
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "CLEAR_CLONE_SAVED_CART",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "CLEAR_RESTORE_SAVED_CART",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "CLEAR_SAVE_CART",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "CLEAR_SAVED_CARTS",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "ClearCloneSavedCart",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "ClearRestoreSavedCart",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "ClearSaveCart",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "ClearSavedCarts",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "CLONE_SAVED_CART_FAIL",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "CLONE_SAVED_CART_SUCCESS",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "CLONE_SAVED_CART",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "CloneSavedCart",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "CloneSavedCartFail",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "CloneSavedCartSuccess",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "EDIT_SAVED_CART_FAIL",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "EDIT_SAVED_CART_SUCCESS",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "EDIT_SAVED_CART",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "EditSavedCart",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "EditSavedCartFail",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "EditSavedCartSuccess",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "LOAD_SAVED_CART_FAIL",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "LOAD_SAVED_CART_SUCCESS",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "LOAD_SAVED_CART",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "LOAD_SAVED_CARTS_FAIL",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "LOAD_SAVED_CARTS_SUCCESS",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "LOAD_SAVED_CARTS",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "LoadSavedCart",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "LoadSavedCartFail",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "LoadSavedCarts",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "LoadSavedCartsFail",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "LoadSavedCartsSuccess",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "LoadSavedCartSuccess",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "RESTORE_SAVED_CART_FAIL",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "RESTORE_SAVED_CART_SUCCESS",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "RESTORE_SAVED_CART",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "RestoreSavedCart",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "RestoreSavedCartFail",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "RestoreSavedCartSuccess",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "SAVE_CART_FAIL",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "SAVE_CART_SUCCESS",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Variable",
    "name": "SAVE_CART",
    "namespace": "SavedCartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SaveCart",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SaveCartFail",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SaveCartSuccess",
    "namespace": "SavedCartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "TypeAlias",
    "name": "SavedCartActions",
    "namespace": "SavedCartActions",
    "members": [
      "LoadSavedCart",
      " | ",
      "LoadSavedCartSuccess",
      " | ",
      "LoadSavedCartFail",
      " | ",
      "LoadSavedCarts",
      " | ",
      "LoadSavedCartsSuccess",
      " | ",
      "LoadSavedCartsFail",
      " | ",
      "ClearSavedCarts",
      " | ",
      "RestoreSavedCart",
      " | ",
      "RestoreSavedCartSuccess",
      " | ",
      "RestoreSavedCartFail",
      " | ",
      "ClearRestoreSavedCart",
      " | ",
      "SaveCart",
      " | ",
      "SaveCartSuccess",
      " | ",
      "SaveCartFail",
      " | ",
      "ClearSaveCart",
      " | ",
      "EditSavedCart",
      " | ",
      "EditSavedCartSuccess",
      " | ",
      "EditSavedCartFail",
      " | ",
      "CloneSavedCart",
      " | ",
      "CloneSavedCartSuccess",
      " | ",
      "CloneSavedCartFail",
      " | ",
      "ClearCloneSavedCart"
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "String",
            "isOptional": false,
            "canonicalReference": "!String:interface",
            "shortType": "String",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "String",
            "isOptional": false,
            "canonicalReference": "!String:interface",
            "shortType": "String",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "SavedCartAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!SavedCartAdapter:class",
            "shortType": "SavedCartAdapter",
            "importPath": "@spartacus/cart/saved-cart/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "SavedCartAdapter" },
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "stateEventService",
            "type": "StateEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!StateEventService:class",
            "shortType": "StateEventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "buildRestoreSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapping",
            "type": "ActionToEventMapping<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!ActionToEventMapping:interface",
            "shortType": "ActionToEventMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "() => void"
      },
      {
        "kind": "Method",
        "name": "buildSaveCartSuccessEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapping",
            "type": "ActionToEventMapping<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!ActionToEventMapping:interface",
            "shortType": "ActionToEventMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "() => void"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "getAction",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionType",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{\n        type: string;\n        payload?: any;\n    }>"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerCloneSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerDeleteSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerEditSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerRestoreSavedCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerSaveCartEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "stateEventService",
        "type": "StateEventService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartEventsModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_savedCartEventBuilder",
            "type": "SavedCartEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!SavedCartEventBuilder:class",
            "shortType": "SavedCartEventBuilder",
            "importPath": "@spartacus/cart/saved-cart/core"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/core",
    "kind": "Class",
    "name": "SavedCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clearCloneSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearRestoreSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSaveCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSavedCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, saveCartName, saveCartDescription, }",
            "type": "{\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart | undefined>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<StateUtils.ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<any>>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadSavedCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, saveCartName, saveCartDescription, }",
            "type": "{\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/occ",
    "kind": "Class",
    "name": "OccSavedCartAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getCloneSavedCartEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSaveCartEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSavedCartEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/occ",
    "kind": "Class",
    "name": "SavedCartOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Variable",
    "name": "CART_SAVED_CART_CORE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Variable",
    "name": "CART_SAVED_CART_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "CloneSavedCartEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "saveTime", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "CloneSavedCartFailEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "saveTime", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "CloneSavedCartSuccessEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Function",
    "name": "defaultCartSavedCartComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "DeleteSavedCartEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "DeleteSavedCartFailEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "DeleteSavedCartSuccessEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "EditSavedCartEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "EditSavedCartFailEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "EditSavedCartSuccessEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "saveTime", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "NewSavedCartOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "savedCartService",
            "type": "SavedCartFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!SavedCartFacade:class",
            "shortType": "SavedCartFacade",
            "importPath": "@spartacus/cart/saved-cart/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "savedCartInfo",
            "type": "{\n        name: string;\n        description: string;\n    }",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "savedCartInfo",
            "type": "{\n        name: string;\n        description: string;\n    }",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Property",
        "name": "savedCartService",
        "type": "SavedCartFacade"
      },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "RestoreSavedCartEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "saveTime", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "RestoreSavedCartFailEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "saveTime", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "RestoreSavedCartSuccessEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SaveCartEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SaveCartFailEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SaveCartSuccessEvent",
    "members": [
      { "kind": "Property", "name": "saveCartDescription", "type": "string" },
      { "kind": "Property", "name": "saveCartName", "type": "string" },
      { "kind": "Property", "name": "saveTime", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SavedCartEvent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SavedCartFacade",
    "members": [
      {
        "kind": "Method",
        "name": "clearCloneSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearRestoreSavedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSaveCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearSavedCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cloneSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, saveCartName, saveCartDescription, }",
            "type": "{\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart | undefined>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCloneSavedCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRestoreSavedCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSaveCartProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<StateUtils.ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<any>>"
      },
      {
        "kind": "Method",
        "name": "getSavedCartListProcessLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadSavedCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "restoreSavedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, saveCartName, saveCartDescription, }",
            "type": "{\n        cartId: string;\n        saveCartName?: string;\n        saveCartDescription?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Enum",
    "name": "SavedCartFormType",
    "members": ["DELETE", "EDIT", "RESTORE", "SAVE"]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SavedCartOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "savedCartService",
            "type": "SavedCartFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!SavedCartFacade:class",
            "shortType": "SavedCartFacade",
            "importPath": "@spartacus/cart/saved-cart/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cart_saved-cart_root!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "savedCartId$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "savedCartService",
        "type": "SavedCartFacade"
      },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart/root",
    "kind": "Class",
    "name": "SavedCartRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cart/saved-cart",
    "kind": "Class",
    "name": "SavedCartModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cdc/components",
    "kind": "Class",
    "name": "CdcComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cdc/components",
    "kind": "Class",
    "name": "GigyaRaasComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "CmsComponentData<GigyaRaasComponentData>",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cdcConfig",
            "type": "CdcConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!CdcConfig:class",
            "shortType": "CdcConfig",
            "importPath": "@spartacus/cdc/root"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cdcJSService",
            "type": "CdcJsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!CdcJsService:class",
            "shortType": "CdcJsService",
            "importPath": "@spartacus/cdc/root"
          },
          {
            "name": "zone",
            "type": "NgZone",
            "isOptional": false,
            "canonicalReference": "@angular/core!NgZone:class",
            "shortType": "NgZone",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<GigyaRaasComponentData>"
      },
      {
        "kind": "Method",
        "name": "displayInEmbedMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "GigyaRaasComponentData",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!GigyaRaasComponentData:interface",
            "shortType": "GigyaRaasComponentData",
            "importPath": "@spartacus/cdc/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayScreenSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "GigyaRaasComponentData",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!GigyaRaasComponentData:interface",
            "shortType": "GigyaRaasComponentData",
            "importPath": "@spartacus/cdc/core"
          },
          {
            "name": "lang",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSessionExpirationValue",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isLoginScreenSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "GigyaRaasComponentData",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!GigyaRaasComponentData:interface",
            "shortType": "GigyaRaasComponentData",
            "importPath": "@spartacus/cdc/core"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "jsError$", "type": "Observable<boolean>" },
      {
        "kind": "Property",
        "name": "jsLoaded$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "language$", "type": "Observable<string>" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "renderScreenSet", "type": "boolean" },
      {
        "kind": "Method",
        "name": "showScreenSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "GigyaRaasComponentData",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_components!GigyaRaasComponentData:interface",
            "shortType": "GigyaRaasComponentData",
            "importPath": "@spartacus/cdc/core"
          },
          {
            "name": "lang",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cdc/components",
    "kind": "Class",
    "name": "GigyaRaasModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cdc/core",
    "kind": "Class",
    "name": "CdcCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cdc/core",
    "kind": "Interface",
    "name": "GigyaRaasComponentData",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "advancedConfiguration",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "containerID", "type": "string" },
      { "kind": "PropertySignature", "name": "embed", "type": "string" },
      { "kind": "PropertySignature", "name": "linkText", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "profileEdit", "type": "string" },
      { "kind": "PropertySignature", "name": "screenSet", "type": "string" },
      { "kind": "PropertySignature", "name": "startScreen", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Variable",
    "name": "CDC_CORE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Variable",
    "name": "CDC_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Class",
    "name": "CdcAuthFacade",
    "members": [
      {
        "kind": "Method",
        "name": "loginWithCustomCdcFlow",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "UID",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "UIDSignature",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "signatureTimestamp",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "idToken",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "baseSite",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loginWithToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "Partial<AuthToken> & {\n        expires_in?: number;\n    }",
            "isOptional": false,
            "canonicalReference": "!Partial:type",
            "shortType": "Partial",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Class",
    "name": "CdcConfig",
    "members": [
      {
        "kind": "Property",
        "name": "cdc",
        "type": "{\n        baseSite: string;\n        javascriptUrl: string;\n        sessionExpiration: number;\n    }[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Function",
    "name": "cdcJsFactory",
    "parameters": [
      {
        "name": "cdcJsService",
        "type": "CdcJsService",
        "isOptional": false,
        "canonicalReference": "@spartacus/cdc_root!CdcJsService:class",
        "shortType": "CdcJsService",
        "importPath": "@spartacus/cdc/root"
      },
      {
        "name": "configInit",
        "type": "ConfigInitializerService",
        "isOptional": false,
        "canonicalReference": "@spartacus/cdc_root!ConfigInitializerService:class",
        "shortType": "ConfigInitializerService",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "() => Promise<Config>"
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Class",
    "name": "CdcJsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cdcConfig",
            "type": "CdcConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!CdcConfig:class",
            "shortType": "CdcConfig",
            "importPath": "@spartacus/cdc/root"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "scriptLoader",
            "type": "ScriptLoader",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!ScriptLoader:class",
            "shortType": "ScriptLoader",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cdcAuth",
            "type": "CdcAuthFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!CdcAuthFacade:class",
            "shortType": "CdcAuthFacade",
            "importPath": "@spartacus/cdc/root"
          },
          {
            "name": "auth",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "zone",
            "type": "NgZone",
            "isOptional": false,
            "canonicalReference": "@angular/core!NgZone:class",
            "shortType": "NgZone",
            "importPath": "@angular/core"
          },
          {
            "name": "userProfileFacade",
            "type": "UserProfileFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!UserProfileFacade:class",
            "shortType": "UserProfileFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "platform",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addCdcEventHandlers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "baseSite",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "auth", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      { "kind": "Property", "name": "cdcAuth", "type": "CdcAuthFacade" },
      { "kind": "Property", "name": "cdcConfig", "type": "CdcConfig" },
      {
        "kind": "Method",
        "name": "didLoad",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "didScriptFailToLoad",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "errorLoading$",
        "type": "ReplaySubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      },
      {
        "kind": "Method",
        "name": "loadCdcJavascript",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "loaded$",
        "type": "ReplaySubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onLoginEventHandler",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "baseSite",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "response",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onProfileUpdateEventHandler",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "platform", "type": "any" },
      {
        "kind": "Method",
        "name": "registerEventListeners",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "baseSite",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "scriptLoader", "type": "ScriptLoader" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "userProfileFacade",
        "type": "UserProfileFacade"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" },
      { "kind": "Property", "name": "zone", "type": "NgZone" }
    ]
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Class",
    "name": "CdcLogoutGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "auth",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cms",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "protectedRoutes",
            "type": "ProtectedRoutesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!ProtectedRoutesService:class",
            "shortType": "ProtectedRoutesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cdc_root!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "auth", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "cms", "type": "CmsService" },
      {
        "kind": "Method",
        "name": "logout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<any>"
      },
      {
        "kind": "Method",
        "name": "logoutFromCdc",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "protectedRoutes",
        "type": "ProtectedRoutesService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Class",
    "name": "CdcRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cdc/root",
    "kind": "Function",
    "name": "defaultCdcComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/cdc",
    "kind": "Class",
    "name": "CdcModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "AddedToCartPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "{\n        productQty: number;\n        productSku: string;\n        productName: string;\n        cartId: string;\n        cartCode: string;\n        categories: Array<string>;\n        productCategoryName: string;\n        productCategory: string;\n        productPrice: Number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "AttributesDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cxAttributes",
        "type": "{\n        [attribute: string]: any;\n    }"
      },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "AttributesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "BrandPageVisitedEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "{\n        brandCode: string;\n        brandName: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "data",
        "type": "{\n        brandCode: string;\n        brandName: string;\n    }"
      },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "CarouselEvent",
    "members": [
      { "kind": "PropertySignature", "name": "carouselId", "type": "string" },
      { "kind": "PropertySignature", "name": "carouselName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "metadata",
        "type": "MerchandisingMetadata"
      },
      { "kind": "PropertySignature", "name": "strategyId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CartSnapshotPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "{\n        cart: Cart;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CartViewPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CategoryViewPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "{\n        productCategory: string;\n        productCategoryName: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsBackendConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cdsBackendNotificationAdapter",
            "type": "CdsBackendNotificationAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsBackendNotificationAdapter:class",
            "shortType": "CdsBackendNotificationAdapter",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "notifySuccessfulLogin",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<void>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsBackendNotificationAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "notifySuccessfulLogin",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<void>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsConfig",
    "members": [
      {
        "kind": "Property",
        "name": "cds",
        "type": "{\n        tenant?: string;\n        baseUrl?: string;\n        consentTemplateId?: string;\n        endpoints?: CdsEndpoints;\n        merchandising?: MerchandisingConfig;\n        profileTag?: ProfileTagConfig;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Function",
    "name": "cdsConfigValidator",
    "parameters": [
      {
        "name": "config",
        "type": "CdsConfig",
        "isOptional": false,
        "canonicalReference": "@spartacus/cds!CdsConfig:class",
        "shortType": "CdsConfig",
        "importPath": "@spartacus/cds"
      }
    ],
    "returnType": "string | void"
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "CdsEndpoints",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "strategyProducts",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsMerchandisingProductService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "strategyConnector",
            "type": "MerchandisingStrategyConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingStrategyConnector:class",
            "shortType": "MerchandisingStrategyConnector",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "merchandisingUserContextService",
            "type": "CdsMerchandisingUserContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsMerchandisingUserContextService:class",
            "shortType": "CdsMerchandisingUserContextService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "merchandisingSiteContextService",
            "type": "CdsMerchandisingSiteContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsMerchandisingSiteContextService:class",
            "shortType": "CdsMerchandisingSiteContextService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "merchandisingSearchContextService",
            "type": "CdsMerchandisingSearchContextService",
            "isOptional": true,
            "canonicalReference": "@spartacus/cds!CdsMerchandisingSearchContextService:class",
            "shortType": "CdsMerchandisingSearchContextService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "strategyConnector",
            "type": "MerchandisingStrategyConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingStrategyConnector:class",
            "shortType": "MerchandisingStrategyConnector",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "merchandisingUserContextService",
            "type": "CdsMerchandisingUserContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsMerchandisingUserContextService:class",
            "shortType": "CdsMerchandisingUserContextService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "merchandisingSiteContextService",
            "type": "CdsMerchandisingSiteContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsMerchandisingSiteContextService:class",
            "shortType": "CdsMerchandisingSiteContextService",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "loadProductsForStrategy",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "strategyId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "numberToDisplay",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<StrategyProducts>"
      },
      {
        "kind": "Property",
        "name": "merchandisingSearchContextService",
        "type": "CdsMerchandisingSearchContextService"
      },
      {
        "kind": "Property",
        "name": "merchandisingSiteContextService",
        "type": "CdsMerchandisingSiteContextService"
      },
      {
        "kind": "Property",
        "name": "merchandisingUserContextService",
        "type": "CdsMerchandisingUserContextService"
      },
      {
        "kind": "Property",
        "name": "strategyConnector",
        "type": "MerchandisingStrategyConnector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsMerchandisingSiteContextService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      {
        "kind": "Method",
        "name": "getSiteContext",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<MerchandisingSiteContext>"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsMerchandisingStrategyAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cdsEndpointsService",
            "type": "CdsEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsEndpointsService:class",
            "shortType": "CdsEndpointsService",
            "importPath": ""
          },
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          }
        ]
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadProductsForStrategy",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "strategyId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "strategyRequest",
            "type": "StrategyRequest",
            "isOptional": true,
            "canonicalReference": "@spartacus/cds!StrategyRequest:interface",
            "shortType": "StrategyRequest",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "Observable<StrategyProducts>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsMerchandisingUserContextService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productSearchService",
            "type": "ProductSearchService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProductSearchService:class",
            "shortType": "ProductSearchService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "profileTagEventService",
            "type": "ProfileTagEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
            "shortType": "ProfileTagEventService",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getUserContext",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<MerchandisingUserContext>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "CdsModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "CdsConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/cds!CdsConfig:class",
            "shortType": "CdsConfig",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "ModuleWithProviders<CdsModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "CmsMerchandisingCarouselComponent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "backgroundColour",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "container", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "numberToDisplay",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "scroll", "type": "string" },
      { "kind": "PropertySignature", "name": "strategy", "type": "string" },
      { "kind": "PropertySignature", "name": "textColour", "type": "string" },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "viewportPercentage",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ConsentChangedPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "granted",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "data",
        "type": "{\n        granted: boolean;\n    }"
      },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "ConsentReferenceEvent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "detail",
        "type": "{\n        consentReference: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ConsentReferenceInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "profileTagEventTracker",
            "type": "ProfileTagEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
            "shortType": "ProfileTagEventService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "DebugEvent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "detail",
        "type": "{\n        debug: boolean;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "DebugInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "profileTagEventTracker",
            "type": "ProfileTagEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
            "shortType": "ProfileTagEventService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Variable",
    "name": "DEFAULT_CDS_CONFIG",
    "type": "CdsConfig"
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "HomePageViewPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Enum",
    "name": "InternalProfileTagEventNames",
    "members": ["CONSENT_REFERENCE_LOADED", "DEBUG_FLAG_CHANGED"]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "KeywordSearchPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "{\n        searchTerm: string;\n        numResults: Number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Variable",
    "name": "MERCHANDISING_FACET_NORMALIZER",
    "type": "InjectionToken<Converter<Breadcrumb[], MerchandisingFacet[]>>"
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Variable",
    "name": "MERCHANDISING_FACET_TO_QUERYPARAM_NORMALIZER",
    "type": "InjectionToken<Converter<MerchandisingFacet[], string>>"
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingCarouselClickedEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "carouselEvent",
            "type": "CarouselEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CarouselEvent:interface",
            "shortType": "CarouselEvent",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "slotId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sku",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "imageUrl",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingCarouselCmsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingCarouselComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<CmsMerchandisingCarouselComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "merchandisingCarouselComponentService",
            "type": "MerchandisingCarouselComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingCarouselComponentService:class",
            "shortType": "MerchandisingCarouselComponentService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "intersectionService",
            "type": "IntersectionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!IntersectionService:class",
            "shortType": "IntersectionService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CmsMerchandisingCarouselComponent>"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "intersectionService",
        "type": "IntersectionService"
      },
      { "kind": "Property", "name": "lastEventModelId", "type": "string" },
      {
        "kind": "Property",
        "name": "merchandisingCarouselComponentService",
        "type": "MerchandisingCarouselComponentService"
      },
      {
        "kind": "Property",
        "name": "merchandisingCarouselModel$",
        "type": "Observable<MerchandisingCarouselModel>"
      },
      {
        "kind": "Method",
        "name": "onMerchandisingCarouselItemClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "merchandisingCarouselModel",
            "type": "MerchandisingCarouselModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingCarouselModel:interface",
            "shortType": "MerchandisingCarouselModel",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "clickedProduct",
            "type": "MerchandisingProduct",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingProduct:interface",
            "shortType": "MerchandisingProduct",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingCarouselComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cdsMerchandisingProductService",
            "type": "CdsMerchandisingProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsMerchandisingProductService:class",
            "shortType": "CdsMerchandisingProductService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "profileTagEventService",
            "type": "ProfileTagEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
            "shortType": "ProfileTagEventService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "cdsConfig",
            "type": "CdsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsConfig:class",
            "shortType": "CdsConfig",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      { "kind": "Property", "name": "cdsConfig", "type": "CdsConfig" },
      {
        "kind": "Property",
        "name": "cdsMerchandisingProductService",
        "type": "CdsMerchandisingProductService"
      },
      {
        "kind": "Method",
        "name": "getMerchandisingCaourselViewportThreshold",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsComponent",
            "type": "CmsMerchandisingCarouselComponent",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CmsMerchandisingCarouselComponent:interface",
            "shortType": "CmsMerchandisingCarouselComponent",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getMerchandisingCarouselModel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsComponent",
            "type": "CmsMerchandisingCarouselComponent",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CmsMerchandisingCarouselComponent:interface",
            "shortType": "CmsMerchandisingCarouselComponent",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "Observable<MerchandisingCarouselModel>"
      },
      { "kind": "Property", "name": "PRODUCT_SCOPE", "type": "" },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      {
        "kind": "Property",
        "name": "profileTagEventService",
        "type": "ProfileTagEventService"
      },
      {
        "kind": "Method",
        "name": "sendCarouselItemClickedEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "merchandisingCarouselModel",
            "type": "MerchandisingCarouselModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingCarouselModel:interface",
            "shortType": "MerchandisingCarouselModel",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "clickedProduct",
            "type": "MerchandisingProduct",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingProduct:interface",
            "shortType": "MerchandisingProduct",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "sendCarouselViewEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lastSendModelId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "merchandisingCarouselModel$",
            "type": "Observable<MerchandisingCarouselModel>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<MerchandisingCarouselModel>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "MerchandisingCarouselModel",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "backgroundColor",
        "type": "string | Object | undefined"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "items$",
        "type": "Observable<MerchandisingProduct>[]"
      },
      {
        "kind": "PropertySignature",
        "name": "metadata",
        "type": "MerchandisingMetadata"
      },
      { "kind": "PropertySignature", "name": "productIds", "type": "string[]" },
      {
        "kind": "PropertySignature",
        "name": "textColor",
        "type": "string | Object | undefined"
      },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingCarouselViewedEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "carouselEvent",
            "type": "CarouselEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CarouselEvent:interface",
            "shortType": "CarouselEvent",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "productSkus",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "MerchandisingConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "defaultCarouselViewportThreshold",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "MerchandisingFacet",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingFacetNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Breadcrumb[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!Breadcrumb:interface",
            "shortType": "Breadcrumb",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "MerchandisingFacet[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/cds!MerchandisingFacet:interface",
            "shortType": "MerchandisingFacet",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "MerchandisingFacet[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingFacetToQueryparamNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "MerchandisingFacet[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingFacet:interface",
            "shortType": "MerchandisingFacet",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "MerchandisingMetadata",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "metadataKey",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<MerchandisingModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "MerchandisingProduct",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "metadata",
        "type": "MerchandisingMetadata"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "MerchandisingProducts",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "metadata",
        "type": "MerchandisingMetadata"
      },
      {
        "kind": "PropertySignature",
        "name": "products",
        "type": "MerchandisingProduct[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "MerchandisingSiteContext",
    "members": [
      { "kind": "PropertySignature", "name": "language", "type": "string" },
      { "kind": "PropertySignature", "name": "site", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingStrategyAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "loadProductsForStrategy",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "strategyId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "strategyRequest",
            "type": "StrategyRequest",
            "isOptional": true,
            "canonicalReference": "@spartacus/cds!StrategyRequest:interface",
            "shortType": "StrategyRequest",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "Observable<StrategyProducts>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "MerchandisingStrategyConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "strategyAdapter",
            "type": "MerchandisingStrategyAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!MerchandisingStrategyAdapter:class",
            "shortType": "MerchandisingStrategyAdapter",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "loadProductsForStrategy",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "strategyId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "strategyRequest",
            "type": "StrategyRequest",
            "isOptional": true,
            "canonicalReference": "@spartacus/cds!StrategyRequest:interface",
            "shortType": "StrategyRequest",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "Observable<StrategyProducts>"
      },
      {
        "kind": "Property",
        "name": "strategyAdapter",
        "type": "MerchandisingStrategyAdapter"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "MerchandisingUserContext",
    "members": [
      { "kind": "PropertySignature", "name": "category", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "consentReference",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "facets", "type": "string" },
      { "kind": "PropertySignature", "name": "products", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ModifiedCartPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "{\n        productQty: number;\n        productSku: string;\n        productName: string;\n        cartId: string;\n        cartCode: string;\n        categories: Array<string>;\n        productCategoryName: string;\n        productCategory: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "NavigatedPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "OccBackendNotification",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "notifySuccessfulLogin",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<void>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "OrderConfirmationPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "Paged",
    "members": [
      { "kind": "PropertySignature", "name": "from", "type": "number" },
      { "kind": "PropertySignature", "name": "size", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProductViewPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "{\n        productSku: string;\n        productName: string;\n        productPrice: Number;\n        productCategory: string;\n        productCategoryName: string;\n        categories: Array<string>;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProfileTagCmsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProfileTagComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "profileTagInjector",
            "type": "ProfileTagInjectorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagInjectorService:class",
            "shortType": "ProfileTagInjectorService",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "profileTagEnabled$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "ProfileTagConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "allowInsecureCookies",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "configUrl", "type": "string" },
      { "kind": "PropertySignature", "name": "gtmId", "type": "string" },
      { "kind": "PropertySignature", "name": "javascriptUrl", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProfileTagEventService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "CdsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsConfig:class",
            "shortType": "CdsConfig",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platform",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addTracker",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getConsentReference",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getProfileTagEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | DebugEvent | Event>"
      },
      { "kind": "Property", "name": "latestConsentReference", "type": "any" },
      {
        "kind": "Method",
        "name": "notifyProfileTagOfEventOccurence",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "ProfileTagPushEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagPushEvent:interface",
            "shortType": "ProfileTagPushEvent",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "profileTagDebug", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProfileTagInjectorService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "profileTagEventTracker",
            "type": "ProfileTagEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
            "shortType": "ProfileTagEventService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "cdsBackendConnector",
            "type": "CdsBackendConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsBackendConnector:class",
            "shortType": "CdsBackendConnector",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "profileTagLifecycleService",
            "type": "ProfileTagLifecycleService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagLifecycleService:class",
            "shortType": "ProfileTagLifecycleService",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "track",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "ProfileTagJsConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "allowInsecureCookies",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "configUrl", "type": "string" },
      { "kind": "PropertySignature", "name": "gtmId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "javascriptUrl",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "siteId", "type": "string" },
      { "kind": "PropertySignature", "name": "spa", "type": "boolean" },
      { "kind": "PropertySignature", "name": "tenant", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProfileTagLifecycleService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consentService",
            "type": "ConsentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ConsentService:class",
            "shortType": "ConsentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "CdsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!CdsConfig:class",
            "shortType": "CdsConfig",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      { "kind": "Property", "name": "config", "type": "CdsConfig" },
      {
        "kind": "Method",
        "name": "consentChanged",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsentChangedPushEvent>"
      },
      {
        "kind": "Property",
        "name": "consentService",
        "type": "ConsentService"
      },
      {
        "kind": "Method",
        "name": "loginSuccessful",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProfileTagModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "ProfileTagPushEvent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "data",
        "type": "{\n        segments?: string[];\n        actions?: PersonalizationAction[];\n        [x: string]: any;\n    }"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "ProfileTagPushEventsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "personalizationContextService",
            "type": "PersonalizationContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!PersonalizationContextService:class",
            "shortType": "PersonalizationContextService",
            "importPath": "@spartacus/tracking/personalization/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": true,
            "canonicalReference": "@spartacus/cds!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "personalizationContextService",
            "type": "PersonalizationContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!PersonalizationContextService:class",
            "shortType": "PersonalizationContextService",
            "importPath": "@spartacus/tracking/personalization/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addedToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "addPushEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Observable<ProfileTagPushEvent>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cartChangedEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "cartPageVisitedEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "categoryPageVisited",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "getPushEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "homePageVisitedEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "modifiedCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "navigatedEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "orderConfirmationPageVisited",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Property",
        "name": "personalizationContextService",
        "type": "PersonalizationContextService"
      },
      {
        "kind": "Method",
        "name": "productDetailsPageView",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "removedFromCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      },
      {
        "kind": "Method",
        "name": "searchResultsChanged",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProfileTagPushEvent>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "ProfileTagWindowObject",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "Y_TRACKING",
        "type": "{\n        q?: ProfileTagJsConfig[][];\n        eventLayer?: ProfileTagPushEvent[];\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "RemovedFromCartPushEvent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "{\n        productSku: string;\n        productName: string;\n        productCategory: string;\n        cartId: string;\n        cartCode: string;\n        productCategoryName: string;\n        categories: Array<string>;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "data", "type": "any" },
      { "kind": "Property", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "StrategyProduct",
    "members": [
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "metadata",
        "type": "{\n        [metadataAttributeName: string]: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "StrategyProducts",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "metadata",
        "type": "{\n        [metadataAttributeName: string]: string;\n    }"
      },
      { "kind": "PropertySignature", "name": "paged", "type": "Paged" },
      {
        "kind": "PropertySignature",
        "name": "products",
        "type": "StrategyProduct[]"
      },
      { "kind": "PropertySignature", "name": "resultCount", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Interface",
    "name": "StrategyRequest",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "headers",
        "type": "{\n        consentReference?: string;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "queryParams",
        "type": "{\n        products?: string[];\n        category?: string;\n        facets?: string;\n        date?: Date;\n        site?: string;\n        language?: string;\n        pageNumber?: number;\n        pageSize?: number;\n        searchPhrase?: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "TrackingModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/cds",
    "kind": "Class",
    "name": "TrackingService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "profileTagLifecycleService",
            "type": "ProfileTagLifecycleService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagLifecycleService:class",
            "shortType": "ProfileTagLifecycleService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "profileTagPushEventsService",
            "type": "ProfileTagPushEventsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagPushEventsService:class",
            "shortType": "ProfileTagPushEventsService",
            "importPath": "@spartacus/cds"
          },
          {
            "name": "profileTagEventTracker",
            "type": "ProfileTagEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!ProfileTagEventService:class",
            "shortType": "ProfileTagEventService",
            "importPath": "@spartacus/cds"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "factory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "trackingService",
            "type": "TrackingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/cds!TrackingService:class",
            "shortType": "TrackingService",
            "importPath": "@spartacus/cds"
          }
        ],
        "returnType": "() => void"
      },
      {
        "kind": "Property",
        "name": "profileTagLifecycleService",
        "type": "ProfileTagLifecycleService"
      },
      {
        "kind": "Property",
        "name": "profileTagPushEventsService",
        "type": "ProfileTagPushEventsService"
      },
      {
        "kind": "Method",
        "name": "trackEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/assets",
    "kind": "Variable",
    "name": "checkoutTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/checkout/assets",
    "kind": "Variable",
    "name": "checkoutTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Interface",
    "name": "CardWithAddress",
    "members": [
      { "kind": "PropertySignature", "name": "address", "type": "Address" },
      { "kind": "PropertySignature", "name": "card", "type": "Card" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CartNotEmptyGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutAuthGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "userService",
            "type": "UserAccountFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserAccountFacade:class",
            "shortType": "UserAccountFacade",
            "importPath": "@spartacus/user/account/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "checkoutConfigService",
        "type": "CheckoutConfigService"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleAnonymousUser",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartUser",
            "type": "User",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_components!~User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean | UrlTree"
      },
      {
        "kind": "Method",
        "name": "handleUserRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "user",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!~User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean | UrlTree"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      },
      { "kind": "Property", "name": "userService", "type": "UserAccountFacade" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutConfig",
            "type": "CheckoutConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfig:class",
            "shortType": "CheckoutConfig",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "compareDeliveryCost",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryMode1",
            "type": "DeliveryMode",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          },
          {
            "name": "deliveryMode2",
            "type": "DeliveryMode",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "findMatchingDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryModes",
            "type": "DeliveryMode[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          },
          {
            "name": "index",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getPreferredDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryModes",
            "type": "DeliveryMode[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "isExpressCheckout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGuestCheckout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cartId$", "type": "Observable<string>" },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Property",
        "name": "getCheckoutDetailsLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getPaymentDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryModeCode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "expressCheckoutService",
            "type": "ExpressCheckoutService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ExpressCheckoutService:class",
            "shortType": "ExpressCheckoutService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "checkoutConfigService",
        "type": "CheckoutConfigService"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "expressCheckoutService",
        "type": "ExpressCheckoutService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutLoginComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "checkoutLoginForm", "type": "FormGroup" },
      { "kind": "Property", "name": "formBuilder", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "sub", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutLoginModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutOrchestratorComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutOrchestratorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutOrderSummaryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutOrderSummaryModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      { "kind": "Property", "name": "activeStepIndex", "type": "number" },
      {
        "kind": "Property",
        "name": "activeStepIndex$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "getTabIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isDisabled",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressMobileBottomComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      { "kind": "Property", "name": "activeStepIndex", "type": "number" },
      {
        "kind": "Property",
        "name": "activeStepIndex$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressMobileBottomModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressMobileTopComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "activeStepIndex", "type": "number" },
      {
        "kind": "Property",
        "name": "activeStepIndex$",
        "type": "Observable<number>"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressMobileTopModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutProgressModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutReplenishmentFormService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Property",
        "name": "defaultFormData",
        "type": "ScheduleReplenishmentForm"
      },
      {
        "kind": "Method",
        "name": "getScheduleReplenishmentFormData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ScheduleReplenishmentForm>"
      },
      {
        "kind": "Method",
        "name": "resetScheduleReplenishmentFormData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setScheduleReplenishmentFormData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formData",
            "type": "ScheduleReplenishmentForm",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutStepService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutConfig",
            "type": "CheckoutConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfig:class",
            "shortType": "CheckoutConfig",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeStepIndex$",
        "type": "Observable<number>"
      },
      { "kind": "Property", "name": "allSteps", "type": "CheckoutStep[]" },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutConfig",
        "type": "CheckoutConfig"
      },
      {
        "kind": "Method",
        "name": "disableEnableStep",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentStepType",
            "type": "CheckoutStepType",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "disabled",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getBackBntText",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCheckoutStep",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentStepType",
            "type": "CheckoutStepType",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "CheckoutStep | undefined"
      },
      {
        "kind": "Method",
        "name": "getCheckoutStepRoute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentStepType",
            "type": "CheckoutStepType",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getCurrentStepIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "number | null"
      },
      {
        "kind": "Method",
        "name": "getFirstCheckoutStepRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getNextCheckoutStepUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Method",
        "name": "getPreviousCheckoutStepUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Method",
        "name": "goToStepWithIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSteps",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "BehaviorSubject<CheckoutStep[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "CheckoutStepsSetGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentTypeService",
            "type": "PaymentTypeFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
            "shortType": "PaymentTypeFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "checkoutDetailsService",
            "type": "CheckoutDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDetailsService:class",
            "shortType": "CheckoutDetailsService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutCostCenterService",
            "type": "CheckoutCostCenterFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutCostCenterFacade:class",
            "shortType": "CheckoutCostCenterFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          },
          {
            "name": "_",
            "type": "RouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "checkoutCostCenterService",
        "type": "CheckoutCostCenterFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDetailsService",
        "type": "CheckoutDetailsService"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "isDeliveryModeSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isPaymentDetailsSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isPaymentTypeSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isShippingAddressAndCostCenterSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "isAccountPayment",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "isStepSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "step",
            "type": "CheckoutStep",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "isAccountPayment",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "paymentTypeService",
        "type": "PaymentTypeFacade"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "DeliveryModeComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "backBtnText", "type": "string" },
      {
        "kind": "Method",
        "name": "changeMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "continueButtonPressed",
        "type": "boolean"
      },
      { "kind": "Property", "name": "deliveryModeInvalid", "type": "boolean" },
      { "kind": "Property", "name": "deliveryModeSub", "type": "Subscription" },
      { "kind": "Property", "name": "mode", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedDeliveryMode$",
        "type": "Observable<DeliveryMode>"
      },
      {
        "kind": "Property",
        "name": "supportedDeliveryModes$",
        "type": "Observable<DeliveryMode[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "DeliveryModeModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ExpressCheckoutService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserPaymentService:class",
            "shortType": "UserPaymentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutDetailsService",
            "type": "CheckoutDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDetailsService:class",
            "shortType": "CheckoutDetailsService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "checkoutConfigService",
            "type": "CheckoutConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutConfigService:class",
            "shortType": "CheckoutConfigService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "clearCheckoutService",
            "type": "ClearCheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ClearCheckoutFacade:class",
            "shortType": "ClearCheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutConfigService",
        "type": "CheckoutConfigService"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDetailsService",
        "type": "CheckoutDetailsService"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "clearCheckoutService",
        "type": "ClearCheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "setDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentMethod",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setShippingAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "trySetDefaultCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userPaymentService",
        "type": "UserPaymentService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "GuestRegisterFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userRegisterFacade",
            "type": "UserRegisterFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserRegisterFacade:class",
            "shortType": "UserRegisterFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      { "kind": "Property", "name": "email", "type": "string" },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      { "kind": "Property", "name": "guestRegisterForm", "type": "FormGroup" },
      { "kind": "Property", "name": "guid", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "submit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "userRegisterFacade",
        "type": "UserRegisterFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "NotCheckoutAuthGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<Order>" },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationThankYouMessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      { "kind": "Property", "name": "isGuestCustomer", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isReplenishmentOrderType$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      { "kind": "Property", "name": "orderGuid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "OrderConfirmationTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<Order>" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserPaymentService:class",
            "shortType": "UserPaymentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "billingAddressForm", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "cardTypes$",
        "type": "Observable<CardType[]>"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "closeForm", "type": "EventEmitter<any>" },
      {
        "kind": "Property",
        "name": "countries$",
        "type": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "countrySelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "country",
            "type": "Country",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!Country:interface",
            "shortType": "Country",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "expMonthAndYear",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "getAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Card"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "goBack", "type": "EventEmitter<any>" },
      {
        "kind": "Method",
        "name": "handleAddressVerificationResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "AddressValidation",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!AddressValidation:interface",
            "shortType": "AddressValidation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "Observable<StateUtils.LoaderState<void>>"
      },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      { "kind": "Property", "name": "months", "type": "string[]" },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openSuggestedAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "AddressValidation",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!AddressValidation:interface",
            "shortType": "AddressValidation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "paymentForm", "type": "FormGroup" },
      { "kind": "Property", "name": "paymentMethodsCount", "type": "number" },
      {
        "kind": "Property",
        "name": "regions$",
        "type": "Observable<Region[]>"
      },
      {
        "kind": "Property",
        "name": "sameAsShippingAddress",
        "type": "boolean"
      },
      {
        "kind": "Property",
        "name": "selectedCountry$",
        "type": "BehaviorSubject<string>"
      },
      { "kind": "Property", "name": "setAsDefaultField", "type": "boolean" },
      {
        "kind": "Property",
        "name": "setPaymentDetails",
        "type": "EventEmitter<any>"
      },
      {
        "kind": "Property",
        "name": "shippingAddress$",
        "type": "Observable<Address>"
      },
      {
        "kind": "Property",
        "name": "showSameAsShippingAddressCheckbox$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "suggestedAddressModalRef",
        "type": "ModalRef | null"
      },
      {
        "kind": "Method",
        "name": "toggleDefaultPaymentMethod",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleSameAsShippingAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userPaymentService",
        "type": "UserPaymentService"
      },
      {
        "kind": "Method",
        "name": "verifyAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "years", "type": "number[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentMethodComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserPaymentService:class",
            "shortType": "UserPaymentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "backBtnText", "type": "string" },
      {
        "kind": "Property",
        "name": "cards$",
        "type": "Observable<{\n        content: Card;\n        paymentMethod: PaymentDetails;\n    }[]>"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "createCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cardLabels",
            "type": "{\n        textDefaultPaymentMethod: string;\n        textExpires: string;\n        textUseThisPayment: string;\n        textSelected: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "selected",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Card"
      },
      { "kind": "Property", "name": "deliveryAddress", "type": "Address" },
      {
        "kind": "Property",
        "name": "existingPaymentMethods$",
        "type": "Observable<PaymentDetails[]>"
      },
      {
        "kind": "Method",
        "name": "getCardIcon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "hideNewPaymentForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isGuestCheckout", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "newPaymentFormManuallyOpened",
        "type": "boolean"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedMethod$",
        "type": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "selectPaymentMethod",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "sendPaymentMethodFailGlobalMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ paymentDetails, billingAddress, }",
            "type": "{\n        paymentDetails: PaymentDetails;\n        billingAddress?: Address;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "shouldRedirect", "type": "boolean" },
      {
        "kind": "Method",
        "name": "showNewPaymentForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userPaymentService",
        "type": "UserPaymentService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentMethodModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentTypeComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentTypeService",
            "type": "PaymentTypeFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
            "shortType": "PaymentTypeFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cartPoNumber", "type": "string" },
      {
        "kind": "Property",
        "name": "cartPoNumber$",
        "type": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "changeType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "paymentTypes$",
        "type": "Observable<PaymentType[]>"
      },
      {
        "kind": "Property",
        "name": "paymentTypeService",
        "type": "PaymentTypeFacade"
      },
      { "kind": "Property", "name": "typeSelected", "type": "string" },
      {
        "kind": "Property",
        "name": "typeSelected$",
        "type": "Observable<string>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PaymentTypeModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PlaceOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "checkoutReplenishmentFormService",
            "type": "CheckoutReplenishmentFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutReplenishmentFormService:class",
            "shortType": "CheckoutReplenishmentFormService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutReplenishmentFormService",
        "type": "CheckoutReplenishmentFormService"
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      { "kind": "Property", "name": "checkoutSubmitForm", "type": "FormGroup" },
      { "kind": "Property", "name": "currentOrderType", "type": "ORDER_TYPE" },
      {
        "kind": "Property",
        "name": "daysOfWeekNotChecked$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "placedOrder",
        "type": "void | Observable<ComponentRef<any> | undefined>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "scheduleReplenishmentFormData",
        "type": "ScheduleReplenishmentForm"
      },
      {
        "kind": "Method",
        "name": "submitForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "termsAndConditionInvalid",
        "type": "Boolean"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "PlaceOrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ReplenishmentOrderConfirmationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ReviewSubmitComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutPaymentService",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "paymentTypeService",
            "type": "PaymentTypeFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
            "shortType": "PaymentTypeFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutCostCenterService",
            "type": "CheckoutCostCenterFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutCostCenterFacade:class",
            "shortType": "CheckoutCostCenterFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "userCostCenterService",
            "type": "UserCostCenterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserCostCenterService:class",
            "shortType": "UserCostCenterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "checkoutCostCenterService",
        "type": "CheckoutCostCenterFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentService",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      {
        "kind": "Property",
        "name": "checkoutStepType",
        "type": "typeof CheckoutStepType"
      },
      {
        "kind": "Property",
        "name": "costCenter$",
        "type": "Observable<CostCenter | undefined>"
      },
      {
        "kind": "Property",
        "name": "countryName$",
        "type": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "deliveryAddress$",
        "type": "Observable<Address>"
      },
      {
        "kind": "Property",
        "name": "deliveryMode$",
        "type": "Observable<DeliveryMode | null | undefined>"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getCheckoutStepUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepType",
            "type": "CheckoutStepType",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepType:enum",
            "shortType": "CheckoutStepType",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getCostCenterCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_components!CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModeCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryMode",
            "type": "DeliveryMode",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPaymentMethodCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPaymentTypeCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPoNumberCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "poNumber",
            "type": "string | null",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getShippingAddressCard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryAddress",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          },
          {
            "name": "countryName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "isAccountPayment$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "paymentDetails$",
        "type": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "paymentSteps",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "steps",
            "type": "CheckoutStep[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "CheckoutStep[]"
      },
      {
        "kind": "Property",
        "name": "paymentType$",
        "type": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "paymentTypeService",
        "type": "PaymentTypeFacade"
      },
      {
        "kind": "Property",
        "name": "poNumber$",
        "type": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      {
        "kind": "Method",
        "name": "shippingSteps",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "steps",
            "type": "CheckoutStep[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStep:interface",
            "shortType": "CheckoutStep",
            "importPath": "@spartacus/checkout/root"
          }
        ],
        "returnType": "CheckoutStep[]"
      },
      {
        "kind": "Property",
        "name": "steps$",
        "type": "Observable<CheckoutStep[]>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userCostCenterService",
        "type": "UserCostCenterService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ReviewSubmitModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutReplenishmentFormService",
            "type": "CheckoutReplenishmentFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutReplenishmentFormService:class",
            "shortType": "CheckoutReplenishmentFormService",
            "importPath": "@spartacus/checkout/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeDayOfTheMonth",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "dayOfMonth",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeNumberOfDays",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nDays",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeNumberOfWeeks",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nWeeks",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeOrderType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderType",
            "type": "ORDER_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ORDER_TYPE:enum",
            "shortType": "ORDER_TYPE",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeRecurrencePeriodType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeRepeatDays",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "day",
            "type": "DaysOfWeek",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!DaysOfWeek:enum",
            "shortType": "DaysOfWeek",
            "importPath": "@spartacus/core"
          },
          {
            "name": "isChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeReplenishmentStartDate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutReplenishmentFormService",
        "type": "CheckoutReplenishmentFormService"
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Property",
        "name": "currentDate",
        "type": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "currentDaysOfWeek",
        "type": "DaysOfWeek[]"
      },
      { "kind": "Property", "name": "daysOfWeek", "type": "DaysOfWeek[]" },
      {
        "kind": "Method",
        "name": "hasDaysOfWeekChecked",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "day",
            "type": "DaysOfWeek",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!DaysOfWeek:enum",
            "shortType": "DaysOfWeek",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isMonthly", "type": "Boolean" },
      { "kind": "Property", "name": "isWeekly", "type": "Boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "numberOfDays", "type": "string[]" },
      { "kind": "Property", "name": "numberOfWeeks", "type": "string[]" },
      { "kind": "Property", "name": "orderTypes", "type": "typeof ORDER_TYPE" },
      {
        "kind": "Property",
        "name": "recurrencePeriodType",
        "type": "string[]"
      },
      {
        "kind": "Property",
        "name": "scheduleReplenishmentFormData",
        "type": "ScheduleReplenishmentForm"
      },
      {
        "kind": "Property",
        "name": "selectedOrderType$",
        "type": "Observable<ORDER_TYPE>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ShippingAddressComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutDeliveryService",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutStepService",
            "type": "CheckoutStepService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!CheckoutStepService:class",
            "shortType": "CheckoutStepService",
            "importPath": "@spartacus/checkout/components"
          },
          {
            "name": "paymentTypeService",
            "type": "PaymentTypeFacade | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_components!PaymentTypeFacade:class",
            "shortType": "PaymentTypeFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "userCostCenterService",
            "type": "UserCostCenterService | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_components!UserCostCenterService:class",
            "shortType": "UserCostCenterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "checkoutCostCenterService",
            "type": "CheckoutCostCenterFacade | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_components!CheckoutCostCenterFacade:class",
            "shortType": "CheckoutCostCenterFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "addressFormOpened", "type": "boolean" },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "backBtnText", "type": "string" },
      {
        "kind": "Property",
        "name": "cards$",
        "type": "Observable<CardWithAddress[]>"
      },
      {
        "kind": "Property",
        "name": "checkoutCostCenterService",
        "type": "CheckoutCostCenterFacade | undefined"
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryService",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutStepService",
        "type": "CheckoutStepService"
      },
      { "kind": "Property", "name": "doneAutoSelect", "type": "boolean" },
      { "kind": "Property", "name": "forceLoader", "type": "boolean" },
      {
        "kind": "Method",
        "name": "getCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selected",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "textDefaultShippingAddress",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "textShipToThisAddress",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "textSelected",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Card"
      },
      {
        "kind": "Method",
        "name": "getSupportedAddresses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Method",
        "name": "hideNewAddressForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "goPrevious",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "isAccountPayment", "type": "boolean" },
      { "kind": "Property", "name": "isGuestCheckout", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "next",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "paymentTypeService",
        "type": "PaymentTypeFacade | undefined"
      },
      {
        "kind": "Method",
        "name": "selectAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "selectDefaultAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addresses",
            "type": "Address[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selected",
            "type": "Address | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "selectedAddress", "type": "Address" },
      {
        "kind": "Property",
        "name": "selectedAddress$",
        "type": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "showNewAddressForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userCostCenterService",
        "type": "UserCostCenterService | undefined"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/components",
    "kind": "Class",
    "name": "ShippingAddressModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CARD_TYPE_NORMALIZER",
    "type": "InjectionToken<Converter<any, CardType>>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "CardTypesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "{\n        [code: string]: CardType;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CHECKOUT_DETAILS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CHECKOUT_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Namespace",
    "name": "CheckoutActions"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "ADD_DELIVERY_ADDRESS_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "ADD_DELIVERY_ADDRESS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "ADD_DELIVERY_ADDRESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "AddDeliveryAddress",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        address: Address;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        address: Address;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "AddDeliveryAddressFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "AddDeliveryAddressSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "CardTypesAction",
    "namespace": "CheckoutActions",
    "members": [
      "LoadCardTypes",
      " | ",
      "LoadCardTypesFail",
      " | ",
      "LoadCardTypesSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CHECKOUT_CLEAR_MISCS_DATA",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "CheckoutAction",
    "namespace": "CheckoutActions",
    "members": [
      "AddDeliveryAddress",
      " | ",
      "AddDeliveryAddressFail",
      " | ",
      "AddDeliveryAddressSuccess",
      " | ",
      "SetDeliveryAddress",
      " | ",
      "SetDeliveryAddressFail",
      " | ",
      "SetDeliveryAddressSuccess",
      " | ",
      "ResetSetDeliveryAddressProcess",
      " | ",
      "LoadSupportedDeliveryModes",
      " | ",
      "LoadSupportedDeliveryModesFail",
      " | ",
      "LoadSupportedDeliveryModesSuccess",
      " | ",
      "SetDeliveryMode",
      " | ",
      "SetDeliveryModeFail",
      " | ",
      "SetDeliveryModeSuccess",
      " | ",
      "ResetSetDeliveryModeProcess",
      " | ",
      "ClearSupportedDeliveryModes",
      " | ",
      "CreatePaymentDetails",
      " | ",
      "CreatePaymentDetailsFail",
      " | ",
      "CreatePaymentDetailsSuccess",
      " | ",
      "SetPaymentDetails",
      " | ",
      "SetPaymentDetailsFail",
      " | ",
      "SetPaymentDetailsSuccess",
      " | ",
      "ResetSetPaymentDetailsProcess",
      " | ",
      "PlaceOrder",
      " | ",
      "PlaceOrderFail",
      " | ",
      "PlaceOrderSuccess",
      " | ",
      "ClearCheckoutStep",
      " | ",
      "ClearCheckoutData",
      " | ",
      "ClearCheckoutDeliveryAddress",
      " | ",
      "ClearCheckoutDeliveryAddressFail",
      " | ",
      "ClearCheckoutDeliveryAddressSuccess",
      " | ",
      "ClearCheckoutDeliveryMode",
      " | ",
      "ClearCheckoutDeliveryModeFail",
      " | ",
      "ClearCheckoutDeliveryModeSuccess",
      " | ",
      "LoadCheckoutDetails",
      " | ",
      "LoadCheckoutDetailsFail",
      " | ",
      "LoadCheckoutDetailsSuccess",
      " | ",
      "CheckoutClearMiscsData",
      " | ",
      "SetCostCenter",
      " | ",
      "SetCostCenterFail",
      " | ",
      "SetCostCenterSuccess",
      " | ",
      "ResetSetCostCenterProcess"
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutClearMiscsData",
    "namespace": "CheckoutActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DATA",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_ADDRESS_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_ADDRESS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_ADDRESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_MODE_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_MODE_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_DELIVERY_MODE",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_CHECKOUT_STEP",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_PLACE_ORDER",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_SCHEDULE_REPLENISHMENT_ORDER",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CLEAR_SUPPORTED_DELIVERY_MODES",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutData",
    "namespace": "CheckoutActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryAddress",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryAddressFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryAddressSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryMode",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryModeFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutDeliveryModeSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutStep",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearPlaceOrder",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearScheduleReplenishmentOrderAction",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearSupportedDeliveryModes",
    "namespace": "CheckoutActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CREATE_PAYMENT_DETAILS_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CREATE_PAYMENT_DETAILS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "CREATE_PAYMENT_DETAILS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CreatePaymentDetails",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        paymentDetails: PaymentDetails;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        paymentDetails: PaymentDetails;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CreatePaymentDetailsFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CreatePaymentDetailsSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PaymentDetails" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CARD_TYPES_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CARD_TYPES_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CARD_TYPES",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CHECKOUT_DETAILS_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CHECKOUT_DETAILS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_CHECKOUT_DETAILS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_PAYMENT_TYPES_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_PAYMENT_TYPES_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_PAYMENT_TYPES",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_SUPPORTED_DELIVERY_MODES_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_SUPPORTED_DELIVERY_MODES_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "LOAD_SUPPORTED_DELIVERY_MODES",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCardTypes",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCardTypesFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCardTypesSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CardType[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CardType:interface",
            "shortType": "CardType",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CardType[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCheckoutDetails",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCheckoutDetailsFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadCheckoutDetailsSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CheckoutDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutDetails:type",
            "shortType": "CheckoutDetails",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CheckoutDetails" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadPaymentTypes",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadPaymentTypesFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadPaymentTypesSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PaymentType[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!PaymentType:interface",
            "shortType": "PaymentType",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PaymentType[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadSupportedDeliveryModes",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadSupportedDeliveryModesFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "LoadSupportedDeliveryModesSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "DeliveryMode[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "DeliveryMode[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "OrderTypesActions",
    "namespace": "CheckoutActions",
    "members": ["SetOrderType"]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PAYMENT_PROCESS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PaymentProcessSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "PaymentTypesAction",
    "namespace": "CheckoutActions",
    "members": [
      "LoadPaymentTypes",
      " | ",
      "LoadPaymentTypesFail",
      " | ",
      "LoadPaymentTypesSuccess",
      " | ",
      "ResetLoadPaymentTypesProcess",
      " | ",
      "SetPaymentType",
      " | ",
      "SetPaymentTypeFail",
      " | ",
      "SetPaymentTypeSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PLACE_ORDER_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PLACE_ORDER_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PLACE_ORDER",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PlaceOrder",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        termsChecked: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        termsChecked: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PlaceOrderFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PlaceOrderSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Order",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Order" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "ReplenishmentOrderActions",
    "namespace": "CheckoutActions",
    "members": [
      "ScheduleReplenishmentOrder",
      " | ",
      "ScheduleReplenishmentOrderSuccess",
      " | ",
      "ScheduleReplenishmentOrderFail",
      " | ",
      "ClearScheduleReplenishmentOrderAction"
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_LOAD_PAYMENT_TYPES_PROCESS_ID",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SET_COST_CENTER_PROCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SET_DELIVERY_ADDRESS_PROCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SET_DELIVERY_MODE_PROCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SET_PAYMENT_DETAILS_PROCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "RESET_SUPPORTED_SET_DELIVERY_MODES_PROCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetLoadPaymentTypesProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetLoadSupportedDeliveryModesProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetSetCostCenterProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetSetDeliveryAddressProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetSetDeliveryModeProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ResetSetPaymentDetailsProcess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SCHEDULE_REPLENISHMENT_ORDER_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SCHEDULE_REPLENISHMENT_ORDER_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SCHEDULE_REPLENISHMENT_ORDER",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrder",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        scheduleReplenishmentForm: ScheduleReplenishmentForm;\n        termsChecked: boolean;\n        userId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        scheduleReplenishmentForm: ScheduleReplenishmentForm;\n        termsChecked: boolean;\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrderFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ScheduleReplenishmentOrderSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrder",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReplenishmentOrder" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_COST_CENTER_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_COST_CENTER_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_COST_CENTER",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_ADDRESS_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_ADDRESS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_ADDRESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_MODE_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_MODE_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_MODE",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_ORDER_TYPE",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_DETAILS_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_DETAILS_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_DETAILS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_TYPE_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_TYPE_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_TYPE",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_SUPPORTED_DELIVERY_MODES_FAIL",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_SUPPORTED_DELIVERY_MODES_SUCCESS",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_SUPPORTED_DELIVERY_MODES",
    "namespace": "CheckoutActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetCostCenter",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        costCenterId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        costCenterId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetCostCenterFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetCostCenterSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryAddress",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        address: Address;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        address: Address;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryAddressFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryAddressSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryMode",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        selectedModeId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        selectedModeId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryModeFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetDeliveryModeSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetOrderType",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ORDER_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ORDER_TYPE:enum",
            "shortType": "ORDER_TYPE",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ORDER_TYPE" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentDetails",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        paymentDetails: PaymentDetails;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        paymentDetails: PaymentDetails;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentDetailsFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentDetailsSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PaymentDetails" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentType",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        typeCode: string;\n        poNumber?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        typeCode: string;\n        poNumber?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentTypeFail",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "SetPaymentTypeSuccess",
    "namespace": "CheckoutActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Cart" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CheckoutDetails>"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutAdapter:class",
            "shortType": "CheckoutAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CheckoutAdapter" },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CheckoutDetails>"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutCostCenterAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutCostCenterConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutCostCenterAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutCostCenterAdapter:class",
            "shortType": "CheckoutCostCenterAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CheckoutCostCenterAdapter"
      },
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutCostCenterService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "getCostCenter",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutDeliveryAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<DeliveryMode>"
      },
      {
        "kind": "Method",
        "name": "getSupportedModes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<DeliveryMode[]>"
      },
      {
        "kind": "Method",
        "name": "setAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "setMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "deliveryModeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutDeliveryConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutDeliveryAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutDeliveryAdapter:class",
            "shortType": "CheckoutDeliveryAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CheckoutDeliveryAdapter"
      },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<DeliveryMode>"
      },
      {
        "kind": "Method",
        "name": "getSupportedModes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<DeliveryMode[]>"
      },
      {
        "kind": "Method",
        "name": "setAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "setMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "deliveryModeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutDeliveryService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "actionAllowed",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createAndSetAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getLoadSupportedDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DeliveryMode | undefined | null>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryModeCode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryAddressProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSupportedDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DeliveryMode[]>"
      },
      {
        "kind": "Method",
        "name": "loadSupportedDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "resetLoadSupportedDeliveryModesProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetDeliveryAddressProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "TypeAlias",
    "name": "CheckoutDetails",
    "members": [
      "{\n    deliveryAddress: ",
      "Address",
      ";\n    deliveryMode: ",
      "DeliveryMode",
      ";\n    paymentInfo: ",
      "PaymentDetails",
      ";\n}"
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stateEventService",
            "type": "StateEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!StateEventService:class",
            "shortType": "StateEventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "orderPlacedEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "stateEventService",
        "type": "StateEventService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutEventListener",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutDeliveryFacade",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "clearCheckoutFacade",
            "type": "ClearCheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ClearCheckoutFacade:class",
            "shortType": "ClearCheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryFacade",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "clearCheckoutFacade",
        "type": "ClearCheckoutFacade"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSavedCartChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onUserAddressChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_checkoutEventBuilder",
            "type": "CheckoutEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutEventBuilder:class",
            "shortType": "CheckoutEventBuilder",
            "importPath": "@spartacus/checkout/core"
          },
          {
            "name": "_checkoutEventListener",
            "type": "CheckoutEventListener",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutEventListener:class",
            "shortType": "CheckoutEventListener",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutPageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "basePageMetaResolver",
            "type": "BasePageMetaResolver",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!BasePageMetaResolver:class",
            "shortType": "BasePageMetaResolver",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "basePageMetaResolver",
        "type": "BasePageMetaResolver"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Method",
        "name": "resolveDescription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutPaymentAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "loadCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Method",
        "name": "set",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentDetailsId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutPaymentConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutPaymentAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutPaymentAdapter:class",
            "shortType": "CheckoutPaymentAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CheckoutPaymentAdapter"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "getCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Method",
        "name": "set",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentDetailsId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutPaymentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "actionAllowed",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "createPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Method",
        "name": "getPaymentDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "getSetPaymentDetailsResultProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "loadSupportedCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "paymentProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "resetSetPaymentDetailsProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutReplenishmentOrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CheckoutReplenishmentOrderAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutReplenishmentOrderAdapter:class",
            "shortType": "CheckoutReplenishmentOrderAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CheckoutReplenishmentOrderAdapter"
      },
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Namespace",
    "name": "CheckoutSelectors"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getAllCardTypes",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, CardType[]>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getAllPaymentTypes",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, PaymentType[]>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCardTypesEntites",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, {\n    [code: string]: CardType;\n}>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCardTypesState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, CardTypesState>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutDetailsLoaded",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, boolean>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutLoading",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, boolean>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutOrderDetails",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, Order | ReplenishmentOrder>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, CheckoutState>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutSteps",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, CheckoutStepsState>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCheckoutStepsState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, StateUtils.LoaderState<CheckoutStepsState>>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getCostCenter",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, string | undefined>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getDeliveryAddress",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, Address>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getDeliveryMode",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, {\n    supported: {\n        [code: string]: DeliveryMode;\n    };\n    selected: string;\n}>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getOrderTypesState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, OrderTypesState>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getPaymentDetails",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, PaymentDetails>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getPaymentTypesEntites",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, {\n    [code: string]: PaymentType;\n}>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getPaymentTypesState",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, PaymentTypesState>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getPoNumer",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, string | undefined>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedDeliveryMode",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, DeliveryMode | undefined | null>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedDeliveryModeCode",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, string>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedOrderType",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, ORDER_TYPE>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedOrderTypeSelector",
    "namespace": "CheckoutSelectors",
    "type": "(state: OrderTypesState) => ORDER_TYPE"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSelectedPaymentType",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, string | undefined>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "getSupportedDeliveryModes",
    "namespace": "CheckoutSelectors",
    "type": "MemoizedSelector<StateWithCheckout, DeliveryMode[]>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "CheckoutService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "actionAllowed",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutStep",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearPlaceOrderState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCheckoutDetailsLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCurrentOrderType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ORDER_TYPE>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order | ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setOrderType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderType",
            "type": "ORDER_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ORDER_TYPE:enum",
            "shortType": "ORDER_TYPE",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "CheckoutState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cardTypes",
        "type": "CardTypesState"
      },
      {
        "kind": "PropertySignature",
        "name": "orderType",
        "type": "OrderTypesState"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentTypes",
        "type": "PaymentTypesState"
      },
      {
        "kind": "PropertySignature",
        "name": "steps",
        "type": "StateUtils.LoaderState<CheckoutStepsState>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "CheckoutStepsState",
    "members": [
      { "kind": "PropertySignature", "name": "address", "type": "Address" },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "{\n        supported: {\n            [code: string]: DeliveryMode;\n        };\n        selected: string;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "orderDetails",
        "type": "Order | ReplenishmentOrder"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentDetails",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "poNumber",
        "type": "{\n        po?: string;\n        costCenter?: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "ClearCheckoutService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutDeliveryFacade",
            "type": "CheckoutDeliveryFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutDeliveryFacade:class",
            "shortType": "CheckoutDeliveryFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "checkoutPaymentFacade",
            "type": "CheckoutPaymentFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!CheckoutPaymentFacade:class",
            "shortType": "CheckoutPaymentFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutDeliveryFacade",
        "type": "CheckoutDeliveryFacade"
      },
      {
        "kind": "Property",
        "name": "checkoutPaymentFacade",
        "type": "CheckoutPaymentFacade"
      },
      {
        "kind": "Method",
        "name": "resetCheckoutProcesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "DELIVERY_MODE_NORMALIZER",
    "type": "InjectionToken<Converter<any, DeliveryMode>>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "GET_PAYMENT_TYPES_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "OrderTypesState",
    "members": [
      { "kind": "PropertySignature", "name": "selected", "type": "ORDER_TYPE" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PAYMENT_DETAILS_SERIALIZER",
    "type": "InjectionToken<Converter<PaymentDetails, any>>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PAYMENT_TYPE_NORMALIZER",
    "type": "InjectionToken<Converter<any, PaymentType>>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PaymentTypeAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "loadPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "typeCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "poNumber",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PaymentTypeConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "PaymentTypeAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!PaymentTypeAdapter:class",
            "shortType": "PaymentTypeAdapter",
            "importPath": "@spartacus/checkout/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "PaymentTypeAdapter" },
      {
        "kind": "Method",
        "name": "getPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "typeCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "poNumber",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Class",
    "name": "PaymentTypeService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutStore",
            "type": "Store<StateWithCheckout>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "checkoutStore",
        "type": "Store<StateWithCheckout>"
      },
      {
        "kind": "Method",
        "name": "getPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Method",
        "name": "getPoNumber",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "getSelectedPaymentType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "isAccountPayment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "typeCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "poNumber",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "PaymentTypesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "{\n        [code: string]: PaymentType;\n    }"
      },
      { "kind": "PropertySignature", "name": "selected", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "PLACED_ORDER_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_FORM_SERIALIZER",
    "type": "InjectionToken<Converter<ScheduleReplenishmentForm, any>>"
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_COST_CENTER_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_ADDRESS_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_DELIVERY_MODE_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_PAYMENT_DETAILS_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Variable",
    "name": "SET_SUPPORTED_DELIVERY_MODE_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/core",
    "kind": "Interface",
    "name": "StateWithCheckout",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "checkout",
        "type": "CheckoutState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Interface",
    "name": "CheckoutOccEndpoints",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cardTypes",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "clearDeliveryMode",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "createDeliveryAddress",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "createPaymentDetails",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryModes",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "loadCheckoutDetails",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentProviderSubInfo",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentTypes",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "placeOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "removeDeliveryAddress",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setCartCostCenter",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setCartPaymentDetails",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setCartPaymentType",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setDeliveryAddress",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "setDeliveryMode",
        "type": "string | OccEndpoint"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "CheckoutOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getClearDeliveryModeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLoadCheckoutDetailsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "termsChecked",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRemoveDeliveryAddressEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CheckoutDetails>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutCostCenterAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getSetCartCostCenterEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutDeliveryAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getCreateDeliveryAddressEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModesEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryAddressEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryModeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "deliveryModeId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSupportedModes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<DeliveryMode[]>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "setAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "setMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "deliveryModeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutPaymentAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "createDetailsWithParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parameters",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "createSubWithProvider",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "postUrl",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parameters",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getCardTypesEndpoint",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCreatePaymentDetailsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPaymentProviderSubInfoEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getProviderSubInfo",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getSetPaymentDetailsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentDetailsId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "set",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentDetailsId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutPaymentTypeAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getPaymentTypesEndpoint",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSetCartPaymentTypeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "purchaseOrderNumber",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "purchaseOrderNumber",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccCheckoutReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getScheduleReplenishmentOrderEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "termsChecked",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/occ",
    "kind": "Class",
    "name": "OccReplenishmentOrderFormSerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ScheduleReplenishmentForm",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_occ!Occ.ScheduleReplenishmentForm:interface",
            "shortType": "Occ.ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "ScheduleReplenishmentForm",
            "isOptional": true,
            "canonicalReference": "@spartacus/checkout_occ!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ScheduleReplenishmentForm"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Variable",
    "name": "CHECKOUT_CORE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Variable",
    "name": "CHECKOUT_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutConfig",
    "members": [
      {
        "kind": "Property",
        "name": "checkout",
        "type": "{\n        steps?: Array<CheckoutStep>;\n        express?: boolean;\n        defaultDeliveryMode?: Array<DeliveryModePreferences | string>;\n        guest?: boolean;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutCostCenterFacade",
    "members": [
      {
        "kind": "Method",
        "name": "getCostCenter",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "setCostCenter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutDeliveryFacade",
    "members": [
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createAndSetAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_root!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getLoadSupportedDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DeliveryMode | undefined | null>"
      },
      {
        "kind": "Method",
        "name": "getSelectedDeliveryModeCode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryAddressProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSetDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "getSupportedDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DeliveryMode[]>"
      },
      {
        "kind": "Method",
        "name": "loadSupportedDeliveryModes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetLoadSupportedDeliveryModesProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetDeliveryAddressProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetDeliveryModeProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDeliveryAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_root!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDeliveryMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutFacade",
    "members": [
      {
        "kind": "Method",
        "name": "clearCheckoutData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCheckoutStep",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stepNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearPlaceOrderState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCheckoutDetailsLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCurrentOrderType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ORDER_TYPE>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order | ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPlaceOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadCheckoutDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "placeOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scheduleReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scheduleReplenishmentForm",
            "type": "ScheduleReplenishmentForm",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_root!ScheduleReplenishmentForm:interface",
            "shortType": "ScheduleReplenishmentForm",
            "importPath": "@spartacus/core"
          },
          {
            "name": "termsChecked",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setOrderType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderType",
            "type": "ORDER_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_root!ORDER_TYPE:enum",
            "shortType": "ORDER_TYPE",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutPaymentFacade",
    "members": [
      {
        "kind": "Method",
        "name": "createPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_root!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CardType[]>"
      },
      {
        "kind": "Method",
        "name": "getPaymentDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Method",
        "name": "getSetPaymentDetailsResultProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StateUtils.LoaderState<void>>"
      },
      {
        "kind": "Method",
        "name": "loadSupportedCardTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "paymentProcessSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetSetPaymentDetailsProcess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentDetails",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_root!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Variable",
    "name": "checkoutPaymentSteps",
    "type": "CheckoutStepType[]"
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "CheckoutRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Variable",
    "name": "checkoutShippingSteps",
    "type": "CheckoutStepType[]"
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Interface",
    "name": "CheckoutStep",
    "members": [
      { "kind": "PropertySignature", "name": "disabled", "type": "boolean" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "routeName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "type",
        "type": "Array<CheckoutStepType>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Enum",
    "name": "CheckoutStepType",
    "members": [
      "DELIVERY_MODE",
      "PAYMENT_DETAILS",
      "PAYMENT_TYPE",
      "REVIEW_ORDER",
      "SHIPPING_ADDRESS"
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "ClearCheckoutFacade",
    "members": [
      {
        "kind": "Method",
        "name": "resetCheckoutProcesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Function",
    "name": "defaultCheckoutComponentsConfig",
    "parameters": [],
    "returnType": "{\n    featureModules: {\n        checkout: {\n            cmsComponents: string[];\n        };\n        checkoutCore: string;\n    };\n}"
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Enum",
    "name": "DeliveryModePreferences",
    "members": ["FREE", "LEAST_EXPENSIVE", "MOST_EXPENSIVE"]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "OrderConfirmationOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "checkoutService",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/checkout_root!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "checkoutService",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "OrderPlacedEvent",
    "members": [
      { "kind": "Property", "name": "code", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout/root",
    "kind": "Class",
    "name": "PaymentTypeFacade",
    "members": [
      {
        "kind": "Method",
        "name": "getPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentType[]>"
      },
      {
        "kind": "Method",
        "name": "getPoNumber",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "getSelectedPaymentType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "isAccountPayment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadPaymentTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "typeCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "poNumber",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/checkout",
    "kind": "Class",
    "name": "CheckoutModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ActionToEventMapping",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "action",
        "type": "string | string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "event",
        "type": "Type<T> | null"
      },
      {
        "kind": "PropertySignature",
        "name": "factory",
        "type": "(action: any) => T"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ActivatedRouterStateSnapshot",
    "members": [
      { "kind": "PropertySignature", "name": "cmsRequired", "type": "boolean" },
      { "kind": "PropertySignature", "name": "context", "type": "PageContext" },
      { "kind": "PropertySignature", "name": "params", "type": "Params" },
      { "kind": "PropertySignature", "name": "queryParams", "type": "Params" },
      {
        "kind": "PropertySignature",
        "name": "semanticRoute",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ActivatedRouteSnapshotWithPageMeta",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "routeConfig",
        "type": "(Route & {\n        data?: Data & {\n            cxPageMeta?: RoutePageMetaConfig;\n        };\n    }) | null"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ActivatedRoutesService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routes$",
        "type": "Observable<ActivatedRouteSnapshot[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ActiveCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "activeCart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "activeCartId$",
        "type": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "addEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "email",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartEntries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEntriesGuestMerge",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartEntries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "cartSelector$",
        "type": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getActiveCartId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getAssignedUser",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry>"
      },
      {
        "kind": "Method",
        "name": "getLastEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry>"
      },
      {
        "kind": "Method",
        "name": "getLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "guestCartMerge",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "initActiveCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isCartCreating",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartState",
            "type": "ProcessesLoaderState<Cart>",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProcessesLoaderState:interface",
            "shortType": "ProcessesLoaderState",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "str",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGuestCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isJustLoggedIn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "previousUserId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrMerge",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "previousUserId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reloadActiveCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requireLoadedCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customCartSelector$",
            "type": "Observable<ProcessesLoaderState<Cart>>",
            "isOptional": true,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "requireLoadedCartForGuestMerge",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "takeActive",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "updateEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entryNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_PRODUCT_INTEREST_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_VOUCHER_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADDRESS_LIST_NORMALIZER",
    "type": "InjectionToken<Converter<any, EntitiesModel<Address>>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADDRESS_NORMALIZER",
    "type": "InjectionToken<Converter<any, Address>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADDRESS_SERIALIZER",
    "type": "InjectionToken<Converter<Address, any>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADDRESS_VALIDATION_NORMALIZER",
    "type": "InjectionToken<Converter<any, AddressValidation>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Address",
    "members": [
      { "kind": "PropertySignature", "name": "cellphone", "type": "string" },
      { "kind": "PropertySignature", "name": "companyName", "type": "string" },
      { "kind": "PropertySignature", "name": "country", "type": "Country" },
      {
        "kind": "PropertySignature",
        "name": "defaultAddress",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "district", "type": "string" },
      { "kind": "PropertySignature", "name": "email", "type": "string" },
      { "kind": "PropertySignature", "name": "firstName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "formattedAddress",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "lastName", "type": "string" },
      { "kind": "PropertySignature", "name": "line1", "type": "string" },
      { "kind": "PropertySignature", "name": "line2", "type": "string" },
      { "kind": "PropertySignature", "name": "phone", "type": "string" },
      { "kind": "PropertySignature", "name": "postalCode", "type": "string" },
      { "kind": "PropertySignature", "name": "region", "type": "Region" },
      {
        "kind": "PropertySignature",
        "name": "shippingAddress",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "titleCode", "type": "string" },
      { "kind": "PropertySignature", "name": "town", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "visibleInAddressBook",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "AddressValidation",
    "members": [
      { "kind": "PropertySignature", "name": "decision", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "errors",
        "type": "{\n        errors: ErrorModel[];\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "suggestedAddresses",
        "type": "Address[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddUserAddressEvent",
    "members": [
      { "kind": "Property", "name": "address", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ANONYMOUS_CONSENT_NORMALIZER",
    "type": "InjectionToken<Converter<string, AnonymousConsent[]>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "ANONYMOUS_CONSENT_STATUS",
    "members": ["GIVEN", "WITHDRAWN"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ANONYMOUS_CONSENTS_HEADER",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ANONYMOUS_CONSENTS_STORE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ANONYMOUS_CONSENTS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "AnonymousConsent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "consentState",
        "type": "ANONYMOUS_CONSENT_STATUS"
      },
      { "kind": "PropertySignature", "name": "templateCode", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "templateVersion",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "anonymousConsentsService",
            "type": "AnonymousConsentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsentsService:class",
            "shortType": "AnonymousConsentsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsService",
        "type": "AnonymousConsentsService"
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "AnonymousConsent[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "AnonymousConsentsActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ANONYMOUS_CONSENT_CHECK_UPDATED_VERSIONS",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentCheckUpdatedVersions",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "AnonymousConsentsActions",
    "namespace": "AnonymousConsentsActions",
    "members": [
      "LoadAnonymousConsentTemplates",
      " | ",
      "LoadAnonymousConsentTemplatesSuccess",
      " | ",
      "LoadAnonymousConsentTemplatesFail",
      " | ",
      "ResetLoadAnonymousConsentTemplates",
      " | ",
      "GetAllAnonymousConsents",
      " | ",
      "SetAnonymousConsents",
      " | ",
      "GetAnonymousConsent",
      " | ",
      "GiveAnonymousConsent",
      " | ",
      "WithdrawAnonymousConsent",
      " | ",
      "ToggleAnonymousConsentsBannerDissmissed",
      " | ",
      "ToggleAnonymousConsentTemplatesUpdated",
      " | ",
      "AnonymousConsentCheckUpdatedVersions"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GET_ALL_ANONYMOUS_CONSENTS",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GET_ANONYMOUS_CONSENT",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GetAllAnonymousConsents",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GetAnonymousConsent",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "templateCode", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GIVE_ANONYMOUS_CONSENT",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GiveAnonymousConsent",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "templateCode", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ANONYMOUS_CONSENT_TEMPLATES_FAIL",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ANONYMOUS_CONSENT_TEMPLATES_SUCCESS",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ANONYMOUS_CONSENT_TEMPLATES",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadAnonymousConsentTemplates",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadAnonymousConsentTemplatesFail",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadAnonymousConsentTemplatesSuccess",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ConsentTemplate[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ConsentTemplate[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_LOAD_ANONYMOUS_CONSENT_TEMPLATES",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetLoadAnonymousConsentTemplates",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_ANONYMOUS_CONSENTS",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetAnonymousConsents",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "AnonymousConsent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "AnonymousConsent[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "TOGGLE_ANONYMOUS_CONSENT_TEMPLATES_UPDATED",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "TOGGLE_ANONYMOUS_CONSENTS_BANNER_DISMISSED",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ToggleAnonymousConsentsBannerDissmissed",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "dismissed",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "dismissed", "type": "boolean" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ToggleAnonymousConsentTemplatesUpdated",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "updated",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "updated", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "WITHDRAW_ANONYMOUS_CONSENT",
    "namespace": "AnonymousConsentsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "WithdrawAnonymousConsent",
    "namespace": "AnonymousConsentsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "templateCode", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentsConfig",
    "members": [
      {
        "kind": "Property",
        "name": "anonymousConsents",
        "type": "{\n        registerConsent?: string;\n        showLegalDescriptionInDialog?: boolean;\n        requiredConsents?: string[];\n        consentManagementPage?: {\n            showAnonymousConsents?: boolean;\n            hideConsents?: string[];\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentsInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "anonymousConsentsService",
            "type": "AnonymousConsentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsentsService:class",
            "shortType": "AnonymousConsentsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "AnonymousConsentsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsentsConfig:class",
            "shortType": "AnonymousConsentsConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentsModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<AnonymousConsentsModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "AnonymousConsentsSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentByTemplateCode",
    "namespace": "AnonymousConsentsSelectors",
    "type": "(templateCode: string) => MemoizedSelector<StateWithAnonymousConsents, AnonymousConsent>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsents",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, AnonymousConsent[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentsBannerDismissed",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentState",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, AnonymousConsentsState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentTemplate",
    "namespace": "AnonymousConsentsSelectors",
    "type": "(templateCode: string) => MemoizedSelector<StateWithAnonymousConsents, ConsentTemplate>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentTemplatesError",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentTemplatesLoading",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentTemplatesState",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, LoaderState<ConsentTemplate[]>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentTemplatesSuccess",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentTemplatesUpdate",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAnonymousConsentTemplatesValue",
    "namespace": "AnonymousConsentsSelectors",
    "type": "MemoizedSelector<StateWithAnonymousConsents, ConsentTemplate[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithAnonymousConsents>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "consentsUpdated",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "newConsents",
            "type": "AnonymousConsent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          },
          {
            "name": "previousConsents",
            "type": "AnonymousConsent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "decodeAndDeserialize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "rawConsents",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "AnonymousConsent[]"
      },
      {
        "kind": "Method",
        "name": "detectUpdatedTemplates",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentTemplates",
            "type": "ConsentTemplate[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          },
          {
            "name": "newTemplates",
            "type": "ConsentTemplate[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "getConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<AnonymousConsent>"
      },
      {
        "kind": "Method",
        "name": "getConsents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AnonymousConsent[]>"
      },
      {
        "kind": "Method",
        "name": "getLoadTemplatesError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getLoadTemplatesLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getLoadTemplatesSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getTemplate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate>"
      },
      {
        "kind": "Method",
        "name": "getTemplates",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "loadIfMissing",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Method",
        "name": "getTemplatesUpdated",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "giveAllConsents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Method",
        "name": "giveConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isBannerDismissed",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isBannerVisible",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isConsentGiven",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "AnonymousConsent",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConsentWithdrawn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "AnonymousConsent",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "loadTemplates",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetLoadTemplatesState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "serializeAndEncode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consents",
            "type": "AnonymousConsent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "setConsents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consents",
            "type": "AnonymousConsent[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithAnonymousConsents>"
      },
      {
        "kind": "Method",
        "name": "toggleBannerDismissed",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "dismissed",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleTemplatesUpdated",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "updated",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "withdrawAllConsents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Method",
        "name": "withdrawConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "AnonymousConsentsState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "consents",
        "type": "AnonymousConsent[]"
      },
      {
        "kind": "PropertySignature",
        "name": "templates",
        "type": "StateUtils.LoaderState<ConsentTemplate[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "ui",
        "type": "{\n        bannerDismissed: boolean;\n        updated: boolean;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentsStatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "statePersistenceService",
            "type": "StatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!StatePersistenceService:class",
            "shortType": "StatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "store",
            "type": "Store<StateWithAnonymousConsents>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "anonymousConsentsService",
            "type": "AnonymousConsentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsentsService:class",
            "shortType": "AnonymousConsentsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsService",
        "type": "AnonymousConsentsService"
      },
      {
        "kind": "Method",
        "name": "getAuthState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<SyncedAnonymousConsentsState>"
      },
      {
        "kind": "Method",
        "name": "initSync",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onRead",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "state",
            "type": "SyncedAnonymousConsentsState | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SyncedAnonymousConsentsState:type",
            "shortType": "SyncedAnonymousConsentsState",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "statePersistenceService",
        "type": "StatePersistenceService"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithAnonymousConsents>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentTemplatesAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "loadAnonymousConsents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AnonymousConsent[]>"
      },
      {
        "kind": "Method",
        "name": "loadAnonymousConsentTemplates",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsentTemplate[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AnonymousConsentTemplatesConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "AnonymousConsentTemplatesAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsentTemplatesAdapter:class",
            "shortType": "AnonymousConsentTemplatesAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "AnonymousConsentTemplatesAdapter"
      },
      {
        "kind": "Method",
        "name": "loadAnonymousConsents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AnonymousConsent[]>"
      },
      {
        "kind": "Method",
        "name": "loadAnonymousConsentTemplates",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsentTemplate[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Applicable",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Priority | number"
      },
      {
        "kind": "MethodSignature",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "AuthActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "Login",
    "namespace": "AuthActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOGIN",
    "namespace": "AuthActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "LoginLogoutAction",
    "namespace": "AuthActions",
    "members": ["Login", " | ", "Logout"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "Logout",
    "namespace": "AuthActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOGOUT",
    "namespace": "AuthActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthConfig",
    "members": [
      {
        "kind": "Property",
        "name": "authentication",
        "type": "{\n        client_id?: string;\n        client_secret?: string;\n        baseUrl?: string;\n        tokenEndpoint?: string;\n        revokeEndpoint?: string;\n        loginUrl?: string;\n        logoutUrl?: string;\n        userinfoEndpoint?: string;\n        OAuthLibConfig?: AuthLibConfig;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authConfig",
            "type": "AuthConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthConfig:class",
            "shortType": "AuthConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occConfig",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authConfig", "type": "AuthConfig" },
      {
        "kind": "Method",
        "name": "getBaseUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getClientId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getClientSecret",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLoginUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLogoutUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOAuthFlow",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "OAuthFlow"
      },
      {
        "kind": "Method",
        "name": "getOAuthLibConfig",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "AuthLibConfig"
      },
      {
        "kind": "Method",
        "name": "getRevokeEndpoint",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getTokenEndpoint",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getUserinfoEndpoint",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "occConfig", "type": "OccConfig" },
      {
        "kind": "Method",
        "name": "prefixEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "endpoint",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthFlowRoutesService",
    "members": [
      { "kind": "Property", "name": "_authFlowPaths", "type": "string[]" },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "RoutingConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingConfig:class",
            "shortType": "RoutingConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "urlParsingService",
            "type": "UrlParsingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlParsingService:class",
            "shortType": "UrlParsingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authFlowPaths", "type": "string[]" },
      { "kind": "Property", "name": "config", "type": "RoutingConfig" },
      {
        "kind": "Method",
        "name": "isAuthFlow",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "urlParsingService",
        "type": "UrlParsingService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthHttpHeaderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authStorageService",
            "type": "AuthStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthStorageService:class",
            "shortType": "AuthStorageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "oAuthLibWrapperService",
            "type": "OAuthLibWrapperService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OAuthLibWrapperService:class",
            "shortType": "OAuthLibWrapperService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "alterRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "token",
            "type": "AuthToken",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "HttpRequest<any>"
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AuthStorageService"
      },
      {
        "kind": "Method",
        "name": "createAuthorizationHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "AuthToken",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        Authorization: string;\n    } | {}"
      },
      {
        "kind": "Method",
        "name": "createNewRequestWithNewToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "token",
            "type": "AuthToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "HttpRequest<any>"
      },
      {
        "kind": "Method",
        "name": "getAuthorizationHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Method",
        "name": "getStableToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AuthToken | undefined>"
      },
      {
        "kind": "Method",
        "name": "getValidToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "requestToken",
            "type": "AuthToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<AuthToken | undefined>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleExpiredAccessToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          },
          {
            "name": "initialToken",
            "type": "AuthToken",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<HttpEvent<AuthToken>>"
      },
      {
        "kind": "Method",
        "name": "handleExpiredRefreshToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleExpiredToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AuthToken | undefined>"
      },
      {
        "kind": "Method",
        "name": "isOccUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "oAuthLibWrapperService",
        "type": "OAuthLibWrapperService"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      { "kind": "Property", "name": "refreshInProgress", "type": "boolean" },
      {
        "kind": "Property",
        "name": "refreshToken$",
        "type": "Observable<[AuthToken, boolean, boolean]>"
      },
      {
        "kind": "Property",
        "name": "refreshTokenTrigger$",
        "type": "Subject<AuthToken>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "shouldAddAuthorizationHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "shouldCatchError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "stopProgress$",
        "type": "Observable<[AuthToken, AuthToken]>"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "token$",
        "type": "Observable<AuthToken | undefined>"
      },
      {
        "kind": "Property",
        "name": "tokenToRetryRequest$",
        "type": "Observable<AuthToken>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authHttpHeaderService",
            "type": "AuthHttpHeaderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthHttpHeaderService:class",
            "shortType": "AuthHttpHeaderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authConfigService",
            "type": "AuthConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthConfigService:class",
            "shortType": "AuthConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authConfigService",
        "type": "AuthConfigService"
      },
      {
        "kind": "Property",
        "name": "authHttpHeaderService",
        "type": "AuthHttpHeaderService"
      },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      },
      {
        "kind": "Method",
        "name": "isExpiredToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "resp",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "AuthLibConfig",
    "members": [
      "Omit",
      "<",
      "LibConfig",
      ", 'clientId' | 'dummyClientSecret' | 'siletRefreshTimeout' | 'loginUrl' | 'logoutUrl' | 'tokenEndpoint' | 'revocationEndpoint' | 'userinfoEndpoint'>"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<AuthModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthRedirectService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "authRedirectStorageService",
            "type": "AuthRedirectStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthRedirectStorageService:class",
            "shortType": "AuthRedirectStorageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authFlowRoutesService",
            "type": "AuthFlowRoutesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthFlowRoutesService:class",
            "shortType": "AuthFlowRoutesService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authFlowRoutesService",
        "type": "AuthFlowRoutesService"
      },
      {
        "kind": "Property",
        "name": "authRedirectStorageService",
        "type": "AuthRedirectStorageService"
      },
      {
        "kind": "Method",
        "name": "clearRedirectUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "redirect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reportAuthGuard",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reportNotAuthGuard",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "saveCurrentNavigationUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRedirectUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthRedirectStorageService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "getRedirectUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "setRedirectUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "redirectUrl",
            "type": "string | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithClientAuth>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "oAuthLibWrapperService",
            "type": "OAuthLibWrapperService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OAuthLibWrapperService:class",
            "shortType": "OAuthLibWrapperService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authStorageService",
            "type": "AuthStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthStorageService:class",
            "shortType": "AuthStorageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AuthStorageService"
      },
      {
        "kind": "Method",
        "name": "checkOAuthParamsInUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "coreLogout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "isUserLoggedIn",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loginWithCredentials",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "loginWithRedirect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "logout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "logoutInProgress$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "oAuthLibWrapperService",
        "type": "OAuthLibWrapperService"
      },
      {
        "kind": "Property",
        "name": "refreshInProgress$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "setLogoutProgress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "progress",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRefreshProgress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "progress",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithClientAuth>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthStatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "statePersistenceService",
            "type": "StatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!StatePersistenceService:class",
            "shortType": "StatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authStorageService",
            "type": "AuthStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthStorageService:class",
            "shortType": "AuthStorageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectStorageService",
            "type": "AuthRedirectStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthRedirectStorageService:class",
            "shortType": "AuthRedirectStorageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authRedirectStorageService",
        "type": "AuthRedirectStorageService"
      },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AuthStorageService"
      },
      {
        "kind": "Method",
        "name": "getAuthState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<SyncedAuthState>"
      },
      {
        "kind": "Method",
        "name": "initSync",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isUserLoggedIn",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onRead",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "state",
            "type": "SyncedAuthState | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SyncedAuthState:interface",
            "shortType": "SyncedAuthState",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readStateFromStorage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "SyncedAuthState"
      },
      {
        "kind": "Property",
        "name": "statePersistenceService",
        "type": "StatePersistenceService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AuthStorageService",
    "members": [
      {
        "kind": "Property",
        "name": "_token$",
        "type": "Observable<AuthToken>"
      },
      {
        "kind": "Method",
        "name": "decode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "encode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "getToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AuthToken>"
      },
      {
        "kind": "Property",
        "name": "nonStringifiedOAuthLibKeys",
        "type": "string[]"
      },
      {
        "kind": "Method",
        "name": "removeItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "data",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "AuthToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthToken:interface",
            "shortType": "AuthToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "AuthToken",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "access_token_stored_at",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "access_token", "type": "string" },
      { "kind": "PropertySignature", "name": "expires_at", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "granted_scopes",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "refresh_token",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "token_type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BApprovalProcess",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "B2BPaymentTypeEnum",
    "members": ["ACCOUNT_PAYMENT", "CARD_PAYMENT"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BUnit",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "addresses", "type": "Address[]" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BUser",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "B2BUserRole",
    "members": ["ADMIN", "APPROVER", "CUSTOMER", "MANAGER"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BackendConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "loadingScopes",
        "type": "LoadingScopes"
      },
      {
        "kind": "PropertySignature",
        "name": "media",
        "type": "{\n        baseUrl?: string;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "occ",
        "type": "{\n        baseUrl?: string;\n        prefix?: string;\n        useWithCredentials?: boolean;\n        endpoints?: OccEndpoints;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BadGatewayHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BadRequestHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "ErrorModel[]"
      },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleBadCartRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleBadLoginResponse",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleBadPassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleGuestDuplicateEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleValidationError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleVoucherOperationError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "BASE_SITE_CONTEXT_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "BASE_SITE_NORMALIZER",
    "type": "InjectionToken<Converter<any, BaseSite>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BaseCoreModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<BaseCoreModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BaseOccModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<BaseOccModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseOccUrlProperties",
    "members": [
      { "kind": "PropertySignature", "name": "baseSite", "type": "boolean" },
      { "kind": "PropertySignature", "name": "baseUrl", "type": "boolean" },
      { "kind": "PropertySignature", "name": "prefix", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseOption",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "options",
        "type": "VariantOption[]"
      },
      {
        "kind": "PropertySignature",
        "name": "selected",
        "type": "VariantOption"
      },
      {
        "kind": "PropertySignature",
        "name": "variantType",
        "type": "VariantType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BasePageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingPageMetaResolver",
            "type": "RoutingPageMetaResolver",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingPageMetaResolver:class",
            "shortType": "RoutingPageMetaResolver",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "pageLinkService",
            "type": "PageLinkService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageLinkService:class",
            "shortType": "PageLinkService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breadcrumb$",
        "type": "Observable<BreadcrumbMeta[]>"
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      {
        "kind": "Property",
        "name": "description$",
        "type": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "homeBreadcrumb$",
        "type": "Observable<BreadcrumbMeta[]>"
      },
      { "kind": "Property", "name": "page$", "type": "Observable<Page>" },
      {
        "kind": "Property",
        "name": "pageLinkService",
        "type": "PageLinkService"
      },
      {
        "kind": "Method",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BreadcrumbMeta[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveCanonicalUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "CanonicalUrlOptions",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!CanonicalUrlOptions:interface",
            "shortType": "CanonicalUrlOptions",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "resolveDescription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "robots$",
        "type": "Observable<PageRobotsMeta[]>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routingPageMetaResolver",
        "type": "RoutingPageMetaResolver"
      },
      {
        "kind": "Property",
        "name": "title$",
        "type": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseSite",
    "members": [
      { "kind": "PropertySignature", "name": "baseStore", "type": "BaseStore" },
      { "kind": "PropertySignature", "name": "channel", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "defaultLanguage",
        "type": "Language"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultPreviewCatalogId",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultPreviewCategoryCode",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultPreviewProductCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "locale", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "stores", "type": "BaseStore[]" },
      { "kind": "PropertySignature", "name": "theme", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "urlEncodingAttributes",
        "type": "string[]"
      },
      { "kind": "PropertySignature", "name": "urlPatterns", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseSiteEntities",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "uid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "BaseSite"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BaseSiteInitializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configInit",
            "type": "ConfigInitializerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConfigInitializerService:class",
            "shortType": "ConfigInitializerService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      {
        "kind": "Property",
        "name": "configInit",
        "type": "ConfigInitializerService"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDefaultFromConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFallbackValue",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<unknown>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BaseSiteNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.BaseSite",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.BaseSite:interface",
            "shortType": "Occ.BaseSite",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "BaseSite",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!BaseSite:interface",
            "shortType": "BaseSite",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "BaseSite"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BaseSiteService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithSiteContext>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "SiteContextConfig" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "siteUid",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<BaseSite | undefined>"
      },
      {
        "kind": "Method",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BaseSite[]>"
      },
      {
        "kind": "Method",
        "name": "isInitialized",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isValid",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "baseSite",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithSiteContext>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseSiteState",
    "members": [
      { "kind": "PropertySignature", "name": "activeSite", "type": "string" },
      { "kind": "PropertySignature", "name": "details", "type": "BaseSite" },
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "BaseSiteEntities"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseStore",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "currencies",
        "type": "Currency[]"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultCurrency",
        "type": "Currency"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultLanguage",
        "type": "Language"
      },
      { "kind": "PropertySignature", "name": "languages", "type": "Language[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BillingCountriesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "BillingCountryEntities"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BillingCountryEntities",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Country"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Breadcrumb",
    "members": [
      { "kind": "PropertySignature", "name": "facetCode", "type": "string" },
      { "kind": "PropertySignature", "name": "facetName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "facetValueCode",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "facetValueName",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "removeQuery",
        "type": "SearchState"
      },
      {
        "kind": "PropertySignature",
        "name": "truncateQuery",
        "type": "SearchState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BreadcrumbMeta",
    "members": [
      { "kind": "PropertySignature", "name": "label", "type": "string" },
      { "kind": "PropertySignature", "name": "link", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_RETURN_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CancellationRequestEntryInputList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cancellationRequestEntryInputs",
        "type": "CancelOrReturnRequestEntryInput[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CancelOrReturnRequestEntryInput",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderEntryNumber",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CanonicalPageResolver",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "resolveCanonicalUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CanonicalUrlOptions",
    "members": [
      { "kind": "PropertySignature", "name": "forceHttps", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "forceTrailingSlash",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "forceWww", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "removeQueryParams",
        "type": "boolean | string[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CardType",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Carrier",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_MODIFICATION_NORMALIZER",
    "type": "InjectionToken<Converter<any, CartModification>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_NORMALIZER",
    "type": "InjectionToken<Converter<any, Cart>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_VALIDATION_NORMALIZER",
    "type": "InjectionToken<Converter<any, CartModificationList>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_VOUCHER_NORMALIZER",
    "type": "InjectionToken<Converter<any, Voucher>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Cart",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "CostCenter"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "expirationTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentType",
        "type": "PaymentType"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "purchaseOrderNumber",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "savedBy", "type": "Principal" },
      { "kind": "PropertySignature", "name": "saveTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalUnitCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "CartActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_EMAIL_TO_CART_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_EMAIL_TO_CART_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_EMAIL_TO_CART",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddEmailToCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        email: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        email: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddEmailToCartFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n        email: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n        email: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddEmailToCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        email: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        email: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_ENTRY_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_ENTRY_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_ENTRY",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_VOUCHER_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_VOUCHER_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_ADD_VOUCHER",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_PROCESSES_DECREMENT",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_PROCESSES_INCREMENT",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_ENTRY_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_ENTRY_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_ENTRY",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_VOUCHER_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_VOUCHER_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_REMOVE_VOUCHER",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_RESET_ADD_VOUCHER",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_UPDATE_ENTRY_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_UPDATE_ENTRY_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CART_UPDATE_ENTRY",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CartAction",
    "namespace": "CartActions",
    "members": [
      "CreateCart",
      " | ",
      "CreateCartFail",
      " | ",
      "CreateCartSuccess",
      " | ",
      "LoadCart",
      " | ",
      "LoadCartFail",
      " | ",
      "LoadCartSuccess",
      " | ",
      "LoadCartsSuccess",
      " | ",
      "MergeCart",
      " | ",
      "MergeCartSuccess",
      " | ",
      "ResetCartDetails",
      " | ",
      "AddEmailToCart",
      " | ",
      "AddEmailToCartFail",
      " | ",
      "AddEmailToCartSuccess",
      " | ",
      "DeleteCart",
      " | ",
      "DeleteCartSuccess",
      " | ",
      "DeleteCartFail",
      " | ",
      "RemoveCart"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntry",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        userId: string;\n        productCode: string;\n        quantity: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntryFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntrySuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        productCode: string;\n        quantity: number;\n        deliveryModeChanged?: boolean;\n        entry?: OrderEntry;\n        quantityAdded?: number;\n        statusCode?: string;\n        statusMessage?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddVoucher",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddVoucherFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddVoucherSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CartEntryAction",
    "namespace": "CartActions",
    "members": [
      "CartAddEntry",
      " | ",
      "CartAddEntrySuccess",
      " | ",
      "CartAddEntryFail",
      " | ",
      "CartRemoveEntry",
      " | ",
      "CartRemoveEntrySuccess",
      " | ",
      "CartRemoveEntryFail",
      " | ",
      "CartUpdateEntry",
      " | ",
      "CartUpdateEntrySuccess",
      " | ",
      "CartUpdateEntryFail"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartProcessesDecrement",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartProcessesIncrement",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntry",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        userId: string;\n        entryNumber: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        userId: string;\n        entryNumber: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntryFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n        cartId: string;\n        userId: string;\n        entryNumber: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n        cartId: string;\n        userId: string;\n        entryNumber: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntrySuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveVoucher",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveVoucherFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n        cartId: string;\n        userId: string;\n        voucherId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n        cartId: string;\n        userId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveVoucherSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        voucherId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartResetAddVoucher",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntry",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntryFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntrySuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        entryNumber: string;\n        quantity?: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CartVoucherAction",
    "namespace": "CartActions",
    "members": [
      "CartAddVoucher",
      " | ",
      "CartAddVoucherFail",
      " | ",
      "CartAddVoucherSuccess",
      " | ",
      "CartResetAddVoucher",
      " | ",
      "CartRemoveVoucher",
      " | ",
      "CartRemoveVoucherFail",
      " | ",
      "CartRemoveVoucherSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_CART_STATE",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearCartState",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_CART_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_CART_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_CART",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_WISH_LIST_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_WISH_LIST_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_WISH_LIST",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CreateCartPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~CreateCartPayload:interface",
            "shortType": "CreateCartPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CreateCartPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateCartFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CreateCartFailPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~CreateCartFailPayload:interface",
            "shortType": "CreateCartFailPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CreateCartFailPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CreateCartSuccessPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~CreateCartSuccessPayload:interface",
            "shortType": "CreateCartSuccessPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CreateCartSuccessPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateWishList",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        name: string;\n        description?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        name: string;\n        description?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateWishListFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n        error?: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n        error?: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateWishListSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cart: Cart;\n        userId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cart: Cart;\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_CART_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_CART_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_CART",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteCartFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CART_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CART_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CART",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CARTS_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_WISH_LIST_FAIL",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_WISH_LIST_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_WISH_LIST",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadCartPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~LoadCartPayload:interface",
            "shortType": "LoadCartPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "LoadCartPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCartFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadCartFailPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~LoadCartFailPayload:interface",
            "shortType": "LoadCartFailPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "LoadCartFailPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCartsSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Cart[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Cart[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadCartSuccessPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~LoadCartSuccessPayload:interface",
            "shortType": "LoadCartSuccessPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "LoadCartSuccessPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadWishList",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadWishListPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~LoadWishListPayload:interface",
            "shortType": "LoadWishListPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "LoadWishListPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadWishListFail",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadWishListFailPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~LoadWishListFailPayload:interface",
            "shortType": "LoadWishListFailPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "LoadWishListFailPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadWishListSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "LoadWishListSuccessPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~LoadWishListSuccessPayload:interface",
            "shortType": "LoadWishListSuccessPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "LoadWishListSuccessPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MERGE_CART_SUCCESS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MERGE_CART",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MergeCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "MergeCartPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~MergeCartPayload:interface",
            "shortType": "MergeCartPayload",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "MergeCartPayload" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MergeCartSuccess",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "MergeCartSuccessPayload",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!~MergeCartSuccessPayload:interface",
            "shortType": "MergeCartSuccessPayload",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "MergeCartSuccessPayload"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "MultiCartActions",
    "namespace": "CartActions",
    "members": [
      "SetTempCart",
      " | ",
      "CartProcessesIncrement",
      " | ",
      "CartProcessesDecrement",
      " | ",
      "SetActiveCartId",
      " | ",
      "ClearCartState"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_CART",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RemoveCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_CART_DETAILS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_WISH_LIST_DETAILS",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetCartDetails",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_ACTIVE_CART_ID",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_TEMP_CART",
    "namespace": "CartActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetActiveCartId",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetTempCart",
    "namespace": "CartActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        cart: Cart;\n        tempCartId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        cart: Cart;\n        tempCartId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "WishListActions",
    "namespace": "CartActions",
    "members": [
      "CreateWishList",
      " | ",
      "CreateWishListSuccess",
      " | ",
      "CreateWishListFail",
      " | ",
      "LoadWishList",
      " | ",
      "LoadWishListSuccess",
      " | ",
      "LoadWishListFail"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "addEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "email",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldCartId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "toMergeCartGuid",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntryEvent",
    "members": [
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntryFailEvent",
    "members": [
      { "kind": "Property", "name": "error", "type": "unknown" },
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartAddEntrySuccessEvent",
    "members": [
      { "kind": "Property", "name": "deliveryModeChanged", "type": "boolean" },
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "quantityAdded", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartConfig",
    "members": [
      {
        "kind": "Property",
        "name": "cart",
        "type": "{\n        selectiveCart?: {\n            enabled?: boolean;\n        };\n        validation?: {\n            enabled?: boolean;\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "CartConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CartConfig:class",
            "shortType": "CartConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "CartConfig" },
      {
        "kind": "Method",
        "name": "isCartValidationEnabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSelectiveCartEnabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CartAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CartAdapter:class",
            "shortType": "CartAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CartAdapter" },
      {
        "kind": "Method",
        "name": "addEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "email",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldCartId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "toMergeCartGuid",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEntryAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "qty",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pickupStore",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEntryConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CartEntryAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CartEntryAdapter:class",
            "shortType": "CartEntryAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CartEntryAdapter" },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "qty",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pickupStore",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEvent",
    "members": [
      { "kind": "Property", "name": "cartCode", "type": "string" },
      { "kind": "Property", "name": "cartId", "type": "string" },
      { "kind": "Property", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "event",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "event", "type": "EventService" },
      {
        "kind": "Method",
        "name": "getAction",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionType",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{\n        type: string;\n        payload?: any;\n    }>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerAddEntry",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerMapped",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapping",
            "type": "ActionToEventMapping<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActionToEventMapping:interface",
            "shortType": "ActionToEventMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "() => void"
      },
      {
        "kind": "Method",
        "name": "registerRemoveEntry",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerUpdateEntry",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_CartEventBuilder",
            "type": "CartEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CartEventBuilder:class",
            "shortType": "CartEventBuilder",
            "importPath": "@spartacus/core"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CartModification",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryModeChanged",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "entry", "type": "OrderEntry" },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "quantityAdded",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "statusCode", "type": "string" },
      { "kind": "PropertySignature", "name": "statusMessage", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CartModificationList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cartModifications",
        "type": "CartModification[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<CartModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartPersistenceModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<CartPersistenceModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntryFailEvent",
    "members": [
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartRemoveEntrySuccessEvent",
    "members": [
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntryFailEvent",
    "members": [
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartUpdateEntrySuccessEvent",
    "members": [
      { "kind": "Property", "name": "entry", "type": "OrderEntry" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartValidationAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "validate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModificationList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartValidationConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CartValidationAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CartValidationAdapter:class",
            "shortType": "CartValidationAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CartValidationAdapter"
      },
      {
        "kind": "Method",
        "name": "validate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModificationList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartValidationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartValidationConnector",
            "type": "CartValidationConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CartValidationConnector:class",
            "shortType": "CartValidationConnector",
            "importPath": "@spartacus/core"
          },
          {
            "name": "command",
            "type": "CommandService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "cartValidationConnector",
        "type": "CartValidationConnector"
      },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Method",
        "name": "validateCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CartModificationList>"
      },
      {
        "kind": "Property",
        "name": "validateCartCommand",
        "type": "Command<void, CartModificationList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "CartValidationStatusCode",
    "members": [
      "LOW_STOCK",
      "NO_STOCK",
      "PRICING_ERROR",
      "REVIEW_CONFIGURATION",
      "UNRESOLVABLE_ISSUES"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartVoucherAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartVoucherConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CartVoucherAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CartVoucherAdapter:class",
            "shortType": "CartVoucherAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CartVoucherAdapter" },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CartVoucherService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<fromProcessStore.StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addVoucher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAddVoucherResultError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getAddVoucherResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getAddVoucherResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "removeVoucher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetAddVoucherProcessingState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<fromProcessStore.StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Category",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "image", "type": "Image" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CategoryPageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productSearchService",
            "type": "ProductSearchService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductSearchService:class",
            "shortType": "ProductSearchService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cms",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "basePageMetaResolver",
            "type": "BasePageMetaResolver",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BasePageMetaResolver:class",
            "shortType": "BasePageMetaResolver",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "basePageMetaResolver",
        "type": "BasePageMetaResolver"
      },
      { "kind": "Property", "name": "cms", "type": "CmsService" },
      {
        "kind": "Method",
        "name": "hasProductListComponent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "productSearchService",
        "type": "ProductSearchService"
      },
      {
        "kind": "Method",
        "name": "resolveBreadcrumbData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "ProductSearchPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductSearchPage:interface",
            "shortType": "ProductSearchPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "label",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "BreadcrumbMeta[]"
      },
      {
        "kind": "Method",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BreadcrumbMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveCanonicalUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "searchPage$",
        "type": "Observable<ProductSearchPage | Page>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLAIM_CUSTOMER_COUPON_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Classification",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "features", "type": "Feature[]" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ClearSearch",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "clearPageResults",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "clearSearchboxResults",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLIENT_AUTH_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLIENT_TOKEN_DATA",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "ClientAuthActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ClientTokenAction",
    "namespace": "ClientAuthActions",
    "members": [
      "LoadClientToken",
      " | ",
      "LoadClientTokenFail",
      " | ",
      "LoadClientTokenSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CLIENT_TOKEN_FAIL",
    "namespace": "ClientAuthActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CLIENT_TOKEN_SUCCESS",
    "namespace": "ClientAuthActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CLIENT_TOKEN",
    "namespace": "ClientAuthActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadClientToken",
    "namespace": "ClientAuthActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadClientTokenFail",
    "namespace": "ClientAuthActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadClientTokenSuccess",
    "namespace": "ClientAuthActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ClientToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ClientToken:interface",
            "shortType": "ClientToken",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ClientToken" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClientAuthenticationTokenService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "authConfigService",
            "type": "AuthConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthConfigService:class",
            "shortType": "AuthConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authConfigService",
        "type": "AuthConfigService"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadClientAuthenticationToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ClientToken>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClientAuthModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<ClientAuthModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "ClientAuthSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getClientAuthState",
    "namespace": "ClientAuthSelectors",
    "type": "MemoizedSelector<StateWithClientAuth, ClientAuthState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getClientTokenState",
    "namespace": "ClientAuthSelectors",
    "type": "MemoizedSelector<StateWithClientAuth, LoaderState<ClientToken>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ClientAuthState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "clientToken",
        "type": "LoaderState<ClientToken>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClientErrorHandlingService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "clientTokenService",
            "type": "ClientTokenService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ClientTokenService:class",
            "shortType": "ClientTokenService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "clientTokenService",
        "type": "ClientTokenService"
      },
      {
        "kind": "Method",
        "name": "createNewRequestWithNewToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "token",
            "type": "ClientToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ClientToken:interface",
            "shortType": "ClientToken",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "HttpRequest<any>"
      },
      {
        "kind": "Method",
        "name": "handleExpiredClientToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ClientToken",
    "members": [
      { "kind": "PropertySignature", "name": "access_token", "type": "string" },
      { "kind": "PropertySignature", "name": "expires_in", "type": "number" },
      { "kind": "PropertySignature", "name": "scope", "type": "string" },
      { "kind": "PropertySignature", "name": "token_type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClientTokenInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "clientTokenService",
            "type": "ClientTokenService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ClientTokenService:class",
            "shortType": "ClientTokenService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "clientErrorHandlingService",
            "type": "ClientErrorHandlingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ClientErrorHandlingService:class",
            "shortType": "ClientErrorHandlingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "clientErrorHandlingService",
        "type": "ClientErrorHandlingService"
      },
      {
        "kind": "Property",
        "name": "clientTokenService",
        "type": "ClientTokenService"
      },
      {
        "kind": "Method",
        "name": "getClientToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isClientTokenRequest",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ClientToken>"
      },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      },
      {
        "kind": "Method",
        "name": "isClientTokenRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isExpiredToken",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "resp",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClientTokenService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithClientAuth>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getClientToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ClientToken>"
      },
      {
        "kind": "Method",
        "name": "isClientTokenLoaded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "state",
            "type": "LoaderState<ClientToken>",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LoaderState:interface",
            "shortType": "LoaderState",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "refreshClientToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ClientToken>"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithClientAuth>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CMS_COMPONENT_NORMALIZER",
    "type": "InjectionToken<Converter<any, CmsComponent>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CMS_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CMS_FLEX_COMPONENT_TYPE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CMS_PAGE_NORMALIZER",
    "type": "InjectionToken<Converter<any, CmsStructureModel>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "CmsActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CMS_GET_COMPONENT_FROM_PAGE",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CMS_SET_PAGE_FAIL_INDEX",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CMS_SET_PAGE_SUCCESS_INDEX",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CmsComponentAction",
    "namespace": "CmsActions",
    "members": [
      "LoadCmsComponent",
      " | ",
      "LoadCmsComponentFail",
      " | ",
      "LoadCmsComponentSuccess",
      "<T> | ",
      "CmsGetComponentFromPage",
      "<T>"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsGetComponentFromPage",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        component: T;\n        pageContext: PageContext;\n    } | {\n        component: T;\n        pageContext: PageContext;\n    }[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        component: T;\n        pageContext: PageContext;\n    } | {\n        component: T;\n        pageContext: PageContext;\n    }[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CmsNavigationEntryItemAction",
    "namespace": "CmsActions",
    "members": [
      "LoadCmsNavigationItems",
      " | ",
      "LoadCmsNavigationItemsFail",
      " | ",
      "LoadCmsNavigationItemsSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CmsPageAction",
    "namespace": "CmsActions",
    "members": [
      "LoadCmsPageData",
      " | ",
      "LoadCmsPageDataFail",
      " | ",
      "LoadCmsPageDataSuccess",
      " | ",
      "CmsSetPageFailIndex"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsSetPageFailIndex",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsSetPageSuccessIndex",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "payload",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_COMPONENT_FAIL",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_COMPONENT_SUCCESS",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_COMPONENT",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_NAVIGATION_ITEMS_FAIL",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_NAVIGATION_ITEMS_SUCCESS",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_NAVIGATION_ITEMS",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_PAGE_DATA_FAIL",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_PAGE_DATA_SUCCESS",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CMS_PAGE_DATA",
    "namespace": "CmsActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsComponent",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        uid: string;\n        pageContext: PageContext;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        uid: string;\n        pageContext: PageContext;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsComponentFail",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        uid: string;\n        error?: any;\n        pageContext: PageContext;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        uid: string;\n        error?: any;\n        pageContext: PageContext;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsComponentSuccess",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        component: T;\n        uid?: string;\n        pageContext: PageContext;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        component: T;\n        uid?: string;\n        pageContext: PageContext;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsNavigationItems",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        nodeId: string;\n        items: any[];\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        nodeId: string;\n        items: any[];\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsNavigationItemsFail",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nodeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsNavigationItemsSuccess",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        nodeId: string;\n        components: any[];\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        nodeId: string;\n        components: any[];\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsPageData",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PageContext" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsPageDataFail",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "error",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCmsPageDataSuccess",
    "namespace": "CmsActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "payload",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsActivatedRouteSnapshot",
    "members": [
      { "kind": "PropertySignature", "name": "data", "type": "CmsRouteData" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsAddToCartComponent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "inventoryDisplay",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsBannerCarouselComponent",
    "members": [
      { "kind": "PropertySignature", "name": "banners", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "effect",
        "type": "CmsBannerCarouselEffect"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "CmsBannerCarouselEffect",
    "members": ["CURTAIN", "FADE", "TURNDOWN", "ZOOM"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsBannerComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "string" },
      { "kind": "PropertySignature", "name": "content", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "external",
        "type": "string | boolean"
      },
      { "kind": "PropertySignature", "name": "headline", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "media",
        "type": "CmsBannerComponentMedia | CmsResponsiveBannerComponentMedia"
      },
      { "kind": "PropertySignature", "name": "urlLink", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsBannerComponentMedia",
    "members": [
      { "kind": "PropertySignature", "name": "altText", "type": "string" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "mime", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsBreadcrumbsComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsComponent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "composition",
        "type": "{\n        inner?: string[];\n    }"
      },
      { "kind": "PropertySignature", "name": "modifiedTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "otherProperties", "type": "any" },
      { "kind": "PropertySignature", "name": "styleClasses", "type": "string" },
      { "kind": "PropertySignature", "name": "typeCode", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsComponentAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "findComponentsByIds",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ids",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CmsComponent[]>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fields",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsComponentChildRoutesConfig",
    "members": [
      { "kind": "PropertySignature", "name": "children", "type": "Route[]" },
      {
        "kind": "PropertySignature",
        "name": "parent",
        "type": "Pick<Route, 'data'>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CMSComponentConfig",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "CmsComponentMapping | undefined"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsComponentConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsStructureConfigService",
            "type": "CmsStructureConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureConfigService:class",
            "shortType": "CmsStructureConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cmsComponentAdapter",
            "type": "CmsComponentAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsComponentAdapter:class",
            "shortType": "CmsComponentAdapter",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsComponentAdapter",
        "type": "CmsComponentAdapter"
      },
      {
        "kind": "Property",
        "name": "cmsStructureConfigService",
        "type": "CmsStructureConfigService"
      },
      { "kind": "Property", "name": "config", "type": "OccConfig" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ids",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CmsComponent[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsComponentMapping",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "childRoutes",
        "type": "Route[] | CmsComponentChildRoutesConfig"
      },
      { "kind": "PropertySignature", "name": "component", "type": "any" },
      { "kind": "PropertySignature", "name": "data", "type": "T" },
      {
        "kind": "PropertySignature",
        "name": "deferLoading",
        "type": "DeferLoadingStrategy"
      },
      { "kind": "PropertySignature", "name": "disableSSR", "type": "boolean" },
      { "kind": "PropertySignature", "name": "guards", "type": "any[]" },
      { "kind": "PropertySignature", "name": "i18nKeys", "type": "string[]" },
      {
        "kind": "PropertySignature",
        "name": "providers",
        "type": "StaticProvider[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsConfig",
    "members": [
      {
        "kind": "Property",
        "name": "cmsComponents",
        "type": "CMSComponentConfig"
      },
      {
        "kind": "Property",
        "name": "featureModules",
        "type": "{\n        [featureName: string]: FeatureModuleConfig | string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsLinkComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "boolean" },
      { "kind": "PropertySignature", "name": "contentPage", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "contentPageLabelOrId",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "external", "type": "boolean" },
      { "kind": "PropertySignature", "name": "linkName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "styleAttributes",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "target",
        "type": "string | boolean"
      },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsMiniCartComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "lightboxBannerComponent",
        "type": "CmsBannerComponent"
      },
      {
        "kind": "PropertySignature",
        "name": "shownProductCount",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "totalDisplay", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<CmsModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsNavigationComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "navigationNode",
        "type": "CmsNavigationNode"
      },
      { "kind": "PropertySignature", "name": "notice", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "showLanguageCurrency",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "styleClass", "type": "string" },
      { "kind": "PropertySignature", "name": "wrapAfter", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsNavigationEntry",
    "members": [
      { "kind": "PropertySignature", "name": "itemId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "itemSuperType",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "itemType", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsNavigationNode",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "children",
        "type": "Array<CmsNavigationNode>"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "Array<CmsNavigationEntry>"
      },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsPageAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CmsStructureModel>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsPageConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "ignoreBackend",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "pageId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "slots",
        "type": "{\n        [key: string]: CmsPageSlotConfig;\n    }"
      },
      { "kind": "PropertySignature", "name": "template", "type": "string" },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsPageConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsPageAdapter",
            "type": "CmsPageAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsPageAdapter:class",
            "shortType": "CmsPageAdapter",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cmsStructureConfigService",
            "type": "CmsStructureConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureConfigService:class",
            "shortType": "CmsStructureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsPageAdapter",
        "type": "CmsPageAdapter"
      },
      {
        "kind": "Property",
        "name": "cmsStructureConfigService",
        "type": "CmsStructureConfigService"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CmsStructureModel>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsPageSlotConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "componentIds",
        "type": "string[]"
      },
      { "kind": "PropertySignature", "name": "properties", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsPageSlotsConfig",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "CmsPageSlotConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsPageTitleComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsParagraphComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "string" },
      { "kind": "PropertySignature", "name": "content", "type": "string" },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsProductCarouselComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "string" },
      { "kind": "PropertySignature", "name": "popup", "type": "string" },
      { "kind": "PropertySignature", "name": "productCodes", "type": "string" },
      { "kind": "PropertySignature", "name": "scroll", "type": "string" },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsProductFacetNavigationComponent",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "activeFacetValueCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "container", "type": "string" },
      { "kind": "PropertySignature", "name": "minPerFacet", "type": "string" },
      { "kind": "PropertySignature", "name": "searchResult", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsProductReferencesComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "displayProductPrices",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "displayProductTitles",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "maximumNumberProducts",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "productReferenceTypes",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsResponsiveBannerComponentMedia",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "desktop",
        "type": "CmsBannerComponentMedia"
      },
      {
        "kind": "PropertySignature",
        "name": "mobile",
        "type": "CmsBannerComponentMedia"
      },
      {
        "kind": "PropertySignature",
        "name": "tablet",
        "type": "CmsBannerComponentMedia"
      },
      {
        "kind": "PropertySignature",
        "name": "widescreen",
        "type": "CmsBannerComponentMedia"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsRoute",
    "members": [
      { "kind": "PropertySignature", "name": "data", "type": "CmsRouteData" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsRouteData",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cxCmsRouteContext",
        "type": "PageContext"
      },
      { "kind": "PropertySignature", "name": "pageLabel", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsSearchBoxComponent",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "displayProductImages",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "displayProducts",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "displaySuggestions",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "maxProducts", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "maxSuggestions",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "minCharactersBeforeRequest",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "waitTimeBeforeRequest",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "CmsSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "componentsContextExistsSelectorFactory",
    "namespace": "CmsSelectors",
    "type": "(uid: string, context: string) => MemoizedSelector<StateWithCms, boolean | undefined>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "componentsContextSelectorFactory",
    "namespace": "CmsSelectors",
    "type": "(uid: string) => MemoizedSelector<StateWithCms, ComponentsContext>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "componentsDataSelectorFactory",
    "namespace": "CmsSelectors",
    "type": "(uid: string) => MemoizedSelector<StateWithCms, CmsComponent | undefined>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "componentsLoaderStateSelectorFactory",
    "namespace": "CmsSelectors",
    "type": "(uid: string, context: string) => MemoizedSelector<StateWithCms, StateUtils.LoaderState<boolean>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "componentsSelectorFactory",
    "namespace": "CmsSelectors",
    "type": "(uid: string, context: string) => MemoizedSelector<StateWithCms, CmsComponent | null | undefined>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCmsState",
    "namespace": "CmsSelectors",
    "type": "MemoizedSelector<StateWithCms, CmsState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getComponentsState",
    "namespace": "CmsSelectors",
    "type": "MemoizedSelector<StateWithCms, ComponentsState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCurrentSlotSelectorFactory",
    "namespace": "CmsSelectors",
    "type": "(pageContext: PageContext, position: string) => MemoizedSelector<StateWithCms, ContentSlotData>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getNavigationEntryItems",
    "namespace": "CmsSelectors",
    "type": "(nodeId: string) => MemoizedSelector<StateWithCms, NodeItem>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getNavigationEntryItemState",
    "namespace": "CmsSelectors",
    "type": "MemoizedSelector<StateWithCms, StateUtils.EntityLoaderState<NodeItem>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageComponentTypes",
    "namespace": "CmsSelectors",
    "type": "(pageContext: PageContext) => MemoizedSelector<StateWithCms, string[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageData",
    "namespace": "CmsSelectors",
    "type": "(pageContext: PageContext) => MemoizedSelector<StateWithCms, Page>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageEntities",
    "namespace": "CmsSelectors",
    "type": "MemoizedSelector<StateWithCms, {\n    [id: string]: Page;\n}>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageState",
    "namespace": "CmsSelectors",
    "type": "MemoizedSelector<StateWithCms, PageState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageStateIndex",
    "namespace": "CmsSelectors",
    "type": "MemoizedSelector<StateWithCms, IndexType>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageStateIndexEntityLoaderState",
    "namespace": "CmsSelectors",
    "type": "(pageContext: PageContext) => MemoizedSelector<StateWithCms, StateUtils.EntityLoaderState<string>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageStateIndexLoaderState",
    "namespace": "CmsSelectors",
    "type": "(pageContext: PageContext) => MemoizedSelector<StateWithCms, StateUtils.LoaderState<string>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageStateIndexValue",
    "namespace": "CmsSelectors",
    "type": "(pageContext: PageContext) => MemoizedSelector<StateWithCms, string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSelectedNavigationEntryItemState",
    "namespace": "CmsSelectors",
    "type": "(nodeId: string) => MemoizedSelector<StateWithCms, StateUtils.LoaderState<NodeItem>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithCms>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getComponentData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "uid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Method",
        "name": "getContentSlot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "position",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ContentSlotData>"
      },
      {
        "kind": "Method",
        "name": "getCurrentPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Page>"
      },
      {
        "kind": "Method",
        "name": "getNavigationEntryItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "navigationNodeUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<NodeItem>"
      },
      {
        "kind": "Method",
        "name": "getPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "forceReload",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Page>"
      },
      {
        "kind": "Method",
        "name": "getPageComponentTypes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<string[]>"
      },
      {
        "kind": "Method",
        "name": "getPageIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getPageState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Page>"
      },
      {
        "kind": "Method",
        "name": "hasPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "forceReload",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadNavigationItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "rootUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "itemList",
            "type": "{\n        id: string;\n        superType: string;\n    }[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "refreshComponent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "uid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "refreshLatestPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "refreshPageById",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "setPageFailIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithCms>" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsSiteContextSelectorComponent",
    "members": [
      { "kind": "PropertySignature", "name": "context", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "components",
        "type": "ComponentsState"
      },
      {
        "kind": "PropertySignature",
        "name": "navigation",
        "type": "StateUtils.EntityLoaderState<NodeItem>"
      },
      { "kind": "PropertySignature", "name": "page", "type": "PageState" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsStructureConfig",
    "members": [
      {
        "kind": "Property",
        "name": "cmsStructure",
        "type": "{\n        components?: {\n            [key: string]: ContentSlotComponentData | any;\n        };\n        pages?: CmsPageConfig[];\n        slots?: CmsPageSlotsConfig;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CmsStructureConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsDataConfig",
            "type": "CmsStructureConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureConfig:class",
            "shortType": "CmsStructureConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsDataConfig",
        "type": "CmsStructureConfig"
      },
      {
        "kind": "Method",
        "name": "getComponentById",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ContentSlotComponentData"
      },
      {
        "kind": "Method",
        "name": "getComponentFromConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ContentSlotComponentData | any>"
      },
      {
        "kind": "Method",
        "name": "getComponentsByPosition",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "slots",
            "type": "CmsPageSlotsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsPageSlotsConfig:interface",
            "shortType": "CmsPageSlotsConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "position",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ContentSlotComponentData[]"
      },
      {
        "kind": "Method",
        "name": "getComponentsFromConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ids",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ContentSlotComponentData[]>"
      },
      {
        "kind": "Method",
        "name": "getPageFromConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CmsPageConfig>"
      },
      {
        "kind": "Method",
        "name": "mergePage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageStructure",
            "type": "CmsStructureModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureModel:interface",
            "shortType": "CmsStructureModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CmsStructureModel>"
      },
      {
        "kind": "Method",
        "name": "mergePageStructure",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageStructure",
            "type": "CmsStructureModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureModel:interface",
            "shortType": "CmsStructureModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CmsStructureModel>"
      },
      {
        "kind": "Method",
        "name": "mergeSlots",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageStructure",
            "type": "CmsStructureModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureModel:interface",
            "shortType": "CmsStructureModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "slots",
            "type": "CmsPageSlotsConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!CmsPageSlotsConfig:interface",
            "shortType": "CmsPageSlotsConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CmsStructureModel>"
      },
      {
        "kind": "Method",
        "name": "shouldIgnoreBackend",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CmsStructureModel",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "components",
        "type": "CmsComponent[]"
      },
      { "kind": "PropertySignature", "name": "page", "type": "Page" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CMSTabParagraphContainer",
    "members": [
      { "kind": "PropertySignature", "name": "components", "type": "string" },
      { "kind": "PropertySignature", "name": "container", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "Command",
    "members": [
      {
        "kind": "Method",
        "name": "execute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "P",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<R>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CommandService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commandFactory",
            "type": "(command: P) => Observable<any>",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "{\n        strategy?: CommandStrategy;\n    }",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Command<P, R>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "CommandStrategy",
    "members": ["CancelPrevious", "ErrorPrevious", "Parallel", "Queue"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "COMPONENT_ENTITY",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ComponentDecorator",
    "members": [
      {
        "kind": "Method",
        "name": "decorate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "Element",
            "isOptional": false,
            "canonicalReference": "!Element:interface",
            "shortType": "Element",
            "importPath": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "component",
            "type": "ContentSlotComponentData",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ContentSlotComponentData:interface",
            "shortType": "ContentSlotComponentData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ComponentsContext",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "component",
        "type": "CmsComponent"
      },
      {
        "kind": "PropertySignature",
        "name": "pageContext",
        "type": "{\n        [context: string]: StateUtils.LoaderState<boolean>;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ComponentsState",
    "members": ["StateUtils.", "EntityState", "<", "ComponentsContext", ">"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CONFIG_INITIALIZER",
    "type": "InjectionToken<unknown>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "Config",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ConfigChunk",
    "type": "InjectionToken<Config[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConfigInitializer",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "configFactory",
        "type": "() => Promise<Config>"
      },
      { "kind": "PropertySignature", "name": "scopes", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "configInitializerFactory",
    "parameters": [
      {
        "name": "configInitializer",
        "type": "ConfigInitializerService",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ConfigInitializerService:class",
        "shortType": "ConfigInitializerService",
        "importPath": "@spartacus/core"
      },
      {
        "name": "initializers",
        "type": "ConfigInitializer[]",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ConfigInitializer:interface",
        "shortType": "ConfigInitializer",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "() => Promise<void>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConfigInitializerModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<ConfigInitializerModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConfigInitializerService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "Config",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Config:class",
            "shortType": "Config",
            "importPath": "@spartacus/core"
          },
          {
            "name": "initializerGuard",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "rootConfig",
            "type": "Config",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Config:class",
            "shortType": "Config",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "areReady",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scopes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "ongoingScopes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "config", "type": "Config" },
      {
        "kind": "Method",
        "name": "finishScopes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scopes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getStable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scopes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Config>"
      },
      { "kind": "Property", "name": "initializerGuard", "type": "any" },
      { "kind": "Property", "name": "isStable", "type": "boolean" },
      {
        "kind": "Property",
        "name": "ongoingScopes$",
        "type": "BehaviorSubject<string[]>"
      },
      { "kind": "Property", "name": "rootConfig", "type": "Config" },
      {
        "kind": "Method",
        "name": "scopesOverlap",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "a",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "b",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConfigModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_configurationService",
            "type": "ConfigurationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConfigurationService:class",
            "shortType": "ConfigurationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "Config",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Config:class",
            "shortType": "Config",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ModuleWithProviders<ConfigModule>"
      },
      {
        "kind": "Method",
        "name": "withConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "Config",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Config:class",
            "shortType": "Config",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ModuleWithProviders<ConfigModule>"
      },
      {
        "kind": "Method",
        "name": "withConfigFactory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configFactory",
            "type": "Function",
            "isOptional": false,
            "canonicalReference": "!Function:interface",
            "shortType": "Function",
            "importPath": ""
          },
          {
            "name": "deps",
            "type": "any[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ModuleWithProviders<ConfigModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConfigurableRoutesService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "urlMatcherService",
            "type": "UrlMatcherService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlMatcherService:class",
            "shortType": "UrlMatcherService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "configure",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "configureRoute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "Route",
            "isOptional": false,
            "canonicalReference": "@angular/router!Route:interface",
            "shortType": "Route",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Route"
      },
      {
        "kind": "Method",
        "name": "configureRoutes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routes",
            "type": "Routes",
            "isOptional": false,
            "canonicalReference": "@angular/router!Routes:type",
            "shortType": "Routes",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Routes"
      },
      {
        "kind": "Method",
        "name": "getRouteName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "Route",
            "isOptional": false,
            "canonicalReference": "@angular/router!Route:interface",
            "shortType": "Route",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "initCalled", "type": "boolean" },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      {
        "kind": "Method",
        "name": "resolveUrlMatcherFactory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "Route",
            "isOptional": false,
            "canonicalReference": "@angular/router!Route:interface",
            "shortType": "Route",
            "importPath": "@angular/router"
          },
          {
            "name": "factoryToken",
            "type": "InjectionToken<UrlMatcherFactory>",
            "isOptional": false,
            "canonicalReference": "@angular/core!InjectionToken:class",
            "shortType": "InjectionToken",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "UrlMatcher"
      },
      {
        "kind": "Method",
        "name": "resolveUrlMatchers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "Route",
            "isOptional": false,
            "canonicalReference": "@angular/router!Route:interface",
            "shortType": "Route",
            "importPath": "@angular/router"
          },
          {
            "name": "matchersOrFactories",
            "type": "RouteConfig['matchers']",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RouteConfig:interface",
            "shortType": "RouteConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "UrlMatcher"
      },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      },
      {
        "kind": "Property",
        "name": "urlMatcherService",
        "type": "UrlMatcherService"
      },
      {
        "kind": "Method",
        "name": "validateRouteConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routeConfig",
            "type": "RouteConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RouteConfig:interface",
            "shortType": "RouteConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routeName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "route",
            "type": "Route",
            "isOptional": false,
            "canonicalReference": "@angular/router!Route:interface",
            "shortType": "Route",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConfigurationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "rootConfig",
            "type": "Config",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Config:class",
            "shortType": "Config",
            "importPath": "@spartacus/core"
          },
          {
            "name": "defaultConfig",
            "type": "Config",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Config:class",
            "shortType": "Config",
            "importPath": "@spartacus/core"
          },
          {
            "name": "unifiedInjector",
            "type": "UnifiedInjector",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UnifiedInjector:class",
            "shortType": "UnifiedInjector",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "Config",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Config:class",
            "shortType": "Config",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "Config" },
      { "kind": "Property", "name": "defaultConfig", "type": "Config" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "rootConfig", "type": "Config" },
      {
        "kind": "Property",
        "name": "unifiedConfig$",
        "type": "Observable<Config>"
      },
      {
        "kind": "Property",
        "name": "unifiedInjector",
        "type": "UnifiedInjector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ConfigValidator",
    "members": ["(config: ", "Config", ") => string | void"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "configValidatorFactory",
    "parameters": [
      {
        "name": "configInitializer",
        "type": "ConfigInitializerService",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ConfigInitializerService:class",
        "shortType": "ConfigInitializerService",
        "importPath": "@spartacus/core"
      },
      {
        "name": "validators",
        "type": "ConfigValidator[]",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ConfigValidator:type",
        "shortType": "ConfigValidator",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConfigValidatorModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<ConfigValidatorModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ConfigValidatorToken",
    "type": "InjectionToken<unknown>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConflictHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CONSENT_TEMPLATE_NORMALIZER",
    "type": "InjectionToken<Converter<any, ConsentTemplate>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Consent",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "consentGivenDate",
        "type": "Date"
      },
      {
        "kind": "PropertySignature",
        "name": "consentWithdrawnDate",
        "type": "Date"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConsentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "anonymousConsentsService",
            "type": "AnonymousConsentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsentsService:class",
            "shortType": "AnonymousConsentsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userConsentService",
            "type": "UserConsentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserConsentService:class",
            "shortType": "UserConsentService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsService",
        "type": "AnonymousConsentsService"
      },
      {
        "kind": "Method",
        "name": "checkConsentGivenByTemplateId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "checkConsentWithdrawnByTemplateId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<AnonymousConsent | Consent>"
      },
      {
        "kind": "Method",
        "name": "isAnonymousConsentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "AnonymousConsent | Consent",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "consent is AnonymousConsent"
      },
      {
        "kind": "Method",
        "name": "isConsentGiven",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "AnonymousConsent | Consent",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConsentType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "AnonymousConsent | Consent",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "consent is Consent"
      },
      {
        "kind": "Method",
        "name": "isConsentWithdrawn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "AnonymousConsent | Consent",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "userConsentService",
        "type": "UserConsentService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsentTemplate",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "currentConsent",
        "type": "Consent"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "version", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CONSIGNMENT_TRACKING_NORMALIZER",
    "type": "InjectionToken<Converter<any, ConsignmentTracking>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Consignment",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "ConsignmentEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "shippingAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      { "kind": "PropertySignature", "name": "statusDate", "type": "Date" },
      { "kind": "PropertySignature", "name": "trackingID", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentEntry",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderEntry",
        "type": "OrderEntry"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "shippedQuantity",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentTracking",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "carrierDetails",
        "type": "Carrier"
      },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "targetArrivalDate",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "trackingEvents",
        "type": "ConsignmentTrackingEvent[]"
      },
      { "kind": "PropertySignature", "name": "trackingID", "type": "string" },
      { "kind": "PropertySignature", "name": "trackingUrl", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentTrackingEvent",
    "members": [
      { "kind": "PropertySignature", "name": "detail", "type": "string" },
      { "kind": "PropertySignature", "name": "eventDate", "type": "string" },
      { "kind": "PropertySignature", "name": "location", "type": "string" },
      { "kind": "PropertySignature", "name": "referenceCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentTrackingState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "tracking",
        "type": "ConsignmentTracking"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ContentPageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "basePageMetaResolver",
            "type": "BasePageMetaResolver",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BasePageMetaResolver:class",
            "shortType": "BasePageMetaResolver",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "basePageMetaResolver",
        "type": "BasePageMetaResolver"
      },
      {
        "kind": "Method",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BreadcrumbMeta[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveCanonicalUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveDescription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ContentSlotComponentData",
    "members": [
      { "kind": "PropertySignature", "name": "flexType", "type": "string" },
      { "kind": "PropertySignature", "name": "properties", "type": "any" },
      { "kind": "PropertySignature", "name": "typeCode", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ContentSlotData",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "components",
        "type": "ContentSlotComponentData[]"
      },
      { "kind": "PropertySignature", "name": "properties", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ContextServiceMap",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Type<SiteContext<any>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "contextServiceMapProvider",
    "type": "Provider"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Converter",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "S",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "T"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ConverterService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unifiedInjector",
            "type": "UnifiedInjector",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UnifiedInjector:class",
            "shortType": "UnifiedInjector",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "S",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "injectionToken",
            "type": "InjectionToken<Converter<S, T>>",
            "isOptional": false,
            "canonicalReference": "@angular/core!InjectionToken:class",
            "shortType": "InjectionToken",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "convertMany",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sources",
            "type": "S[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "injectionToken",
            "type": "InjectionToken<Converter<S, T>>",
            "isOptional": false,
            "canonicalReference": "@angular/core!InjectionToken:class",
            "shortType": "InjectionToken",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "T[]"
      },
      {
        "kind": "Method",
        "name": "hasConverters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "injectionToken",
            "type": "InjectionToken<Converter<S, T>>",
            "isOptional": false,
            "canonicalReference": "@angular/core!InjectionToken:class",
            "shortType": "InjectionToken",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pipeable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "injectionToken",
            "type": "InjectionToken<Converter<S, T>>",
            "isOptional": false,
            "canonicalReference": "@angular/core!InjectionToken:class",
            "shortType": "InjectionToken",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "OperatorFunction<S, T>"
      },
      {
        "kind": "Method",
        "name": "pipeableMany",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "injectionToken",
            "type": "InjectionToken<Converter<S, T>>",
            "isOptional": false,
            "canonicalReference": "@angular/core!InjectionToken:class",
            "shortType": "InjectionToken",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "OperatorFunction<S[], T[]>"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "unifiedInjector",
        "type": "UnifiedInjector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "COST_CENTER_NORMALIZER",
    "type": "InjectionToken<Converter<any, CostCenter>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "COST_CENTER_SERIALIZER",
    "type": "InjectionToken<Converter<CostCenter, any>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "COST_CENTERS_NORMALIZER",
    "type": "InjectionToken<Converter<any, EntitiesModel<CostCenter>>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CostCenter",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "unit", "type": "B2BUnit" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CostCenterModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<CostCenterModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CostCenterOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "COUNTRY_NORMALIZER",
    "type": "InjectionToken<Converter<any, Country>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Country",
    "members": [
      { "kind": "PropertySignature", "name": "isocode", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "CountryType",
    "members": ["BILLING", "SHIPPING"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "createFrom",
    "parameters": [
      {
        "name": "type",
        "type": "Type<T>",
        "isOptional": false,
        "canonicalReference": "@angular/core!Type:interface",
        "shortType": "Type",
        "importPath": "@angular/core"
      },
      {
        "name": "data",
        "type": "T",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "T"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CurrenciesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "activeCurrency",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "CurrencyEntities"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CURRENCY_CONTEXT_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CURRENCY_NORMALIZER",
    "type": "InjectionToken<Converter<any, Currency>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Currency",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "isocode", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "symbol", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CurrencyEntities",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isocode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Currency"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CurrencyInitializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currencyService",
            "type": "CurrencyService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CurrencyService:class",
            "shortType": "CurrencyService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "currencyStatePersistenceService",
            "type": "CurrencyStatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CurrencyStatePersistenceService:class",
            "shortType": "CurrencyStatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configInit",
            "type": "ConfigInitializerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConfigInitializerService:class",
            "shortType": "ConfigInitializerService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configInit",
        "type": "ConfigInitializerService"
      },
      {
        "kind": "Property",
        "name": "currencyService",
        "type": "CurrencyService"
      },
      {
        "kind": "Property",
        "name": "currencyStatePersistenceService",
        "type": "CurrencyStatePersistenceService"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDefaultFromConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFallbackValue",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<unknown>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CurrencyService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithSiteContext>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "SiteContextConfig" },
      {
        "kind": "Method",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Currency[]>"
      },
      {
        "kind": "Method",
        "name": "isInitialized",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isValid",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isocode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithSiteContext>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CurrencySetEvent",
    "members": [
      { "kind": "Property", "name": "activeCurrency", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CurrencyStatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "statePersistenceService",
            "type": "StatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!StatePersistenceService:class",
            "shortType": "StatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "currencyService",
            "type": "CurrencyService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CurrencyService:class",
            "shortType": "CurrencyService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "SiteContextConfig" },
      {
        "kind": "Property",
        "name": "currencyService",
        "type": "CurrencyService"
      },
      {
        "kind": "Property",
        "name": "initialized$",
        "type": "ReplaySubject<unknown>"
      },
      {
        "kind": "Method",
        "name": "initSync",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "onRead",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "valueFromStorage",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "statePersistenceService",
        "type": "StatePersistenceService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CUSTOMER_COUPON_SEARCH_RESULT_NORMALIZER",
    "type": "InjectionToken<Converter<any, CustomerCouponSearchResult>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CUSTOMER_COUPONS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CustomerCoupon",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "allProductsApplicable",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "couponId", "type": "string" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "endDate", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "notificationOn",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "startDate", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CustomerCoupon2Customer",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "coupon",
        "type": "CustomerCoupon"
      },
      { "kind": "PropertySignature", "name": "customer", "type": "User" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CustomerCouponAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "claimCustomerCoupon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCoupon2Customer>"
      },
      {
        "kind": "Method",
        "name": "getCustomerCoupons",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCouponSearchResult>"
      },
      {
        "kind": "Method",
        "name": "turnOffNotification",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "turnOnNotification",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCouponNotification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CustomerCouponConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CustomerCouponAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CustomerCouponAdapter:class",
            "shortType": "CustomerCouponAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "CustomerCouponAdapter"
      },
      {
        "kind": "Method",
        "name": "claimCustomerCoupon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCoupon2Customer>"
      },
      {
        "kind": "Method",
        "name": "getCustomerCoupons",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCouponSearchResult>"
      },
      {
        "kind": "Method",
        "name": "turnOffNotification",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "turnOnNotification",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCouponNotification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CustomerCouponNotification",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "coupon",
        "type": "CustomerCoupon"
      },
      { "kind": "PropertySignature", "name": "customer", "type": "User" },
      { "kind": "PropertySignature", "name": "status", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CustomerCouponSearchResult",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "coupons",
        "type": "CustomerCoupon[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "Pagination"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "Sort[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CustomerCouponService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "claimCustomerCoupon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getClaimCustomerCouponResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getClaimCustomerCouponResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCustomerCoupons",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCouponSearchResult>"
      },
      {
        "kind": "Method",
        "name": "getCustomerCouponsLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCustomerCouponsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSubscribeCustomerCouponResultError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSubscribeCustomerCouponResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getSubscribeCustomerCouponResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getUnsubscribeCustomerCouponResultError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getUnsubscribeCustomerCouponResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getUnsubscribeCustomerCouponResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadCustomerCoupons",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "subscribeCustomerCoupon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unsubscribeCustomerCoupon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CxDatePipe",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "language",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "language", "type": "LanguageService" },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "format",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "timezone",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "value",
            "type": "null | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "format",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "timezone",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "null"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CxEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "string" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CxNumericPipe",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "language",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getActiveLang",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLang",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "language", "type": "LanguageService" },
      {
        "kind": "Method",
        "name": "reportMissingLocaleData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lang",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "any | number | string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "digitsInfo",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "value",
            "type": "null | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "digitsInfo",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "null"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "DaysOfWeek",
    "members": [
      "FRIDAY",
      "MONDAY",
      "SATURDAY",
      "SUNDAY",
      "THURSDAY",
      "TUESDAY",
      "WEDNESDAY"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "deepMerge",
    "parameters": [
      {
        "name": "target",
        "type": "Record<string, unknown>",
        "isOptional": true,
        "canonicalReference": "!Record:type",
        "shortType": "Record",
        "importPath": ""
      },
      {
        "name": "sources",
        "type": "any[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "any"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DEFAULT_SCOPE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DEFAULT_URL_MATCHER",
    "type": "InjectionToken<UrlMatcherFactory>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "defaultAnonymousConsentsConfig",
    "type": "AnonymousConsentsConfig"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "defaultCmsModuleConfig",
    "type": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DefaultConfig",
    "type": "InjectionToken<any>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DefaultConfigChunk",
    "type": "InjectionToken<Config[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "defaultOccConfig",
    "type": "OccConfig"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "defaultPageMetaConfig",
    "type": "PageMetaConfig"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DefaultRoutePageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getParams",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        [_: string]: any;\n    }>"
      },
      {
        "kind": "Method",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ url, pageMetaConfig, }",
            "type": "RouteBreadcrumbResolverParams",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RouteBreadcrumbResolverParams:interface",
            "shortType": "RouteBreadcrumbResolverParams",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<BreadcrumbMeta[]>"
      },
      {
        "kind": "Method",
        "name": "translateBreadcrumbLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breadcrumbConfig",
            "type": "string | RouteBreadcrumbConfig",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "DeferLoadingStrategy",
    "members": ["DEFER", "INSTANT"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteUserAddressEvent",
    "members": [
      { "kind": "Property", "name": "addressId", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryCountriesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "DeliveryCountryEntities"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryCountryEntities",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Country"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryMode",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryOrderEntryGroup",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DynamicAttributes",
    "members": [
      { "kind": "PropertySignature", "name": "queryParams", "type": "object" },
      { "kind": "PropertySignature", "name": "scope", "type": "string" },
      { "kind": "PropertySignature", "name": "urlParams", "type": "object" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DynamicAttributeService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unifiedInjector",
            "type": "UnifiedInjector",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UnifiedInjector:class",
            "shortType": "UnifiedInjector",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addAttributesToComponent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "Element",
            "isOptional": false,
            "canonicalReference": "!Element:interface",
            "shortType": "Element",
            "importPath": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "componentData",
            "type": "ContentSlotComponentData",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ContentSlotComponentData:interface",
            "shortType": "ContentSlotComponentData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addAttributesToSlot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "Element",
            "isOptional": false,
            "canonicalReference": "!Element:interface",
            "shortType": "Element",
            "importPath": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "slotData",
            "type": "ContentSlotData",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ContentSlotData:interface",
            "shortType": "ContentSlotData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "unifiedInjector",
        "type": "UnifiedInjector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "EMAIL_PATTERN",
    "type": "RegExp"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntitiesModel",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" },
      { "kind": "PropertySignature", "name": "values", "type": "T[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "errorHandlers",
    "type": "Provider[]"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ErrorModel",
    "members": [
      { "kind": "PropertySignature", "name": "message", "type": "string" },
      { "kind": "PropertySignature", "name": "reason", "type": "string" },
      { "kind": "PropertySignature", "name": "subject", "type": "string" },
      { "kind": "PropertySignature", "name": "subjectType", "type": "string" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EventService",
    "members": [
      {
        "kind": "Method",
        "name": "dispatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "eventType",
            "type": "Type<T>",
            "isOptional": true,
            "canonicalReference": "@angular/core!Type:interface",
            "shortType": "Type",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventType",
            "type": "AbstractType<T>",
            "isOptional": false,
            "canonicalReference": "@angular/core!AbstractType:interface",
            "shortType": "AbstractType",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventType",
            "type": "AbstractType<T>",
            "isOptional": false,
            "canonicalReference": "@angular/core!AbstractType:interface",
            "shortType": "AbstractType",
            "importPath": "@angular/core"
          },
          {
            "name": "source$",
            "type": "Observable<T>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "() => void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ExternalRoutesConfig",
    "members": [
      {
        "kind": "Property",
        "name": "routing",
        "type": "ExternalRoutesConfigDefinition"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ExternalRoutesGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platformId",
            "type": "Object",
            "isOptional": false,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          },
          {
            "name": "state",
            "type": "RouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "platformId", "type": "Object" },
      {
        "kind": "Method",
        "name": "redirect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_",
            "type": "ActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          },
          {
            "name": "state",
            "type": "RouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ExternalRoutesModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<ExternalRoutesModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ExternalRoutesService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "ExternalRoutesConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ExternalRoutesConfig:class",
            "shortType": "ExternalRoutesConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "urlMatcherService",
            "type": "UrlMatcherService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlMatcherService:class",
            "shortType": "UrlMatcherService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addRoutes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "ExternalRoutesConfig" },
      {
        "kind": "Method",
        "name": "getRoutes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Routes"
      },
      {
        "kind": "Method",
        "name": "getUrlMatcher",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "UrlMatcher"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      { "kind": "Property", "name": "internalUrlPatterns", "type": "string[]" },
      {
        "kind": "Property",
        "name": "urlMatcherService",
        "type": "UrlMatcherService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FacadeDescriptor",
    "members": [
      { "kind": "PropertySignature", "name": "async", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "facade",
        "type": "AbstractType<T>"
      },
      { "kind": "PropertySignature", "name": "feature", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "methods",
        "type": "MethodKeys<T>[]"
      },
      {
        "kind": "PropertySignature",
        "name": "properties",
        "type": "PropertyKeys<T>[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "facadeFactory",
    "parameters": [
      {
        "name": "descriptor",
        "type": "FacadeDescriptor<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!FacadeDescriptor:interface",
        "shortType": "FacadeDescriptor",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "T"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "FacadeFactoryService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "featureModules",
            "type": "FeatureModulesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!FeatureModulesService:class",
            "shortType": "FeatureModulesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "call",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "resolver$",
            "type": "Observable<any>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          },
          {
            "name": "method",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "args",
            "type": "unknown[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ facade, feature, methods, properties, async, }",
            "type": "FacadeDescriptor<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!FacadeDescriptor:interface",
            "shortType": "FacadeDescriptor",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "T"
      },
      {
        "kind": "Property",
        "name": "featureModules",
        "type": "FeatureModulesService"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "resolver$",
            "type": "Observable<any>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          },
          {
            "name": "property",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "getResolver",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "feature",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "facadeClass",
            "type": "AbstractType<T>",
            "isOptional": false,
            "canonicalReference": "@angular/core!AbstractType:interface",
            "shortType": "AbstractType",
            "importPath": "@angular/core"
          },
          {
            "name": "async",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T>"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Facet",
    "members": [
      { "kind": "PropertySignature", "name": "category", "type": "boolean" },
      { "kind": "PropertySignature", "name": "expanded", "type": "boolean" },
      { "kind": "PropertySignature", "name": "multiSelect", "type": "boolean" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "priority", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "topValueCount",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "topValues",
        "type": "FacetValue[]"
      },
      { "kind": "PropertySignature", "name": "values", "type": "FacetValue[]" },
      { "kind": "PropertySignature", "name": "visible", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "FacetChangedEvent",
    "members": [
      { "kind": "Property", "name": "code", "type": "string" },
      { "kind": "Property", "name": "name", "type": "string" },
      { "kind": "Property", "name": "selected", "type": "boolean" },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "valueCode", "type": "string" },
      { "kind": "Property", "name": "valueName", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FacetValue",
    "members": [
      { "kind": "PropertySignature", "name": "count", "type": "number" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "query", "type": "SearchState" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Feature",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "comparable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "featureUnit",
        "type": "FeatureUnit"
      },
      {
        "kind": "PropertySignature",
        "name": "featureValues",
        "type": "FeatureValue[]"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "range", "type": "boolean" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "FeatureConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "FeaturesConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!FeaturesConfig:class",
            "shortType": "FeaturesConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "FeaturesConfig" },
      {
        "kind": "Method",
        "name": "isEnabled",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "feature",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isLevel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "version",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "FeatureDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateRef",
            "type": "TemplateRef<any>",
            "isOptional": false,
            "canonicalReference": "@angular/core!TemplateRef:class",
            "shortType": "TemplateRef",
            "importPath": "@angular/core"
          },
          {
            "name": "viewContainer",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "featureConfig",
            "type": "FeatureConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "featureConfig",
        "type": "FeatureConfigService"
      },
      { "kind": "Property", "name": "templateRef", "type": "TemplateRef<any>" },
      {
        "kind": "Property",
        "name": "viewContainer",
        "type": "ViewContainerRef"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "FeatureLevelDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateRef",
            "type": "TemplateRef<any>",
            "isOptional": false,
            "canonicalReference": "@angular/core!TemplateRef:class",
            "shortType": "TemplateRef",
            "importPath": "@angular/core"
          },
          {
            "name": "viewContainer",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "featureConfig",
            "type": "FeatureConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!FeatureConfigService:class",
            "shortType": "FeatureConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "featureConfig",
        "type": "FeatureConfigService"
      },
      { "kind": "Property", "name": "templateRef", "type": "TemplateRef<any>" },
      {
        "kind": "Property",
        "name": "viewContainer",
        "type": "ViewContainerRef"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FeatureModuleConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cmsComponents",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "dependencies",
        "type": "((() => Promise<any>) | string)[]"
      },
      {
        "kind": "PropertySignature",
        "name": "module",
        "type": "() => Promise<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "FeatureModulesService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsConfig",
            "type": "CmsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsConfig:class",
            "shortType": "CmsConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "lazyModules",
            "type": "LazyModulesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LazyModulesService:class",
            "shortType": "LazyModulesService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "cmsConfig", "type": "CmsConfig" },
      {
        "kind": "Method",
        "name": "getFeatureConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "featureName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "FeatureModuleConfig | undefined"
      },
      {
        "kind": "Method",
        "name": "isConfigured",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "featureName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "lazyModules",
        "type": "LazyModulesService"
      },
      {
        "kind": "Method",
        "name": "resolveDependencies",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "dependencies",
            "type": "any[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<NgModuleRef<any>[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveFeature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "featureName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<NgModuleRef<any>>"
      },
      {
        "kind": "Method",
        "name": "resolveFeatureAlias",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "featureName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "FeaturesConfig",
    "members": [
      {
        "kind": "Property",
        "name": "features",
        "type": "{\n        level?: string;\n        [featureToggle: string]: string | boolean | undefined;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "FeaturesConfigModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "defaultLevel",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ModuleWithProviders<FeaturesConfigModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FeatureUnit",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "symbol", "type": "string" },
      { "kind": "PropertySignature", "name": "unitType", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FeatureValue",
    "members": [
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ForbiddenHandler",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FutureStock",
    "members": [
      { "kind": "PropertySignature", "name": "date", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "formattedDate",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "stock", "type": "Stock" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GatewayTimeoutHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "GeoPoint",
    "members": [
      { "kind": "PropertySignature", "name": "latitude", "type": "number" },
      { "kind": "PropertySignature", "name": "longitude", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getCartIdByUserId",
    "parameters": [
      {
        "name": "cart",
        "type": "Cart",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!Cart:interface",
        "shortType": "Cart",
        "importPath": "@spartacus/core"
      },
      {
        "name": "userId",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "string"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getContextParameterDefault",
    "parameters": [
      {
        "name": "config",
        "type": "SiteContextConfig",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!SiteContextConfig:class",
        "shortType": "SiteContextConfig",
        "importPath": "@spartacus/core"
      },
      {
        "name": "parameter",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "string | undefined"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getContextParameterValues",
    "parameters": [
      {
        "name": "config",
        "type": "SiteContextConfig",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!SiteContextConfig:class",
        "shortType": "SiteContextConfig",
        "importPath": "@spartacus/core"
      },
      {
        "name": "parameter",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "string[]"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getLastValueSync",
    "parameters": [
      {
        "name": "source",
        "type": "Observable<T>",
        "isOptional": false,
        "canonicalReference": "rxjs!Observable:class",
        "shortType": "Observable",
        "importPath": "rxjs"
      }
    ],
    "returnType": "T | undefined"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getWishlistName",
    "parameters": [
      {
        "name": "customerId",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "string"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GIVE_CONSENT_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GLOBAL_MESSAGE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "GlobalMessage",
    "members": [
      { "kind": "PropertySignature", "name": "text", "type": "Translatable" },
      { "kind": "PropertySignature", "name": "timeout", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "type",
        "type": "GlobalMessageType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "GlobalMessageActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_MESSAGE",
    "namespace": "GlobalMessageActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddMessage",
    "namespace": "GlobalMessageActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "GlobalMessage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobalMessage:interface",
            "shortType": "GlobalMessage",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "GlobalMessage" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "GlobalMessageAction",
    "namespace": "GlobalMessageActions",
    "members": [
      "AddMessage",
      " | ",
      "RemoveMessage",
      " | ",
      "RemoveMessagesByType"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_MESSAGE",
    "namespace": "GlobalMessageActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_MESSAGES_BY_TYPE",
    "namespace": "GlobalMessageActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RemoveMessage",
    "namespace": "GlobalMessageActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        type: GlobalMessageType;\n        index: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        type: GlobalMessageType;\n        index: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RemoveMessagesByType",
    "namespace": "GlobalMessageActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "GlobalMessageType",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobalMessageType:enum",
            "shortType": "GlobalMessageType",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "GlobalMessageType" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GlobalMessageConfig",
    "members": [
      {
        "kind": "Property",
        "name": "globalMessages",
        "type": "{\n        [GlobalMessageType.MSG_TYPE_CONFIRMATION]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_INFO]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_ERROR]?: GlobalMessageTypeConfig;\n        [GlobalMessageType.MSG_TYPE_WARNING]?: GlobalMessageTypeConfig;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "GlobalMessageEntities",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "messageType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Translatable[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GlobalMessageModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<GlobalMessageModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "GlobalMessageSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getGlobalMessageCountByType",
    "namespace": "GlobalMessageSelectors",
    "type": "(type: GlobalMessageType) => MemoizedSelector<StateWithGlobalMessage, number>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getGlobalMessageEntities",
    "namespace": "GlobalMessageSelectors",
    "type": "MemoizedSelector<StateWithGlobalMessage, GlobalMessageEntities>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getGlobalMessageEntitiesByType",
    "namespace": "GlobalMessageSelectors",
    "type": "(type: GlobalMessageType) => MemoizedSelector<StateWithGlobalMessage, Translatable[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getGlobalMessageState",
    "namespace": "GlobalMessageSelectors",
    "type": "MemoizedSelector<StateWithGlobalMessage, GlobalMessageState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GlobalMessageService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithGlobalMessage>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "text",
            "type": "string | Translatable",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "type",
            "type": "GlobalMessageType",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobalMessageType:enum",
            "shortType": "GlobalMessageType",
            "importPath": "@spartacus/core"
          },
          {
            "name": "timeout",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<GlobalMessageEntities>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "GlobalMessageType",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobalMessageType:enum",
            "shortType": "GlobalMessageType",
            "importPath": "@spartacus/core"
          },
          {
            "name": "index",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithGlobalMessage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "GlobalMessageState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "GlobalMessageEntities"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "GlobalMessageType",
    "members": [
      "MSG_TYPE_CONFIRMATION",
      "MSG_TYPE_ERROR",
      "MSG_TYPE_INFO",
      "MSG_TYPE_WARNING"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "GlobalMessageTypeConfig",
    "members": ["{\n    timeout?: number;\n}"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GlobService",
    "members": [
      {
        "kind": "Method",
        "name": "getValidator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "patterns",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "(url: string) => boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "HOME_PAGE_CONTEXT",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "HttpErrorHandler",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platformId",
            "type": "Object",
            "isOptional": true,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "errorResponse",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errorResponse",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSsr",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "platformId", "type": "Object" },
      { "kind": "Property", "name": "responseStatus", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "httpErrorInterceptors",
    "type": "Provider[]"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "HttpErrorModel",
    "members": [
      { "kind": "Property", "name": "details", "type": "ErrorModel[]" },
      { "kind": "Property", "name": "message", "type": "string" },
      { "kind": "Property", "name": "status", "type": "number" },
      { "kind": "Property", "name": "statusText", "type": "string" },
      { "kind": "Property", "name": "url", "type": "string | null" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "HttpParamsURIEncoder",
    "members": [
      {
        "kind": "Method",
        "name": "decodeKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "decodeValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "encodeKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "encodeValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "HttpResponseStatus",
    "members": [
      "BAD_GATEWAY",
      "BAD_REQUEST",
      "CONFLICT",
      "FORBIDDEN",
      "GATEWAY_TIMEOUT",
      "INTERNAL_SERVER_ERROR",
      "NOT_FOUND",
      "UNAUTHORIZED",
      "UNKNOWN"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "I18nConfig",
    "members": [
      {
        "kind": "Property",
        "name": "i18n",
        "type": "{\n        fallbackLang?: string | false;\n        backend?: {\n            loadPath?: string;\n        };\n        resources?: TranslationResources;\n        debug?: boolean;\n        chunks?: {\n            [chunk: string]: string[];\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "I18nConfigInitializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configInit",
            "type": "ConfigInitializerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConfigInitializerService:class",
            "shortType": "ConfigInitializerService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configFactory",
        "type": "() => Promise<I18nConfig>"
      },
      {
        "kind": "Property",
        "name": "configInit",
        "type": "ConfigInitializerService"
      },
      {
        "kind": "Method",
        "name": "resolveConfig",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<I18nConfig>"
      },
      { "kind": "Property", "name": "scopes", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "I18nextTranslationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "I18nConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!I18nConfig:class",
            "shortType": "I18nConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationChunk",
            "type": "TranslationChunkService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!TranslationChunkService:class",
            "shortType": "TranslationChunkService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "i18next",
            "type": "i18n",
            "isOptional": false,
            "canonicalReference": "i18next!i18n:interface",
            "shortType": "i18n",
            "importPath": "i18next"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "I18nConfig" },
      {
        "kind": "Method",
        "name": "getFallbackValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "i18next", "type": "i18n" },
      {
        "kind": "Method",
        "name": "loadChunks",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "chunkNames",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Promise<any>"
      },
      { "kind": "Property", "name": "NAMESPACE_SEPARATOR", "type": "" },
      {
        "kind": "Method",
        "name": "translate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "whitespaceUntilLoaded",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "translationChunk",
        "type": "TranslationChunkService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "I18nModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<I18nModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "I18nTestingModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Image_2",
    "members": [
      { "kind": "PropertySignature", "name": "altText", "type": "string" },
      { "kind": "PropertySignature", "name": "format", "type": "string" },
      { "kind": "PropertySignature", "name": "galleryIndex", "type": "number" },
      { "kind": "PropertySignature", "name": "imageType", "type": "ImageType" },
      { "kind": "PropertySignature", "name": "role", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ImageGroup",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "format",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Image"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Images",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "imageType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ImageGroup | ImageGroup[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "ImageType",
    "members": ["GALLERY", "PRIMARY"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "IndexType",
    "members": [
      "{\n    content: StateUtils.",
      "EntityLoaderState",
      "<string>;\n    product: StateUtils.",
      "EntityLoaderState",
      "<string>;\n    category: StateUtils.",
      "EntityLoaderState",
      "<string>;\n    catalog: StateUtils.",
      "EntityLoaderState",
      "<string>;\n}"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "initConfigurableRoutes",
    "parameters": [
      {
        "name": "service",
        "type": "ConfigurableRoutesService",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ConfigurableRoutesService:class",
        "shortType": "ConfigurableRoutesService",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "InterceptorUtil",
    "members": [
      {
        "kind": "Method",
        "name": "createHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "headerName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "interceptorParam",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "headers",
            "type": "HttpHeaders",
            "isOptional": true,
            "canonicalReference": "@angular/common/http!HttpHeaders:class",
            "shortType": "HttpHeaders",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "HttpHeaders"
      },
      {
        "kind": "Method",
        "name": "getInterceptorParam",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "headerName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "headers",
            "type": "HttpHeaders",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHeaders:class",
            "shortType": "HttpHeaders",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "T"
      },
      {
        "kind": "Method",
        "name": "removeHeader",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "headerName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "HttpRequest<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "InternalServerErrorHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isCartNotFoundError",
    "parameters": [
      {
        "name": "error",
        "type": "ErrorModel",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ErrorModel:interface",
        "shortType": "ErrorModel",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isFeatureEnabled",
    "parameters": [
      {
        "name": "config",
        "type": "Config",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!Config:class",
        "shortType": "Config",
        "importPath": "@spartacus/core"
      },
      {
        "name": "feature",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isFeatureLevel",
    "parameters": [
      {
        "name": "config",
        "type": "Config",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!Config:class",
        "shortType": "Config",
        "importPath": "@spartacus/core"
      },
      {
        "name": "level",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isNotNullable",
    "parameters": [
      {
        "name": "value",
        "type": "T",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "value is NonNullable<T>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isNotUndefined",
    "parameters": [
      {
        "name": "value",
        "type": "T | undefined",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "value is T"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isObject",
    "parameters": [
      {
        "name": "item",
        "type": "any",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isSelectiveCart",
    "parameters": [
      {
        "name": "cartId",
        "type": "string",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isTempCartId",
    "parameters": [
      {
        "name": "cartId",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "JavaRegExpConverter",
    "members": [
      {
        "kind": "Method",
        "name": "toJsRegExp",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "javaSyntax",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "RegExp | null"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "JSP_INCLUDE_CMS_COMPONENT_TYPE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "JspIncludeCmsComponentConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "AccountAddressBookComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "ForgotPasswordComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "ProductDetailsTabComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "ProductReviewsTabComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "ProductSpecsTabComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "ResetPasswordComponent",
        "type": "CmsComponentMapping"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LANGUAGE_CONTEXT_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LANGUAGE_NORMALIZER",
    "type": "InjectionToken<Converter<any, Language>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Language",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "isocode", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "nativeName", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LanguageInitializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "languageStatePersistenceService",
            "type": "LanguageStatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LanguageStatePersistenceService:class",
            "shortType": "LanguageStatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configInit",
            "type": "ConfigInitializerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConfigInitializerService:class",
            "shortType": "ConfigInitializerService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configInit",
        "type": "ConfigInitializerService"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      },
      {
        "kind": "Property",
        "name": "languageStatePersistenceService",
        "type": "LanguageStatePersistenceService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDefaultFromConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFallbackValue",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<unknown>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "LanguagesEntities",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isocode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Language"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LanguageService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithSiteContext>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "SiteContextConfig" },
      {
        "kind": "Method",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Language[]>"
      },
      {
        "kind": "Method",
        "name": "isInitialized",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isValid",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isocode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithSiteContext>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LanguageSetEvent",
    "members": [
      { "kind": "Property", "name": "activeLanguage", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "LanguagesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "activeLanguage",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "LanguagesEntities"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LanguageStatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "statePersistenceService",
            "type": "StatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!StatePersistenceService:class",
            "shortType": "StatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "SiteContextConfig" },
      {
        "kind": "Property",
        "name": "initialized$",
        "type": "ReplaySubject<unknown>"
      },
      {
        "kind": "Method",
        "name": "initSync",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      },
      {
        "kind": "Method",
        "name": "onRead",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "valueFromStorage",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "statePersistenceService",
        "type": "StatePersistenceService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LazyModulesService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "compiler",
            "type": "Compiler",
            "isOptional": false,
            "canonicalReference": "@angular/core!Compiler:class",
            "shortType": "Compiler",
            "importPath": "@angular/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "events",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "compiler", "type": "Compiler" },
      { "kind": "Property", "name": "events", "type": "EventService" },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      {
        "kind": "Property",
        "name": "modules$",
        "type": "Observable<NgModuleRef<any>>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resolveDependencyModuleInstance",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "moduleFunc",
            "type": "() => Promise<any>",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<NgModuleRef<any>>"
      },
      {
        "kind": "Method",
        "name": "resolveModuleInstance",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "moduleFunc",
            "type": "() => Promise<any>",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "feature",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "dependencyModuleRefs",
            "type": "NgModuleRef<any>[]",
            "isOptional": true,
            "canonicalReference": "@angular/core!NgModuleRef:class",
            "shortType": "NgModuleRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<NgModuleRef<any>>"
      },
      {
        "kind": "Method",
        "name": "runModuleInitializerFunctions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "initFunctions",
            "type": "(() => any)[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Promise<any>[]"
      },
      {
        "kind": "Method",
        "name": "runModuleInitializersForModule",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "moduleRef",
            "type": "NgModuleRef<any>",
            "isOptional": false,
            "canonicalReference": "@angular/core!NgModuleRef:class",
            "shortType": "NgModuleRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<NgModuleRef<any>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LegacyOccCmsComponentAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "findComponentsByIds",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ids",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fields",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CmsComponent[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ListModel",
    "members": [
      { "kind": "PropertySignature", "name": "ids", "type": "string[]" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadingScopesService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "OccConfig" },
      {
        "kind": "Method",
        "name": "expand",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "model",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scopes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "getMaxAge",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "model",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getReloadTriggers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "model",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Type<CxEvent>[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "locationInitializedFactory",
    "parameters": [
      {
        "name": "configInitializer",
        "type": "ConfigInitializerService",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ConfigInitializerService:class",
        "shortType": "ConfigInitializerService",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "Promise<Config>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoginEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LogoutEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MEDIA_BASE_URL_META_TAG_NAME",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MEDIA_BASE_URL_META_TAG_PLACEHOLDER",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "mediaServerConfigFromMetaTagFactory",
    "parameters": [
      {
        "name": "meta",
        "type": "Meta",
        "isOptional": false,
        "canonicalReference": "@angular/platform-browser!Meta:class",
        "shortType": "Meta",
        "importPath": "@angular/platform-browser"
      }
    ],
    "returnType": "OccConfig"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MetaTagConfigModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<MetaTagConfigModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MockDatePipe",
    "members": [
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "args",
            "type": "any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MockTranslatePipe",
    "members": [
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "input",
            "type": "Translatable | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Translatable:interface",
            "shortType": "Translatable",
            "importPath": "@spartacus/core"
          },
          {
            "name": "options",
            "type": "object",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MODULE_INITIALIZER",
    "type": "InjectionToken<(() => any)[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ModuleInitializedEvent",
    "members": [
      { "kind": "Property", "name": "feature", "type": "string" },
      { "kind": "Property", "name": "moduleRef", "type": "NgModuleRef<any>" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MULTI_CART_DATA",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "MULTI_CART_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "MultiCartSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getActiveCartId",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartEntitySelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, ProcessesLoaderState<Cart>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartEntriesSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, OrderEntry[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartEntrySelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string, productCode: string) => MemoizedSelector<StateWithMultiCart, OrderEntry>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartHasPendingProcessesSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartIsStableSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "(cartId: string) => MemoizedSelector<StateWithMultiCart, Cart>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCartsSelectorFactory",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, Cart[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getMultiCartEntities",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, EntityProcessesLoaderState<Cart>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getMultiCartState",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, MultiCartState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getWishListId",
    "namespace": "MultiCartSelectors",
    "type": "MemoizedSelector<StateWithMultiCart, string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MultiCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "products",
            "type": "Array<{\n        productCode: string;\n        quantity: number;\n    }>",
            "isOptional": false,
            "canonicalReference": "!Array:interface",
            "shortType": "Array",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assignEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "email",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ userId, oldCartId, toMergeCartGuid, extraData, }",
            "type": "{\n        userId: string;\n        oldCartId?: string;\n        toMergeCartGuid?: string;\n        extraData?: {\n            active?: boolean;\n        };\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "deleteCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "generateTempCartId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getCartEntity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProcessesLoaderState<Cart>>"
      },
      {
        "kind": "Method",
        "name": "getCarts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry | null>"
      },
      {
        "kind": "Method",
        "name": "getLastEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry | null>"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ cartId, userId, extraData, }",
            "type": "{\n        cartId: string;\n        userId: string;\n        extraData?: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "mergeToCurrentCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ userId, cartId, extraData, }",
            "type": "{\n        userId: string;\n        cartId: string;\n        extraData?: {\n            active?: boolean;\n        };\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reloadCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "extraData",
            "type": "{\n        active: boolean;\n    }",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      {
        "kind": "Method",
        "name": "updateEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "MultiCartState",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "carts",
        "type": "EntityProcessesLoaderState<Cart>"
      },
      { "kind": "PropertySignature", "name": "wishList", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "MultiCartStatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "statePersistenceService",
            "type": "StatePersistenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!StatePersistenceService:class",
            "shortType": "StatePersistenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "siteContextParamsService",
            "type": "SiteContextParamsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextParamsService:class",
            "shortType": "SiteContextParamsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getCartState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        active: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "initSync",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onRead",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "state",
            "type": "{\n        active: string;\n    } | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "siteContextParamsService",
        "type": "SiteContextParamsService"
      },
      {
        "kind": "Property",
        "name": "statePersistenceService",
        "type": "StatePersistenceService"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "NAVIGATION_DETAIL_ENTITY",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "NavigationNodes",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nodeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "NodeItem"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "NodeItem",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "id_type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "CmsLinkComponent"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "normalizeHttpError",
    "parameters": [
      {
        "name": "error",
        "type": "HttpErrorResponse | any",
        "isOptional": false,
        "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
        "shortType": "HttpErrorResponse",
        "importPath": "@angular/common/http"
      }
    ],
    "returnType": "HttpErrorModel | undefined"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "NotAuthGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "NotFoundHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "NOTIFICATION_PREFERENCES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "NotificationPreference",
    "members": [
      { "kind": "PropertySignature", "name": "channel", "type": "string" },
      { "kind": "PropertySignature", "name": "enabled", "type": "boolean" },
      { "kind": "PropertySignature", "name": "value", "type": "string" },
      { "kind": "PropertySignature", "name": "visible", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "NotificationPreferenceList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "preferences",
        "type": "NotificationPreference[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "NotificationType",
    "members": ["BACK_IN_STOCK"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "OAuthFlow",
    "members": [
      "AuthorizationCode",
      "ImplicitFlow",
      "ResourceOwnerPasswordFlow"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OAuthLibWrapperService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "oAuthService",
            "type": "OAuthService",
            "isOptional": false,
            "canonicalReference": "angular-oauth2-oidc!OAuthService:class",
            "shortType": "OAuthService",
            "importPath": "angular-oauth2-oidc"
          },
          {
            "name": "authConfigService",
            "type": "AuthConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthConfigService:class",
            "shortType": "AuthConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platformId",
            "type": "Object",
            "isOptional": false,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authConfigService",
        "type": "AuthConfigService"
      },
      {
        "kind": "Method",
        "name": "authorizeWithPasswordFlow",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Promise<TokenResponse>"
      },
      {
        "kind": "Property",
        "name": "events$",
        "type": "Observable<OAuthEvent>"
      },
      {
        "kind": "Method",
        "name": "getIdToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "initLoginFlow",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "logout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "oAuthService", "type": "OAuthService" },
      { "kind": "Property", "name": "platformId", "type": "Object" },
      {
        "kind": "Method",
        "name": "refreshToken",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "revokeAndLogout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<void>"
      },
      {
        "kind": "Method",
        "name": "tryLogin",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<boolean>"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "OCC_BASE_URL_META_TAG_NAME",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "OCC_BASE_URL_META_TAG_PLACEHOLDER",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "OCC_CART_ID_CURRENT",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "OCC_USER_ID_ANONYMOUS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "OCC_USER_ID_CURRENT",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "OCC_USER_ID_GUEST",
    "type": ""
  },
  { "entryPoint": "@spartacus/core", "kind": "Namespace", "name": "Occ" },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Address",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "cellphone", "type": "string" },
      { "kind": "PropertySignature", "name": "companyName", "type": "string" },
      { "kind": "PropertySignature", "name": "country", "type": "Country" },
      {
        "kind": "PropertySignature",
        "name": "defaultAddress",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "district", "type": "string" },
      { "kind": "PropertySignature", "name": "email", "type": "string" },
      { "kind": "PropertySignature", "name": "firstName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "formattedAddress",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "lastName", "type": "string" },
      { "kind": "PropertySignature", "name": "line1", "type": "string" },
      { "kind": "PropertySignature", "name": "line2", "type": "string" },
      { "kind": "PropertySignature", "name": "phone", "type": "string" },
      { "kind": "PropertySignature", "name": "postalCode", "type": "string" },
      { "kind": "PropertySignature", "name": "region", "type": "Region" },
      {
        "kind": "PropertySignature",
        "name": "shippingAddress",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "titleCode", "type": "string" },
      { "kind": "PropertySignature", "name": "town", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "visibleInAddressBook",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "AddressList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "addresses", "type": "Address[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "AddressValidation",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "decision", "type": "string" },
      { "kind": "PropertySignature", "name": "errors", "type": "ErrorList" },
      {
        "kind": "PropertySignature",
        "name": "suggestedAddresses",
        "type": "Address[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "AnonymousConsent",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "consentState",
        "type": "CONSENT_STATUS"
      },
      { "kind": "PropertySignature", "name": "templateCode", "type": "string" },
      { "kind": "PropertySignature", "name": "version", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BApprovalProcess",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BApprovalProcessList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "approvalProcesses",
        "type": "B2BApprovalProcess[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BUnit",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "addresses", "type": "Address[]" },
      {
        "kind": "PropertySignature",
        "name": "administrators",
        "type": "B2BUser[]"
      },
      {
        "kind": "PropertySignature",
        "name": "approvalProcess",
        "type": "B2BApprovalProcess"
      },
      { "kind": "PropertySignature", "name": "approvers", "type": "B2BUser[]" },
      { "kind": "PropertySignature", "name": "customers", "type": "B2BUser[]" },
      { "kind": "PropertySignature", "name": "managers", "type": "B2BUser[]" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "parentOrgUnit",
        "type": "Partial<B2BUnit>"
      },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BUnitNode",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "children",
        "type": "B2BUnitNode[]"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "parent", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BUnitNodeList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "unitNodes",
        "type": "B2BUnitNode[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "B2BUser",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "approvers", "type": "[]" },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "B2BUnit" },
      { "kind": "PropertySignature", "name": "roles", "type": "string[]" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseOption",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "options",
        "type": "VariantOption[]"
      },
      {
        "kind": "PropertySignature",
        "name": "selected",
        "type": "VariantOption"
      },
      { "kind": "PropertySignature", "name": "variantType", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseSite",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "channel", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "defaultLanguage",
        "type": "Language"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultPreviewCatalogId",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultPreviewCategoryCode",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultPreviewProductCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "locale", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "stores", "type": "BaseStore[]" },
      { "kind": "PropertySignature", "name": "theme", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "urlEncodingAttributes",
        "type": "string[]"
      },
      { "kind": "PropertySignature", "name": "urlPatterns", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseSites",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "baseSites", "type": "BaseSite[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BaseStore",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "currencies",
        "type": "Currency[]"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultCurrency",
        "type": "Currency"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultLanguage",
        "type": "Language"
      },
      { "kind": "PropertySignature", "name": "languages", "type": "Language[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Breadcrumb",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "facetCode", "type": "string" },
      { "kind": "PropertySignature", "name": "facetName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "facetValueCode",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "facetValueName",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "removeQuery",
        "type": "SearchState"
      },
      {
        "kind": "PropertySignature",
        "name": "truncateQuery",
        "type": "SearchState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Budget",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "budget", "type": "number" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "costCenters",
        "type": "CostCenter[]"
      },
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      { "kind": "PropertySignature", "name": "endDate", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "B2BUnit" },
      { "kind": "PropertySignature", "name": "startDate", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "BudgetsList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "budgets", "type": "Budget[]" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CardType",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CardTypeList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "cardTypes", "type": "CardType[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Cart",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "expirationTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "savedBy", "type": "Principal" },
      { "kind": "PropertySignature", "name": "saveTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalUnitCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CartList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "carts", "type": "Cart[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CartModification",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryModeChanged",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "entry", "type": "OrderEntry" },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "quantityAdded",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "statusCode", "type": "string" },
      { "kind": "PropertySignature", "name": "statusMessage", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CartModificationList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cartModifications",
        "type": "CartModification[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Catalog",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "catalogVersions",
        "type": "CatalogVersion[]"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "lastModified", "type": "Date" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CatalogList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "catalogs", "type": "Catalog[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CatalogVersion",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "categories",
        "type": "CategoryHierarchy[]"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "lastModified", "type": "Date" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Category",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "image", "type": "Image" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CategoryHierarchy",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "lastModified", "type": "Date" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "subcategories",
        "type": "CategoryHierarchy[]"
      },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Classification",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "features", "type": "Feature[]" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CMSPage",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "contentSlots",
        "type": "ContentSlotList"
      },
      { "kind": "PropertySignature", "name": "defaultPage", "type": "boolean" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "label", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "properties", "type": "any" },
      { "kind": "PropertySignature", "name": "robotTag", "type": "PageRobots" },
      { "kind": "PropertySignature", "name": "template", "type": "string" },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "typeCode", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Component",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "modifiedTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "otherProperties", "type": "any" },
      { "kind": "PropertySignature", "name": "typeCode", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ComponentIDList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "idList", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ComponentList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "component",
        "type": "Component[] | any[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConfigurationInfo",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "configurationLabel",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "configurationValue",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "configuratorType",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "status", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "CONSENT_STATUS",
    "namespace": "Occ",
    "members": ["ANONYMOUS_CONSENT_GIVEN", "ANONYMOUS_CONSENT_WITHDRAWN"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Consent",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "consentGivenDate",
        "type": "Date"
      },
      {
        "kind": "PropertySignature",
        "name": "consentWithdrawnDate",
        "type": "Date"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsentTemplate",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "currentConsent",
        "type": "Consent"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "version", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsentTemplateList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "consentTemplates",
        "type": "ConsentTemplate[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Consignment",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "ConsignmentEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "shippingAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      { "kind": "PropertySignature", "name": "statusDate", "type": "Date" },
      { "kind": "PropertySignature", "name": "trackingID", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ConsignmentEntry",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderEntry",
        "type": "OrderEntry"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "shippedQuantity",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ContentSlot",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "components",
        "type": "ComponentList"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "position", "type": "string" },
      { "kind": "PropertySignature", "name": "properties", "type": "any" },
      { "kind": "PropertySignature", "name": "slotId", "type": "string" },
      { "kind": "PropertySignature", "name": "slotShared", "type": "boolean" },
      { "kind": "PropertySignature", "name": "slotStatus", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ContentSlotList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "contentSlot",
        "type": "ContentSlot[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CostCenter",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "string" },
      { "kind": "PropertySignature", "name": "activeFlag", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "originalCode", "type": "string" },
      { "kind": "PropertySignature", "name": "unit", "type": "B2BUnit" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CostCentersList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "costCenters",
        "type": "CostCenter[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Country",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "isocode", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CountryList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "countries", "type": "Country[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Currency",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "isocode", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "symbol", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CurrencyList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "currencies",
        "type": "Currency[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CustomerCoupon",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "allProductsApplicable",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "couponId", "type": "string" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "endDate", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "notificationOn",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "startDate", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "CustomerCouponSearchResult",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "coupons",
        "type": "CustomerCoupon[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "Pagination"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "Sort[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "DaysOfWeek",
    "namespace": "Occ",
    "members": [
      "FRIDAY",
      "MONDAY",
      "SATURDAY",
      "SUNDAY",
      "THURSDAY",
      "TUESDAY",
      "WEDNESDAY"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryMode",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryModeList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryModes",
        "type": "DeliveryMode[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "DeliveryOrderEntryGroup",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ErrorList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "errors", "type": "ErrorModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ErrorModel",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "message", "type": "string" },
      { "kind": "PropertySignature", "name": "reason", "type": "string" },
      { "kind": "PropertySignature", "name": "subject", "type": "string" },
      { "kind": "PropertySignature", "name": "subjectType", "type": "string" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Facet",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "category", "type": "boolean" },
      { "kind": "PropertySignature", "name": "multiSelect", "type": "boolean" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "priority", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "topValues",
        "type": "FacetValue[]"
      },
      { "kind": "PropertySignature", "name": "values", "type": "FacetValue[]" },
      { "kind": "PropertySignature", "name": "visible", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FacetValue",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "count", "type": "number" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "query", "type": "SearchState" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Feature",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "comparable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "featureUnit",
        "type": "FeatureUnit"
      },
      {
        "kind": "PropertySignature",
        "name": "featureValues",
        "type": "FeatureValue[]"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "range", "type": "boolean" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FeatureUnit",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "symbol", "type": "string" },
      { "kind": "PropertySignature", "name": "unitType", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FeatureValue",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields1",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields10",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields11",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields12",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields13",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields14",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields15",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields16",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields17",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields18",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields19",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields2",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields20",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields21",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields22",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields23",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields24",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields25",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields26",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields27",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields28",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields29",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields3",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields30",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields31",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields32",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields33",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields34",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields35",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields36",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields37",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields38",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields39",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields4",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields40",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields41",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields42",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields43",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields44",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields45",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields46",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields47",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields48",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields49",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields5",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields50",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields51",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields52",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields53",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields54",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields55",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields56",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields57",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields58",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields59",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields6",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields60",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields61",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields7",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields8",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Fields9",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "FutureStock",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "date", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "formattedDate",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "stock", "type": "Stock" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "GeoPoint",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "latitude", "type": "number" },
      { "kind": "PropertySignature", "name": "longitude", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Image",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "altText", "type": "string" },
      { "kind": "PropertySignature", "name": "format", "type": "string" },
      { "kind": "PropertySignature", "name": "galleryIndex", "type": "number" },
      { "kind": "PropertySignature", "name": "imageType", "type": "ImageType" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "ImageType",
    "namespace": "Occ",
    "members": ["GALLERY", "PRIMARY"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Language",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "isocode", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "nativeName", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "LanguageList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "languages", "type": "Language[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ListAdaptedComponents",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "components", "type": "any[]" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "Pagination"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "Sort[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "MemberList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "members", "type": "Principal[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "NotificationType",
    "namespace": "Occ",
    "members": ["BACK_IN_STOCK"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OpeningSchedule",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "specialDayOpeningList",
        "type": "SpecialOpeningDay[]"
      },
      {
        "kind": "PropertySignature",
        "name": "weekDayOpeningList",
        "type": "WeekdayOpeningDay[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Order",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "consignments",
        "type": "Consignment[]"
      },
      { "kind": "PropertySignature", "name": "created", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryStatus",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryStatusDisplay",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "guestCustomer",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "unconsignedEntries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderApproval",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "approvalDecisionRequired",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "customerOrderApprovalRecords",
        "type": "OrderApprovalRecord[]"
      },
      {
        "kind": "PropertySignature",
        "name": "merchantOrderApprovalRecords",
        "type": "OrderApprovalRecord[]"
      },
      { "kind": "PropertySignature", "name": "order", "type": "Order" },
      { "kind": "PropertySignature", "name": "trigger", "type": "Trigger" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderApprovalDecision",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "comment", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "decision",
        "type": "OrderApprovalDecisionValue"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "OrderApprovalDecisionValue",
    "namespace": "Occ",
    "members": ["APPROVE", "REJECT"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderApprovalPermissionType",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderApprovalPermissionTypeList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderApprovalPermissionTypes",
        "type": "OrderApprovalPermissionType[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderApprovalRecord",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "approver", "type": "Principal" },
      { "kind": "PropertySignature", "name": "comments", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "permissionTypes",
        "type": "OrderApprovalPermissionType[]"
      },
      { "kind": "PropertySignature", "name": "statusDisplay", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderApprovalsList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderApprovals",
        "type": "OrderApproval[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderEntry",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "basePrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "configurationInfos",
        "type": "ConfigurationInfo[]"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      { "kind": "PropertySignature", "name": "entryNumber", "type": "number" },
      { "kind": "PropertySignature", "name": "product", "type": "Product" },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "statusSummaryList",
        "type": "StatusSummary[]"
      },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      { "kind": "PropertySignature", "name": "updateable", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderEntryList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderEntries",
        "type": "OrderEntry[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "OrderEntryStatus",
    "namespace": "Occ",
    "members": ["Error", "Info", "Success", "Warning"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderHistory",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "placed", "type": "Date" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "total", "type": "Price" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderHistoryList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orders",
        "type": "OrderHistory[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderStatusUpdateElement",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "baseSiteId", "type": "string" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderStatusUpdateElementList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderStatusUpdateElements",
        "type": "OrderStatusUpdateElement[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrgUnitUserGroup",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "members", "type": "B2BUser[]" },
      { "kind": "PropertySignature", "name": "membersCoun", "type": "number" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "B2BUnit" },
      {
        "kind": "PropertySignature",
        "name": "permissions",
        "type": "Permission[]"
      },
      { "kind": "PropertySignature", "name": "roles", "type": "any" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "subGroups", "type": "any" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrgUnitUserGroupList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orgUnitUserGroups",
        "type": "OrgUnitUserGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrgUnitUserList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" },
      { "kind": "PropertySignature", "name": "users", "type": "B2BUser[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "PageRobots",
    "namespace": "Occ",
    "members": [
      "INDEX_FOLLOW",
      "INDEX_NOFOLLOW",
      "NOINDEX_FOLLOW",
      "NOINDEX_NOFOLLOW"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "PageType",
    "namespace": "Occ",
    "members": ["CATALOG_PAGE", "CATEGORY_PAGE", "CONTENT_PAGE", "PRODUCT_PAGE"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Pagination",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "count", "type": "number" },
      { "kind": "PropertySignature", "name": "page", "type": "number" },
      { "kind": "PropertySignature", "name": "totalCount", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPages", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaginationModel",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "currentPage", "type": "number" },
      { "kind": "PropertySignature", "name": "pageSize", "type": "number" },
      { "kind": "PropertySignature", "name": "sort", "type": "string" },
      { "kind": "PropertySignature", "name": "totalPages", "type": "number" },
      { "kind": "PropertySignature", "name": "totalResults", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaymentDetails",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "accountHolderName",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "billingAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "cardNumber", "type": "string" },
      { "kind": "PropertySignature", "name": "cardType", "type": "CardType" },
      { "kind": "PropertySignature", "name": "cvn", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "defaultPayment",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "expiryMonth", "type": "string" },
      { "kind": "PropertySignature", "name": "expiryYear", "type": "string" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "issueNumber", "type": "string" },
      { "kind": "PropertySignature", "name": "saved", "type": "boolean" },
      { "kind": "PropertySignature", "name": "startMonth", "type": "string" },
      { "kind": "PropertySignature", "name": "startYear", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "subscriptionId",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaymentDetailsList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "payments",
        "type": "PaymentDetails[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaymentType",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "displayName", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaymentTypeList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "paymentTypes",
        "type": "PaymentType[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Period",
    "namespace": "Occ",
    "members": ["DAY", "MONTH", "QUARTER", "WEEK", "YEAR"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Permission",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      {
        "kind": "PropertySignature",
        "name": "orderApprovalPermissionType",
        "type": "OrderApprovalPermissionType"
      },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "B2BUnitNode" },
      { "kind": "PropertySignature", "name": "periodRange", "type": "Period" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "treshold", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PermissionsList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderApprovalPermissions",
        "type": "Permission[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PickupOrderEntryGroup",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      { "kind": "PropertySignature", "name": "distance", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PointOfService",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "address", "type": "Address" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "displayName", "type": "string" },
      { "kind": "PropertySignature", "name": "distanceKm", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "features",
        "type": "{\n            [propertyName: string]: string;\n        }"
      },
      {
        "kind": "PropertySignature",
        "name": "formattedDistance",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "geoPoint", "type": "GeoPoint" },
      { "kind": "PropertySignature", "name": "mapIcon", "type": "Image" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "openingHours",
        "type": "OpeningSchedule"
      },
      { "kind": "PropertySignature", "name": "storeContent", "type": "string" },
      { "kind": "PropertySignature", "name": "storeImages", "type": "Image[]" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PointOfServiceStock",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "address", "type": "Address" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "displayName", "type": "string" },
      { "kind": "PropertySignature", "name": "distanceKm", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "features",
        "type": "{\n            [propertyName: string]: string;\n        }"
      },
      {
        "kind": "PropertySignature",
        "name": "formattedDistance",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "geoPoint", "type": "GeoPoint" },
      { "kind": "PropertySignature", "name": "mapIcon", "type": "Image" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "openingHours",
        "type": "OpeningSchedule"
      },
      { "kind": "PropertySignature", "name": "stockInfo", "type": "Stock" },
      { "kind": "PropertySignature", "name": "storeContent", "type": "string" },
      { "kind": "PropertySignature", "name": "storeImages", "type": "Image[]" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Price",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "currencyIso", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "formattedValue",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "maxQuantity", "type": "number" },
      { "kind": "PropertySignature", "name": "minQuantity", "type": "number" },
      { "kind": "PropertySignature", "name": "priceType", "type": "PriceType" },
      { "kind": "PropertySignature", "name": "value", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PriceRange",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "maxPrice", "type": "Price" },
      { "kind": "PropertySignature", "name": "minPrice", "type": "Price" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "PriceType",
    "namespace": "Occ",
    "members": ["BUY", "FROM"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Principal",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Product",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "availableForPickup",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "averageRating",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "baseOptions",
        "type": "BaseOption[]"
      },
      { "kind": "PropertySignature", "name": "baseProduct", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "categories",
        "type": "Category[]"
      },
      {
        "kind": "PropertySignature",
        "name": "classifications",
        "type": "Classification[]"
      },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "futureStocks",
        "type": "FutureStock[]"
      },
      { "kind": "PropertySignature", "name": "images", "type": "Image[]" },
      { "kind": "PropertySignature", "name": "manufacturer", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "multidimensional",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "numberOfReviews",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialPromotions",
        "type": "Promotion[]"
      },
      { "kind": "PropertySignature", "name": "price", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "priceRange",
        "type": "PriceRange"
      },
      {
        "kind": "PropertySignature",
        "name": "productReferences",
        "type": "ProductReference[]"
      },
      { "kind": "PropertySignature", "name": "purchasable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "reviews", "type": "Review[]" },
      { "kind": "PropertySignature", "name": "stock", "type": "Stock" },
      { "kind": "PropertySignature", "name": "summary", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "variantMatrix",
        "type": "VariantMatrixElement[]"
      },
      {
        "kind": "PropertySignature",
        "name": "variantOptions",
        "type": "VariantOption[]"
      },
      { "kind": "PropertySignature", "name": "variantType", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "volumePrices",
        "type": "Price[]"
      },
      {
        "kind": "PropertySignature",
        "name": "volumePricesFlag",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductExpressUpdateElement",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "catalogId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "catalogVersion",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "code", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductExpressUpdateElementList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "productExpressUpdateElements",
        "type": "ProductExpressUpdateElement[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductInterestEntry",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "dateAdded", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "expirationDate",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "interestType",
        "type": "NotificationType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductInterestEntryRelation",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "product", "type": "Product" },
      {
        "kind": "PropertySignature",
        "name": "productInterestEntry",
        "type": "ProductInterestEntry[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductInterestSearchResult",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "Pagination"
      },
      {
        "kind": "PropertySignature",
        "name": "results",
        "type": "ProductInterestEntryRelation[]"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "Sort[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "catalog", "type": "string" },
      { "kind": "PropertySignature", "name": "currentPage", "type": "number" },
      { "kind": "PropertySignature", "name": "products", "type": "Product[]" },
      {
        "kind": "PropertySignature",
        "name": "totalPageCount",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "totalProductCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "version", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductReference",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "preselected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "referenceType",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "target", "type": "Product" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductReferenceList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "references",
        "type": "ProductReference[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductSearchPage",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "breadcrumbs",
        "type": "Breadcrumb[]"
      },
      { "kind": "PropertySignature", "name": "categoryCode", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "currentQuery",
        "type": "SearchState"
      },
      { "kind": "PropertySignature", "name": "facets", "type": "Facet[]" },
      {
        "kind": "PropertySignature",
        "name": "freeTextSearch",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "keywordRedirectUrl",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "products", "type": "Product[]" },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" },
      {
        "kind": "PropertySignature",
        "name": "spellingSuggestion",
        "type": "SpellingSuggestion"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Promotion",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "couldFireMessages",
        "type": "string[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "enabled", "type": "boolean" },
      { "kind": "PropertySignature", "name": "endDate", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "firedMessages",
        "type": "string[]"
      },
      { "kind": "PropertySignature", "name": "priority", "type": "number" },
      { "kind": "PropertySignature", "name": "productBanner", "type": "Image" },
      {
        "kind": "PropertySignature",
        "name": "promotionGroup",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "promotionType",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "restrictions",
        "type": "PromotionRestriction[]"
      },
      { "kind": "PropertySignature", "name": "startDate", "type": "Date" },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "promotions",
        "type": "Promotion[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionOrderEntryConsumed",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "adjustedUnitPrice",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "orderEntryNumber",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionRestriction",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "restrictionType",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionResult",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "consumedEntries",
        "type": "PromotionOrderEntryConsumed[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "promotion", "type": "Promotion" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionResultList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "promotions",
        "type": "PromotionResult[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Region",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "countryIso", "type": "string" },
      { "kind": "PropertySignature", "name": "isocode", "type": "string" },
      { "kind": "PropertySignature", "name": "isocodeShort", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RegionList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "regions", "type": "Region[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReplenishmentOrder",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "CostCenter"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "expirationTime",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "firstDate", "type": "string" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentStatus",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentType",
        "type": "PaymentType"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "purchaseOrderNumber",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "savedBy", "type": "Principal" },
      { "kind": "PropertySignature", "name": "saveTime", "type": "string" },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalUnitCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "trigger", "type": "Trigger" },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReplenishmentOrderList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrders",
        "type": "ReplenishmentOrder[]"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequest",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "cancellable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "creationTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      { "kind": "PropertySignature", "name": "order", "type": "Order" },
      {
        "kind": "PropertySignature",
        "name": "refundDeliveryCost",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "returnEntries",
        "type": "ReturnRequestEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "returnLabelDownloadUrl",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "rma", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestEntry",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "expectedQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "orderEntry",
        "type": "OrderEntry"
      },
      { "kind": "PropertySignature", "name": "refundAmount", "type": "Price" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Review",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "alias", "type": "string" },
      { "kind": "PropertySignature", "name": "comment", "type": "string" },
      { "kind": "PropertySignature", "name": "date", "type": "Date" },
      { "kind": "PropertySignature", "name": "headline", "type": "string" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "principal", "type": "User" },
      { "kind": "PropertySignature", "name": "rating", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReviewList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "reviews", "type": "Review[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SaveCartResult",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "savedCartData", "type": "Cart" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ScheduleReplenishmentForm",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "daysOfWeek",
        "type": "DaysOfWeek[]"
      },
      {
        "kind": "PropertySignature",
        "name": "nthDayOfMonth",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "numberOfDays", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "numberOfWeeks",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "recurrencePeriod",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentStartDate",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SearchQuery",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SearchState",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "query", "type": "SearchQuery" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Sort",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "asc", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "SortEnum",
    "namespace": "Occ",
    "members": ["BASIC", "DEFAULT", "FULL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SortModel",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SpecialOpeningDay",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "closed", "type": "boolean" },
      { "kind": "PropertySignature", "name": "closingTime", "type": "Time" },
      { "kind": "PropertySignature", "name": "comment", "type": "string" },
      { "kind": "PropertySignature", "name": "date", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "formattedDate",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "openingTime", "type": "Time" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SpellingSuggestion",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "query", "type": "string" },
      { "kind": "PropertySignature", "name": "suggestion", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StatusSummary",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "numberOfIssues",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "status",
        "type": "OrderEntryStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Stock",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "stockLevel", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "stockLevelStatus",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StoreCount",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "count", "type": "number" },
      { "kind": "PropertySignature", "name": "isoCode", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StoreCountList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "countriesAndRegionsStoreCount",
        "type": "StoreCount[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StoreFinderSearchPage",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "boundEastLongitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundNorthLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundSouthLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundWestLongitude",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "locationText", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" },
      {
        "kind": "PropertySignature",
        "name": "sourceLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "sourceLongitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "stores",
        "type": "PointOfService[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StoreFinderStockSearchPage",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "boundEastLongitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundNorthLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundSouthLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundWestLongitude",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "locationText", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "product", "type": "Product" },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" },
      {
        "kind": "PropertySignature",
        "name": "sourceLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "sourceLongitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "stores",
        "type": "PointOfServiceStock[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Suggestion",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SuggestionList",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "suggestions",
        "type": "Suggestion[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Time",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "formattedHour",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "hour", "type": "number" },
      { "kind": "PropertySignature", "name": "minute", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Title",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "TitleList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "titles", "type": "Title[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Trigger",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "activationTime",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "displayTimeTable",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Type",
    "namespace": "Occ",
    "members": ["All", "Order", "Product"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "User",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      { "kind": "PropertySignature", "name": "customerId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "deactivationDate",
        "type": "Date"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "displayUid", "type": "string" },
      { "kind": "PropertySignature", "name": "firstName", "type": "string" },
      { "kind": "PropertySignature", "name": "language", "type": "Language" },
      { "kind": "PropertySignature", "name": "lastName", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "titleCode", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "UserGroup",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "members", "type": "Principal[]" },
      { "kind": "PropertySignature", "name": "membersCount", "type": "number" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "subGroups",
        "type": "UserGroup[]"
      },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantCategory",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "hasImage", "type": "boolean" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "priority", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantMatrixElement",
    "namespace": "Occ",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "elements",
        "type": "VariantMatrixElement[]"
      },
      { "kind": "PropertySignature", "name": "isLeaf", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "parentVariantCategory",
        "type": "VariantCategory"
      },
      {
        "kind": "PropertySignature",
        "name": "variantOption",
        "type": "VariantOption"
      },
      {
        "kind": "PropertySignature",
        "name": "variantValueCategory",
        "type": "VariantValueCategory"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantOption",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "priceData", "type": "Price" },
      { "kind": "PropertySignature", "name": "stock", "type": "Stock" },
      { "kind": "PropertySignature", "name": "url", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "variantOptionQualifiers",
        "type": "VariantOptionQualifier[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantOptionQualifier",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "image", "type": "Image" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "qualifier", "type": "string" },
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantValueCategory",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "sequence", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "superCategories",
        "type": "VariantCategory[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Voucher",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "appliedValue", "type": "Price" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "freeShipping",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "value", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "valueFormatted",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "valueString", "type": "string" },
      { "kind": "PropertySignature", "name": "voucherCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VoucherList",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "vouchers", "type": "Voucher[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "WeekdayOpeningDay",
    "namespace": "Occ",
    "members": [
      { "kind": "PropertySignature", "name": "closed", "type": "boolean" },
      { "kind": "PropertySignature", "name": "closingTime", "type": "Time" },
      { "kind": "PropertySignature", "name": "openingTime", "type": "Time" },
      { "kind": "PropertySignature", "name": "weekDay", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccAnonymousConsentTemplatesAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadAnonymousConsents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<AnonymousConsent[]>"
      },
      {
        "kind": "Method",
        "name": "loadAnonymousConsentTemplates",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "email",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldCartId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "toMergeCartGuid",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cart[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartEntryAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "qty",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pickupStore",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entryPromotionService",
            "type": "OrderEntryPromotionsService",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
            "shortType": "OrderEntryPromotionsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.Cart:interface",
            "shortType": "Occ.Cart",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Cart",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Cart"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartValidationAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "validate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModificationList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCartVoucherAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getCartVoucherEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getHeaders",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "HttpHeaders"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCmsComponentAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "findComponentsByIds",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ids",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fields",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CmsComponent[]>"
      },
      {
        "kind": "Method",
        "name": "getComponentEndPoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getComponentsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "requestParams",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "fields",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getContextParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        [key: string]: string;\n    }"
      },
      {
        "kind": "Method",
        "name": "getPaginationParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "{\n        [key: string]: string;\n    }"
      },
      { "kind": "Property", "name": "headers", "type": "HttpHeaders" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCmsPageAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getPagesRequestParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OccCmsPageRequest"
      },
      { "kind": "Property", "name": "headers", "type": "HttpHeaders" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CmsStructureModel>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCmsPageNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.CMSPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.CMSPage:interface",
            "shortType": "Occ.CMSPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "CmsStructureModel",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!CmsStructureModel:interface",
            "shortType": "CmsStructureModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "CmsStructureModel"
      },
      {
        "kind": "Method",
        "name": "normalizeComponentData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.CMSPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.CMSPage:interface",
            "shortType": "Occ.CMSPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "CmsStructureModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureModel:interface",
            "shortType": "CmsStructureModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "normalizePageComponentData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.CMSPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.CMSPage:interface",
            "shortType": "Occ.CMSPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "CmsStructureModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureModel:interface",
            "shortType": "CmsStructureModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "normalizePageData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.CMSPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.CMSPage:interface",
            "shortType": "Occ.CMSPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "CmsStructureModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureModel:interface",
            "shortType": "CmsStructureModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "normalizePageSlotData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.CMSPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.CMSPage:interface",
            "shortType": "Occ.CMSPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "CmsStructureModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsStructureModel:interface",
            "shortType": "CmsStructureModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "normalizeRobots",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.CMSPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.CMSPage:interface",
            "shortType": "Occ.CMSPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OccCmsPageRequest",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "fields", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "pageLabelOrId",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "pageType", "type": "PageType" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccConfig",
    "members": [
      { "kind": "Property", "name": "backend", "type": "BackendConfig" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "occConfigValidator",
    "parameters": [
      {
        "name": "config",
        "type": "OccConfig",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!OccConfig:class",
        "shortType": "OccConfig",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "string"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCostCenterListNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.CostCentersList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.CostCentersList:interface",
            "shortType": "Occ.CostCentersList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "EntitiesModel<CostCenter>",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<CostCenter>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCostCenterNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.CostCenter:interface",
            "shortType": "Occ.CostCenter",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "CostCenter",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "CostCenter"
      },
      {
        "kind": "Method",
        "name": "normalizeBoolean",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "property",
            "type": "string | boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCostCenterSerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Occ.CostCenter",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Occ.CostCenter:interface",
            "shortType": "Occ.CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Occ.CostCenter"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccCustomerCouponAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "claimCustomerCoupon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCoupon2Customer>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getCustomerCoupons",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCouponSearchResult>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "turnOffNotification",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "turnOnNotification",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "couponCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CustomerCouponNotification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OccEndpoint",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scope",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      { "kind": "PropertySignature", "name": "default", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OccEndpoints",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "addEmail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addEntries",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addressDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addresses",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addressVerification",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "addTextfieldConfigurationToCart",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "addVariantConfigurationToCart",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "anonymousConsentTemplates",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUser",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserApprover",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserApprovers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserPermission",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserPermissions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUsers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserUserGroup",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "b2bUserUserGroups",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "baseSites",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "budget",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "budgets",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cancelOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cancelReplenishmentOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cancelReturn",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cart",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "carts",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "cartVoucher",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "claimCoupon",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "component",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "components",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "consentDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "consents",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "consentTemplates",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "consignmentTracking",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenterBudget",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenterBudgets",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenters",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "costCentersAll",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "countries",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "couponNotification",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "createCart",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "createTextfieldConfiguration",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "createVariantConfiguration",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "currencies",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "customerCoupons",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "deleteCart",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "getActiveCostCenters",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "getProductInterests",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "getVariantConfigurationOverview",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "languages",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "notificationPreference",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApproval",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApprovalDecision",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApprovalPermissionTypes",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApprovals",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderHistory",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturnDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturns",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnit",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitApprover",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitApprovers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnits",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsAddress",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsAddresses",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsApprovalProcesses",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsAvailable",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitsTree",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitUserRole",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitUserRoles",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "orgUnitUsers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "page",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "pages",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentDetail",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentDetailsAll",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "permission",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "permissions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "product",
        "type": "string | ProductOccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productInterests",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productReferences",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productReviews",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productSearch",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "productSuggestions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "readTextfieldConfigurationForCartEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "readVariantConfiguration",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "readVariantConfigurationForCartEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "readVariantConfigurationOverviewForOrderEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "readVariantConfigurationPriceSummary",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "regions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "removeEntries",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderDetails",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderDetailsHistory",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderHistory",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "returnOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "saveCart",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "scheduleReplenishmentOrder",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "store",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "stores",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "storescounts",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "updateEntries",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "updateTextfieldConfigurationForCartEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "updateVariantConfiguration",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "updateVariantConfigurationForCartEntry",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroup",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupAvailableOrderApprovalPermissions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupAvailableOrgCustomers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupMember",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupMembers",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupOrderApprovalPermission",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroupOrderApprovalPermissions",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroups",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "validate",
        "type": "string | OccEndpoint"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccEndpointsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "endpoint",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "attributes",
            "type": "DynamicAttributes",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!DynamicAttributes:interface",
            "shortType": "DynamicAttributes",
            "importPath": "@spartacus/core"
          },
          {
            "name": "propertiesToOmit",
            "type": "BaseOccUrlProperties",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!BaseOccUrlProperties:interface",
            "shortType": "BaseOccUrlProperties",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getBaseUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "baseUrlProperties",
            "type": "BaseOccUrlProperties",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!BaseOccUrlProperties:interface",
            "shortType": "BaseOccUrlProperties",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRawEndpointValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "endpoint",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "isConfigured",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "endpoint",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OccFieldsModel",
    "members": [
      { "kind": "PropertySignature", "name": "fields", "type": "object" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccFieldsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          }
        ]
      },
      { "kind": "Property", "name": "FIELDS_PARAM", "type": "string" },
      {
        "kind": "Method",
        "name": "getOptimalUrlGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "models",
            "type": "ScopedDataWithUrl[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ScopedDataWithUrl:interface",
            "shortType": "ScopedDataWithUrl",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OccOptimimalUrlGroups"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OccOptimimalUrlGroups",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "optimalUrl",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "{\n        [scope: string]: OccFieldsModel;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccOrderNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entryPromotionService",
            "type": "OrderEntryPromotionsService",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
            "shortType": "OrderEntryPromotionsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Order",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.Order:interface",
            "shortType": "Occ.Order",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Order",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Order"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccProductAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "requestsOptimizer",
            "type": "OccRequestsOptimizerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccRequestsOptimizerService:class",
            "shortType": "OccRequestsOptimizerService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "loadMany",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ScopedProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ScopedProductData:interface",
            "shortType": "ScopedProductData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ScopedProductData[]"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Property",
        "name": "requestsOptimizer",
        "type": "OccRequestsOptimizerService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccProductReferencesAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "reference",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "referenceType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductReference[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccProductReferencesListNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ProductReferenceList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.ProductReferenceList:interface",
            "shortType": "Occ.ProductReferenceList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "ProductReference[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ProductReference:interface",
            "shortType": "ProductReference",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ProductReference[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccProductReviewsAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "maxCount",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "maxCount",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Review[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "post",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "review",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Review>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccProductSearchAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getSearchEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSuggestionEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "term",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "max",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadSuggestions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "term",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Suggestion[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ProductSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccProductSearchPageNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ProductSearchPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.ProductSearchPage:interface",
            "shortType": "Occ.ProductSearchPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "ProductSearchPage",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ProductSearchPage:interface",
            "shortType": "ProductSearchPage",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ProductSearchPage"
      },
      { "kind": "Property", "name": "DEFAULT_TOP_VALUES", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccReplenishmentOrderNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entryPromotionService",
            "type": "OrderEntryPromotionsService",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!OrderEntryPromotionsService:class",
            "shortType": "OrderEntryPromotionsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ReplenishmentOrder",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.ReplenishmentOrder:interface",
            "shortType": "Occ.ReplenishmentOrder",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "ReplenishmentOrder",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ReplenishmentOrder"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccRequestsOptimizerService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occFields",
            "type": "OccFieldsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccFieldsService:class",
            "shortType": "OccFieldsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      { "kind": "Property", "name": "occFields", "type": "OccFieldsService" },
      {
        "kind": "Method",
        "name": "scopedDataLoad",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scopedDataWithUrls",
            "type": "ScopedDataWithUrl[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ScopedDataWithUrl:interface",
            "shortType": "ScopedDataWithUrl",
            "importPath": "@spartacus/core"
          },
          {
            "name": "dataFactory",
            "type": "(url: string) => Observable<T>",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ScopedData<T>[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccReturnRequestNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ReturnRequest",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.ReturnRequest:interface",
            "shortType": "Occ.ReturnRequest",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "ReturnRequest",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ReturnRequest"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "occServerConfigFromMetaTagFactory",
    "parameters": [
      {
        "name": "meta",
        "type": "Meta",
        "isOptional": false,
        "canonicalReference": "@angular/platform-browser!Meta:class",
        "shortType": "Meta",
        "importPath": "@angular/platform-browser"
      }
    ],
    "returnType": "OccConfig"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccSiteAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadBaseSite",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "siteUid",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<BaseSite | undefined>"
      },
      {
        "kind": "Method",
        "name": "loadBaseSites",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BaseSite[]>"
      },
      {
        "kind": "Method",
        "name": "loadCountries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "CountryType",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!CountryType:enum",
            "shortType": "CountryType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "loadCurrencies",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Currency[]>"
      },
      {
        "kind": "Method",
        "name": "loadLanguages",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Language[]>"
      },
      {
        "kind": "Method",
        "name": "loadRegions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "countryIsoCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Region[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserAddressAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "verify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<AddressValidation>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserConsentAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "giveConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentTemplateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentTemplateVersion",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadConsents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "withdrawConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserInterestsAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "notificationType",
            "type": "NotificationType",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!NotificationType:enum",
            "shortType": "NotificationType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any>"
      },
      { "kind": "Property", "name": "config", "type": "OccConfig" },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getInterests",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "notificationType",
            "type": "NotificationType",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!NotificationType:enum",
            "shortType": "NotificationType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ProductInterestSearchResult>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "removeInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "item",
            "type": "ProductInterestEntryRelation",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductInterestEntryRelation:interface",
            "shortType": "ProductInterestEntryRelation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserInterestsNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ProductInterestSearchResult",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.ProductInterestSearchResult:interface",
            "shortType": "Occ.ProductInterestSearchResult",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "ProductInterestSearchResult",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ProductInterestSearchResult:interface",
            "shortType": "ProductInterestSearchResult",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ProductInterestSearchResult"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserNotificationPreferenceAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<NotificationPreference[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "preferences",
            "type": "NotificationPreference[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!NotificationPreference:interface",
            "shortType": "NotificationPreference",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "createReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserPaymentAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentMethodID",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PaymentDetails[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "setDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentMethodID",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OccUserReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OpeningSchedule",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "specialDayOpeningList",
        "type": "SpecialOpeningDay[]"
      },
      {
        "kind": "PropertySignature",
        "name": "weekDayOpeningList",
        "type": "WeekdayOpeningDay[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_HISTORY_NORMALIZER",
    "type": "InjectionToken<Converter<any, OrderHistoryList>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_NORMALIZER",
    "type": "InjectionToken<Converter<any, Order>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_RETURN_REQUEST_INPUT_SERIALIZER",
    "type": "InjectionToken<Converter<ReturnRequestEntryInputList, any>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_RETURN_REQUEST_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReturnRequest>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ORDER_RETURNS_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReturnRequestList>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "ORDER_TYPE",
    "members": ["PLACE_ORDER", "SCHEDULE_REPLENISHMENT_ORDER"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Order",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "cancellable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "consignments",
        "type": "Consignment[]"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "CostCenter"
      },
      { "kind": "PropertySignature", "name": "created", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryStatus",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryStatusDisplay",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "guestCustomer",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "orgCustomer", "type": "B2BUser" },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "purchaseOrderNumber",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "returnable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "unconsignedEntries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderApprovalPermissionType",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderEntry",
    "members": [
      { "kind": "PropertySignature", "name": "basePrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "cancellableQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "cancelledItemsPrice",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      { "kind": "PropertySignature", "name": "entryNumber", "type": "number" },
      { "kind": "PropertySignature", "name": "orderCode", "type": "string" },
      { "kind": "PropertySignature", "name": "product", "type": "Product" },
      {
        "kind": "PropertySignature",
        "name": "promotions",
        "type": "PromotionResult[]"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "returnableQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "returnedItemsPrice",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      { "kind": "PropertySignature", "name": "updateable", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OrderEntryPromotionsService",
    "members": [
      {
        "kind": "Method",
        "name": "getProductPromotion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "Occ.OrderEntry",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Occ.OrderEntry:interface",
            "shortType": "Occ.OrderEntry",
            "importPath": "@spartacus/core"
          },
          {
            "name": "promotions",
            "type": "PromotionResult[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!PromotionResult:interface",
            "shortType": "PromotionResult",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "PromotionResult[]"
      },
      {
        "kind": "Method",
        "name": "isConsumedByEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consumedEntry",
            "type": "PromotionOrderEntryConsumed",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PromotionOrderEntryConsumed:interface",
            "shortType": "PromotionOrderEntryConsumed",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entry",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderHistory",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "placed", "type": "Date" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "total", "type": "Price" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "OrderHistoryList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orders",
        "type": "OrderHistory[]"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OrderOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "OrderReturnRequestService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReturnRequestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReturnRequestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadOrderReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetCancelReturnRequestProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Page",
    "members": [
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "label", "type": "string" },
      { "kind": "PropertySignature", "name": "loadTime", "type": "number" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "pageId", "type": "string" },
      { "kind": "PropertySignature", "name": "properties", "type": "any" },
      {
        "kind": "PropertySignature",
        "name": "robots",
        "type": "PageRobotsMeta[]"
      },
      {
        "kind": "PropertySignature",
        "name": "slots",
        "type": "{\n        [key: string]: ContentSlotData;\n    }"
      },
      { "kind": "PropertySignature", "name": "template", "type": "string" },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageBreadcrumbResolver",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BreadcrumbMeta[] | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PageContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "type",
            "type": "PageType",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!PageType:enum",
            "shortType": "PageType",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "id", "type": "string" },
      { "kind": "Property", "name": "type", "type": "PageType" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageDescriptionResolver",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "resolveDescription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageHeadingResolver",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "resolveHeading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageImageResolver",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "resolveImage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PageLinkService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageMetaConfig",
            "type": "PageMetaConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageMetaConfig:class",
            "shortType": "PageMetaConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildCanonicalUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "CanonicalUrlOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CanonicalUrlOptions:interface",
            "shortType": "CanonicalUrlOptions",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCanonicalUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "CanonicalUrlOptions",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!CanonicalUrlOptions:interface",
            "shortType": "CanonicalUrlOptions",
            "importPath": "@spartacus/core"
          },
          {
            "name": "url",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "pageMetaConfig",
        "type": "PageMetaConfig"
      },
      {
        "kind": "Method",
        "name": "removeQueryParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "config",
            "type": "CanonicalUrlOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CanonicalUrlOptions:interface",
            "shortType": "CanonicalUrlOptions",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageMeta",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "breadcrumbs",
        "type": "BreadcrumbMeta[]"
      },
      { "kind": "PropertySignature", "name": "canonicalUrl", "type": "string" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "heading", "type": "string" },
      { "kind": "PropertySignature", "name": "image", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "robots",
        "type": "PageRobotsMeta[]"
      },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PageMetaConfig",
    "members": [
      {
        "kind": "Property",
        "name": "pageMeta",
        "type": "PageMetaResolversConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PageMetaModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<PageMetaModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PageMetaResolver",
    "members": [
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getScore",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "pageTemplate", "type": "string" },
      { "kind": "Property", "name": "pageType", "type": "PageType" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageMetaResolverConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "disabledInCsr",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "method", "type": "string" },
      { "kind": "PropertySignature", "name": "property", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageMetaResolversConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "canonicalUrl",
        "type": "CanonicalUrlOptions"
      },
      {
        "kind": "PropertySignature",
        "name": "enableInDevMode",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "resolvers",
        "type": "PageMetaResolverConfig[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PageMetaService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cms",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "unifiedInjector",
            "type": "UnifiedInjector",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UnifiedInjector:class",
            "shortType": "UnifiedInjector",
            "importPath": "@spartacus/core"
          },
          {
            "name": "pageMetaConfig",
            "type": "PageMetaConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageMetaConfig:class",
            "shortType": "PageMetaConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platformId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "cms", "type": "CmsService" },
      {
        "kind": "Method",
        "name": "getMeta",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageMeta | null>"
      },
      {
        "kind": "Method",
        "name": "getMetaResolver",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<PageMetaResolver | undefined>"
      },
      {
        "kind": "Method",
        "name": "getResolverMethods",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "{\n        [property: string]: string;\n    }"
      },
      {
        "kind": "Property",
        "name": "meta$",
        "type": "Observable<PageMeta | null>"
      },
      {
        "kind": "Property",
        "name": "pageMetaConfig",
        "type": "PageMetaConfig"
      },
      { "kind": "Property", "name": "platformId", "type": "string" },
      {
        "kind": "Method",
        "name": "resolve",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "metaResolver",
            "type": "PageMetaResolver",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageMetaResolver:class",
            "shortType": "PageMetaResolver",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<PageMeta>"
      },
      {
        "kind": "Property",
        "name": "resolvers$",
        "type": "Observable<PageMetaResolver[]>"
      },
      {
        "kind": "Property",
        "name": "unifiedInjector",
        "type": "UnifiedInjector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "PageRobotsMeta",
    "members": ["FOLLOW", "INDEX", "NOFOLLOW", "NOINDEX"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageRobotsResolver",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[] | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageState",
    "members": [
      { "kind": "PropertySignature", "name": "index", "type": "IndexType" },
      {
        "kind": "PropertySignature",
        "name": "pageData",
        "type": "StateUtils.EntityState<Page>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PageTitleResolver",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "PageType",
    "members": ["CATALOG_PAGE", "CATEGORY_PAGE", "CONTENT_PAGE", "PRODUCT_PAGE"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaginationModel",
    "members": [
      { "kind": "PropertySignature", "name": "currentPage", "type": "number" },
      { "kind": "PropertySignature", "name": "pageSize", "type": "number" },
      { "kind": "PropertySignature", "name": "sort", "type": "string" },
      { "kind": "PropertySignature", "name": "totalPages", "type": "number" },
      { "kind": "PropertySignature", "name": "totalResults", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ParamsMapping",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paramName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PASSWORD_PATTERN",
    "type": "RegExp"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PAYMENT_DETAILS_NORMALIZER",
    "type": "InjectionToken<Converter<any, PaymentDetails>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaymentDetails",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "accountHolderName",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "billingAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "cardNumber", "type": "string" },
      { "kind": "PropertySignature", "name": "cardType", "type": "CardType" },
      { "kind": "PropertySignature", "name": "cvn", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "defaultPayment",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "expiryMonth", "type": "string" },
      { "kind": "PropertySignature", "name": "expiryYear", "type": "string" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "issueNumber", "type": "string" },
      { "kind": "PropertySignature", "name": "saved", "type": "boolean" },
      { "kind": "PropertySignature", "name": "startMonth", "type": "string" },
      { "kind": "PropertySignature", "name": "startYear", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "subscriptionId",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PaymentType",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "displayName", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PickupOrderEntryGroup",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deliveryPointOfService",
        "type": "PointOfService"
      },
      { "kind": "PropertySignature", "name": "distance", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "POINT_OF_SERVICE_NORMALIZER",
    "type": "InjectionToken<Converter<any, PointOfService>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PointOfService",
    "members": [
      { "kind": "PropertySignature", "name": "address", "type": "Address" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "displayName", "type": "string" },
      { "kind": "PropertySignature", "name": "distanceKm", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "features",
        "type": "{\n        [propertyName: string]: string;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "formattedDistance",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "geoPoint", "type": "GeoPoint" },
      { "kind": "PropertySignature", "name": "mapIcon", "type": "Image" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "openingHours",
        "type": "OpeningSchedule"
      },
      { "kind": "PropertySignature", "name": "storeContent", "type": "string" },
      { "kind": "PropertySignature", "name": "storeImages", "type": "Image[]" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Price",
    "members": [
      { "kind": "PropertySignature", "name": "currencyIso", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "formattedValue",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "maxQuantity", "type": "number" },
      { "kind": "PropertySignature", "name": "minQuantity", "type": "number" },
      { "kind": "PropertySignature", "name": "priceType", "type": "PriceType" },
      { "kind": "PropertySignature", "name": "value", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PriceRange",
    "members": [
      { "kind": "PropertySignature", "name": "maxPrice", "type": "Price" },
      { "kind": "PropertySignature", "name": "minPrice", "type": "Price" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "PriceType",
    "members": ["BUY", "FROM"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Principal",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "Priority",
    "members": ["FALLBACK", "HIGH", "LOW", "NORMAL"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PROCESS_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProcessModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<ProcessModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "ProcessSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getProcessErrorFactory",
    "namespace": "ProcessSelectors",
    "parameters": [
      {
        "name": "processId",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "MemoizedSelector<StateWithProcess<T>, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getProcessLoadingFactory",
    "namespace": "ProcessSelectors",
    "parameters": [
      {
        "name": "processId",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "MemoizedSelector<StateWithProcess<T>, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getProcessStateFactory",
    "namespace": "ProcessSelectors",
    "parameters": [
      {
        "name": "processId",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "MemoizedSelector<StateWithProcess<T>, LoaderState<T>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getProcessSuccessFactory",
    "namespace": "ProcessSelectors",
    "parameters": [
      {
        "name": "processId",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "MemoizedSelector<StateWithProcess<T>, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_DETAIL_ENTITY",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_INTERESTS_NORMALIZER",
    "type": "InjectionToken<Converter<any, ProductInterestSearchResult>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_INTERESTS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_NORMALIZER",
    "type": "InjectionToken<Converter<any, Product>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_REFERENCES_NORMALIZER",
    "type": "InjectionToken<Converter<any, ProductReference[]>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_REVIEW_NORMALIZER",
    "type": "InjectionToken<Converter<any, Review>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_REVIEW_SERIALIZER",
    "type": "InjectionToken<Converter<Review, any>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_SEARCH_PAGE_NORMALIZER",
    "type": "InjectionToken<Converter<any, ProductSearchPage>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PRODUCT_SUGGESTION_NORMALIZER",
    "type": "InjectionToken<Converter<any, Suggestion>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Product",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "availableForPickup",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "averageRating",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "baseOptions",
        "type": "BaseOption[]"
      },
      { "kind": "PropertySignature", "name": "baseProduct", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "categories",
        "type": "Category[]"
      },
      {
        "kind": "PropertySignature",
        "name": "classifications",
        "type": "Classification[]"
      },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "futureStocks",
        "type": "FutureStock[]"
      },
      { "kind": "PropertySignature", "name": "images", "type": "Images" },
      { "kind": "PropertySignature", "name": "manufacturer", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "multidimensional",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "nameHtml", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "numberOfReviews",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialPromotions",
        "type": "Promotion[]"
      },
      { "kind": "PropertySignature", "name": "price", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "priceRange",
        "type": "PriceRange"
      },
      {
        "kind": "PropertySignature",
        "name": "productReferences",
        "type": "ProductReferences"
      },
      { "kind": "PropertySignature", "name": "purchasable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "reviews", "type": "Review[]" },
      { "kind": "PropertySignature", "name": "slug", "type": "string" },
      { "kind": "PropertySignature", "name": "stock", "type": "Stock" },
      { "kind": "PropertySignature", "name": "summary", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "variantMatrix",
        "type": "VariantMatrixElement[]"
      },
      {
        "kind": "PropertySignature",
        "name": "variantOptions",
        "type": "VariantOption[]"
      },
      {
        "kind": "PropertySignature",
        "name": "variantType",
        "type": "VariantType"
      },
      {
        "kind": "PropertySignature",
        "name": "volumePrices",
        "type": "Price[]"
      },
      {
        "kind": "PropertySignature",
        "name": "volumePricesFlag",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "ProductActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAN_PRODUCT_REFERENCES",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CleanProductReferences",
    "namespace": "ProductActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_PRODUCT_PRICE",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_PRODUCT_SEARCH_RESULT",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearProductPrice",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearProductSearchResult",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ClearSearch",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ClearSearch:interface",
            "shortType": "ClearSearch",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ClearSearch" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityScopedLoaderAction",
    "namespace": "ProductActions",
    "members": [
      { "kind": "PropertySignature", "name": "meta", "type": "ProductMeta" },
      { "kind": "PropertySignature", "name": "payload", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GET_PRODUCT_SUGGESTIONS_FAIL",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GET_PRODUCT_SUGGESTIONS_SUCCESS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GET_PRODUCT_SUGGESTIONS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GetProductSuggestions",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        term: string;\n        searchConfig: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        term: string;\n        searchConfig: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GetProductSuggestionsFail",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ErrorModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ErrorModel:interface",
            "shortType": "ErrorModel",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ErrorModel" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GetProductSuggestionsSuccess",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Suggestion[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Suggestion:interface",
            "shortType": "Suggestion",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Suggestion[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_FAIL",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_REFERENCES_FAIL",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_REFERENCES_SUCCESS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_REFERENCES",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_REVIEWS_FAIL",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_REVIEWS_SUCCESS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_REVIEWS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_SUCCESS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProduct",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductFail",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductReferences",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        productCode: string;\n        referenceType?: string;\n        pageSize?: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        productCode: string;\n        referenceType?: string;\n        pageSize?: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductReferencesFail",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ErrorModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ErrorModel:interface",
            "shortType": "ErrorModel",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ErrorModel" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductReferencesSuccess",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        productCode: string;\n        list: ProductReference[];\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        productCode: string;\n        list: ProductReference[];\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductReviews",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductReviewsFail",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ErrorModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ErrorModel:interface",
            "shortType": "ErrorModel",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ErrorModel" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductReviewsSuccess",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        productCode: string;\n        list: Review[];\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        productCode: string;\n        list: Review[];\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductSuccess",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Product" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "POST_PRODUCT_REVIEW_FAIL",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "POST_PRODUCT_REVIEW_SUCCESS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "POST_PRODUCT_REVIEW",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PostProductReview",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        productCode: string;\n        review: Review;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        productCode: string;\n        review: Review;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PostProductReviewFail",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "PostProductReviewSuccess",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Review",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Review:interface",
            "shortType": "Review",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Review" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ProductAction",
    "namespace": "ProductActions",
    "members": [
      "LoadProduct",
      " | ",
      "LoadProductFail",
      " | ",
      "LoadProductSuccess",
      " | ",
      "ClearProductPrice"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductMeta",
    "namespace": "ProductActions",
    "members": [
      { "kind": "PropertySignature", "name": "scope", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ProductReferencesAction",
    "namespace": "ProductActions",
    "members": [
      "LoadProductReferences",
      " | ",
      "LoadProductReferencesFail",
      " | ",
      "LoadProductReferencesSuccess",
      " | ",
      "CleanProductReferences"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ProductReviewsAction",
    "namespace": "ProductActions",
    "members": [
      "LoadProductReviews",
      " | ",
      "LoadProductReviewsFail",
      " | ",
      "LoadProductReviewsSuccess",
      " | ",
      "PostProductReview",
      " | ",
      "PostProductReviewFail",
      " | ",
      "PostProductReviewSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ProductSearchAction",
    "namespace": "ProductActions",
    "members": [
      "SearchProducts",
      " | ",
      "SearchProductsFail",
      " | ",
      "SearchProductsSuccess",
      " | ",
      "GetProductSuggestions",
      " | ",
      "GetProductSuggestionsSuccess",
      " | ",
      "GetProductSuggestionsFail",
      " | ",
      "ClearProductSearchResult"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SEARCH_PRODUCTS_FAIL",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SEARCH_PRODUCTS_SUCCESS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SEARCH_PRODUCTS",
    "namespace": "ProductActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SearchProducts",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        queryText: string;\n        searchConfig: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "auxiliary",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "auxiliary", "type": "boolean" },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        queryText: string;\n        searchConfig: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SearchProductsFail",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ErrorModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ErrorModel:interface",
            "shortType": "ErrorModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "auxiliary",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "auxiliary", "type": "boolean" },
      { "kind": "Property", "name": "payload", "type": "ErrorModel" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SearchProductsSuccess",
    "namespace": "ProductActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ProductSearchPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductSearchPage:interface",
            "shortType": "ProductSearchPage",
            "importPath": "@spartacus/core"
          },
          {
            "name": "auxiliary",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "auxiliary", "type": "boolean" },
      { "kind": "Property", "name": "payload", "type": "ProductSearchPage" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "loadMany",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ScopedProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ScopedProductData:interface",
            "shortType": "ScopedProductData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ScopedProductData[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "ProductAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductAdapter:class",
            "shortType": "ProductAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "ProductAdapter" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "getMany",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ScopedProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ScopedProductData:interface",
            "shortType": "ScopedProductData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ScopedProductData[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productSearchService",
            "type": "ProductSearchService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductSearchService:class",
            "shortType": "ProductSearchService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildFacetChangedEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<FacetChangedEvent>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Property",
        "name": "productSearchService",
        "type": "ProductSearchService"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_productEventBuilder",
            "type": "ProductEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductEventBuilder:class",
            "shortType": "ProductEventBuilder",
            "importPath": "@spartacus/core"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductImageNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "OccConfig" },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.Product:interface",
            "shortType": "Occ.Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Product",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Product"
      },
      {
        "kind": "Method",
        "name": "normalize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Image[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.Image:interface",
            "shortType": "Occ.Image",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Images"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductInterestEntry",
    "members": [
      { "kind": "PropertySignature", "name": "dateAdded", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "expirationDate",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "interestType",
        "type": "NotificationType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductInterestEntryRelation",
    "members": [
      { "kind": "PropertySignature", "name": "product", "type": "Product" },
      {
        "kind": "PropertySignature",
        "name": "productInterestEntry",
        "type": "ProductInterestEntry[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductInterestSearchResult",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "Pagination"
      },
      {
        "kind": "PropertySignature",
        "name": "results",
        "type": "ProductInterestEntryRelation[]"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "Sort[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductLoadingService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithProduct>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "loadingScopes",
            "type": "LoadingScopesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LoadingScopesService:class",
            "shortType": "LoadingScopesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "actions$",
            "type": "Actions",
            "isOptional": false,
            "canonicalReference": "@ngrx/effects!Actions:class",
            "shortType": "Actions",
            "importPath": "@ngrx/effects"
          },
          {
            "name": "platformId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "actions$", "type": "Actions" },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scopes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "getProductForScope",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "getProductReloadTriggers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>[]"
      },
      {
        "kind": "Method",
        "name": "getScopesIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scopes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "initProductScopes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scopes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "loadingScopes",
        "type": "LoadingScopesService"
      },
      { "kind": "Property", "name": "platformId", "type": "any" },
      {
        "kind": "Property",
        "name": "products",
        "type": "{\n        [code: string]: {\n            [scope: string]: Observable<Product>;\n        };\n    }"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithProduct>" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<ProductModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductNameNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "OccConfig" },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.Product:interface",
            "shortType": "Occ.Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Product",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Product"
      },
      {
        "kind": "Method",
        "name": "normalize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "normalizeSlug",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "reservedSlugCharacters",
        "type": "string"
      },
      { "kind": "Property", "name": "slugChar", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductOccEndpoint",
    "members": [
      { "kind": "PropertySignature", "name": "attributes", "type": "string" },
      { "kind": "PropertySignature", "name": "details", "type": "string" },
      { "kind": "PropertySignature", "name": "list", "type": "string" },
      { "kind": "PropertySignature", "name": "variants", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductPageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "basePageMetaResolver",
            "type": "BasePageMetaResolver",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BasePageMetaResolver:class",
            "shortType": "BasePageMetaResolver",
            "importPath": "@spartacus/core"
          },
          {
            "name": "pageLinkService",
            "type": "PageLinkService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageLinkService:class",
            "shortType": "PageLinkService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "basePageMetaResolver",
        "type": "BasePageMetaResolver"
      },
      {
        "kind": "Method",
        "name": "findBaseProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Property",
        "name": "pageLinkService",
        "type": "PageLinkService"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      {
        "kind": "Method",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BreadcrumbMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveCanonicalUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "resolveDescription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "resolveFirstCategory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "resolveHeading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "resolveImage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "resolveManufacturer",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductReference",
    "members": [
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "preselected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "referenceType",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "target", "type": "Product" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductReferenceNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.Product:interface",
            "shortType": "Occ.Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Product",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Product"
      },
      {
        "kind": "Method",
        "name": "normalize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ProductReference[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Occ.ProductReference:interface",
            "shortType": "Occ.ProductReference",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ProductReferences"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductReferences",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "referenceType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ProductReference[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductReferencesAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "referenceType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductReference[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductReferencesConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "ProductReferencesAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductReferencesAdapter:class",
            "shortType": "ProductReferencesAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "ProductReferencesAdapter"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "referenceType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductReference[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductReferenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithProduct>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cleanReferences",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getProductReferences",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "referenceType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductReference[]>"
      },
      {
        "kind": "Method",
        "name": "loadProductReferences",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "referenceType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithProduct>" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductReferencesState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "list",
        "type": "ProductReference[]"
      },
      { "kind": "PropertySignature", "name": "productCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductReviewsAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "maxCount",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Review[]>"
      },
      {
        "kind": "Method",
        "name": "post",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "review",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Review>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductReviewsConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "ProductReviewsAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductReviewsAdapter:class",
            "shortType": "ProductReviewsAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "ProductReviewsAdapter"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "review",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Review>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "maxCount",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Review[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductReviewService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithProduct>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "review",
            "type": "Review",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Review:interface",
            "shortType": "Review",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getByProductCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Review[]>"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithProduct>" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductReviewsState",
    "members": [
      { "kind": "PropertySignature", "name": "list", "type": "Review[]" },
      { "kind": "PropertySignature", "name": "productCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "ProductScope",
    "members": ["ATTRIBUTES", "DETAILS", "LIST", "PRICE", "VARIANTS"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductSearchAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "loadSuggestions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "term",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Suggestion[]>"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ProductSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductSearchConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "ProductSearchAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductSearchAdapter:class",
            "shortType": "ProductSearchAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "ProductSearchAdapter" },
      {
        "kind": "Method",
        "name": "getSuggestions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "term",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Suggestion[]>"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ProductSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductSearchPage",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "breadcrumbs",
        "type": "Breadcrumb[]"
      },
      { "kind": "PropertySignature", "name": "categoryCode", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "currentQuery",
        "type": "SearchState"
      },
      { "kind": "PropertySignature", "name": "facets", "type": "Facet[]" },
      {
        "kind": "PropertySignature",
        "name": "freeTextSearch",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "keywordRedirectUrl",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "products", "type": "Product[]" },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" },
      {
        "kind": "PropertySignature",
        "name": "spellingSuggestion",
        "type": "SpellingSuggestion"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductSearchService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithProduct>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clearResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProductSearchPage>"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithProduct>" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "ProductSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAllProductCodes",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, string[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAuxSearchResults",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, ProductSearchPage>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getProductReferencesState",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, ProductReferencesState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getProductReviewsState",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, ProductReviewsState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getProductsSearchState",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, ProductsSearchState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getProductsState",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, ProductsState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getProductState",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, StateUtils.EntityLoaderState<Product>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getProductSuggestions",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, Suggestion[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSearchResults",
    "namespace": "ProductSelectors",
    "type": "MemoizedSelector<StateWithProduct, ProductSearchPage>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSelectedProductErrorFactory",
    "namespace": "ProductSelectors",
    "type": "(code: string, scope?: string) => MemoizedSelector<StateWithProduct, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSelectedProductFactory",
    "namespace": "ProductSelectors",
    "type": "(code: string, scope?: string) => MemoizedSelector<StateWithProduct, Product>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSelectedProductLoadingFactory",
    "namespace": "ProductSelectors",
    "type": "(code: string, scope?: string) => MemoizedSelector<StateWithProduct, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSelectedProductReferencesFactory",
    "namespace": "ProductSelectors",
    "type": "(productCode: string, referenceType: string) => MemoizedSelector<StateWithProduct, ProductReference[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSelectedProductReviewsFactory",
    "namespace": "ProductSelectors",
    "type": "(productCode: any) => MemoizedSelector<StateWithProduct, Review[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSelectedProductStateFactory",
    "namespace": "ProductSelectors",
    "type": "(code: string, scope?: string) => MemoizedSelector<StateWithProduct, StateUtils.LoaderState<Product>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSelectedProductSuccessFactory",
    "namespace": "ProductSelectors",
    "type": "(code: string, scope?: string) => MemoizedSelector<StateWithProduct, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithProduct>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "productLoading",
            "type": "ProductLoadingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductLoadingService:class",
            "shortType": "ProductLoadingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scopes",
            "type": "(ProductScope | string)[] | ProductScope | string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product>"
      },
      {
        "kind": "Method",
        "name": "hasError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "ProductScope | string",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ProductScope:enum",
            "shortType": "ProductScope",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLoading",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "ProductScope | string",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ProductScope:enum",
            "shortType": "ProductScope",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scope",
            "type": "ProductScope | string",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ProductScope:enum",
            "shortType": "ProductScope",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "productLoading",
        "type": "ProductLoadingService"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithProduct>" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductsSearchState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "auxResults",
        "type": "ProductSearchPage"
      },
      {
        "kind": "PropertySignature",
        "name": "results",
        "type": "ProductSearchPage"
      },
      {
        "kind": "PropertySignature",
        "name": "suggestions",
        "type": "Suggestion[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProductsState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "details",
        "type": "EntityScopedLoaderState<Product>"
      },
      {
        "kind": "PropertySignature",
        "name": "references",
        "type": "ProductReferencesState"
      },
      {
        "kind": "PropertySignature",
        "name": "reviews",
        "type": "ProductReviewsState"
      },
      {
        "kind": "PropertySignature",
        "name": "search",
        "type": "ProductsSearchState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProductURLPipe",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "semanticPath",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "any[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Promotion",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "couldFireMessages",
        "type": "string[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "enabled", "type": "boolean" },
      { "kind": "PropertySignature", "name": "endDate", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "firedMessages",
        "type": "string[]"
      },
      { "kind": "PropertySignature", "name": "priority", "type": "number" },
      { "kind": "PropertySignature", "name": "productBanner", "type": "Image" },
      {
        "kind": "PropertySignature",
        "name": "promotionGroup",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "promotionType",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "restrictions",
        "type": "PromotionRestriction[]"
      },
      { "kind": "PropertySignature", "name": "startDate", "type": "Date" },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "PromotionLocation",
    "members": ["ActiveCart", "Checkout", "Order", "SavedCart", "SaveForLater"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionOrderEntryConsumed",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "adjustedUnitPrice",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "orderEntryNumber",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionRestriction",
    "members": [
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "restrictionType",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "PromotionResult",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "consumedEntries",
        "type": "PromotionOrderEntryConsumed[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "promotion", "type": "Promotion" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProtectedRoutesGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "ProtectedRoutesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProtectedRoutesService:class",
            "shortType": "ProtectedRoutesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authGuard",
            "type": "AuthGuard",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthGuard:class",
            "shortType": "AuthGuard",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authGuard", "type": "AuthGuard" },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "ProtectedRoutesService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProtectedRoutesService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "RoutingConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingConfig:class",
            "shortType": "RoutingConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "urlParsingService",
            "type": "UrlParsingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlParsingService:class",
            "shortType": "UrlParsingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "RoutingConfig" },
      {
        "kind": "Method",
        "name": "getNonProtectedPaths",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "getSegments",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "isUrlProtected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "urlSegments",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "matchAnyPath",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "urlSegments",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pathsSegments",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "matchPath",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "urlSegments",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pathSegments",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "routingConfig",
        "type": "RoutingConfig['routing']"
      },
      { "kind": "Property", "name": "shouldProtect", "type": "boolean" },
      {
        "kind": "Property",
        "name": "urlParsingService",
        "type": "UrlParsingService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "provideConfig",
    "parameters": [
      {
        "name": "config",
        "type": "Config",
        "isOptional": true,
        "canonicalReference": "@spartacus/core!Config:class",
        "shortType": "Config",
        "importPath": "@spartacus/core"
      },
      {
        "name": "defaultConfig",
        "type": "boolean",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "ValueProvider"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "provideConfigFactory",
    "parameters": [
      {
        "name": "configFactory",
        "type": "Function",
        "isOptional": false,
        "canonicalReference": "!Function:interface",
        "shortType": "Function",
        "importPath": ""
      },
      {
        "name": "deps",
        "type": "any[]",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "defaultConfig",
        "type": "boolean",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "FactoryProvider"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "provideConfigFromMetaTags",
    "parameters": [],
    "returnType": "Provider[]"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "provideConfigValidator",
    "parameters": [
      {
        "name": "configValidator",
        "type": "ConfigValidator",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ConfigValidator:type",
        "shortType": "ConfigValidator",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "Provider"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "provideDefaultConfig",
    "parameters": [
      {
        "name": "config",
        "type": "Config",
        "isOptional": true,
        "canonicalReference": "@spartacus/core!Config:class",
        "shortType": "Config",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "ValueProvider"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "provideDefaultConfigFactory",
    "parameters": [
      {
        "name": "configFactory",
        "type": "Function",
        "isOptional": false,
        "canonicalReference": "!Function:interface",
        "shortType": "Function",
        "importPath": ""
      },
      {
        "name": "deps",
        "type": "any[]",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "FactoryProvider"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Query",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "P",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T | undefined>"
      },
      {
        "kind": "MethodSignature",
        "name": "getState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "P",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<QueryState<T>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "QueryNotifier",
    "members": ["Observable", "<unknown> | ", "Type", "<", "CxEvent", ">"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "QueryService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "loaderFactory",
            "type": "() => Observable<T>",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "{\n        reloadOn?: QueryNotifier[];\n        resetOn?: QueryNotifier[];\n    }",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Query<T>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "getTriggersStream",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "triggers",
            "type": "QueryNotifier[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!QueryNotifier:type",
            "shortType": "QueryNotifier",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "QueryState",
    "members": [
      { "kind": "PropertySignature", "name": "data", "type": "T | undefined" },
      { "kind": "PropertySignature", "name": "error", "type": "false | Error" },
      { "kind": "PropertySignature", "name": "loading", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "recurrencePeriod",
    "type": "{\n    DAILY: string;\n    WEEKLY: string;\n    MONTHLY: string;\n}"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REGION_NORMALIZER",
    "type": "InjectionToken<Converter<any, Region>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Region",
    "members": [
      { "kind": "PropertySignature", "name": "countryIso", "type": "string" },
      { "kind": "PropertySignature", "name": "isocode", "type": "string" },
      { "kind": "PropertySignature", "name": "isocodeShort", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REGIONS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RegionsState",
    "members": [
      { "kind": "PropertySignature", "name": "country", "type": "string" },
      { "kind": "PropertySignature", "name": "entities", "type": "Region[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REGISTER_USER_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_PRODUCT_INTERESTS_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_HISTORY_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReplenishmentOrderList>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReplenishmentOrder>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReplenishmentOrder",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "appliedOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "appliedVouchers",
        "type": "Voucher[]"
      },
      { "kind": "PropertySignature", "name": "calculated", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "CostCenter"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "deliveryItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryMode",
        "type": "DeliveryMode"
      },
      {
        "kind": "PropertySignature",
        "name": "deliveryOrderGroups",
        "type": "DeliveryOrderEntryGroup[]"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "entries",
        "type": "OrderEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "expirationTime",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "firstDate", "type": "string" },
      { "kind": "PropertySignature", "name": "guid", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "net", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "orderDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentInfo",
        "type": "PaymentDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentStatus",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "paymentType",
        "type": "PaymentType"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupItemsQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "pickupOrderGroups",
        "type": "PickupOrderEntryGroup[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialOrderPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "potentialProductPromotions",
        "type": "PromotionResult[]"
      },
      {
        "kind": "PropertySignature",
        "name": "productDiscounts",
        "type": "Price"
      },
      {
        "kind": "PropertySignature",
        "name": "purchaseOrderNumber",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrderCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "savedBy", "type": "Principal" },
      { "kind": "PropertySignature", "name": "saveTime", "type": "string" },
      { "kind": "PropertySignature", "name": "site", "type": "string" },
      { "kind": "PropertySignature", "name": "store", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalDiscounts",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalItems", "type": "number" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalPriceWithTax",
        "type": "Price"
      },
      { "kind": "PropertySignature", "name": "totalTax", "type": "Price" },
      {
        "kind": "PropertySignature",
        "name": "totalUnitCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "trigger", "type": "Trigger" },
      { "kind": "PropertySignature", "name": "user", "type": "Principal" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReplenishmentOrderList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrders",
        "type": "ReplenishmentOrder[]"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "RequiredPick",
    "members": ["Omit", "<T, K> & ", "Required", "<", "Pick", "<T, K>>"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "resolveApplicable",
    "parameters": [
      {
        "name": "applicables",
        "type": "T[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "matchParams",
        "type": "any[]",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "priorityParams",
        "type": "any[]",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "T | undefined"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequest",
    "members": [
      { "kind": "PropertySignature", "name": "cancellable", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "creationTime", "type": "Date" },
      { "kind": "PropertySignature", "name": "deliveryCost", "type": "Price" },
      { "kind": "PropertySignature", "name": "order", "type": "Order" },
      {
        "kind": "PropertySignature",
        "name": "refundDeliveryCost",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "returnEntries",
        "type": "ReturnRequestEntry[]"
      },
      {
        "kind": "PropertySignature",
        "name": "returnLabelDownloadUrl",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "rma", "type": "string" },
      { "kind": "PropertySignature", "name": "status", "type": "string" },
      { "kind": "PropertySignature", "name": "subTotal", "type": "Price" },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "Price" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestEntry",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "expectedQuantity",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "orderEntry",
        "type": "OrderEntry"
      },
      { "kind": "PropertySignature", "name": "refundAmount", "type": "Price" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestEntryInputList",
    "members": [
      { "kind": "PropertySignature", "name": "orderCode", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "returnRequestEntryInputs",
        "type": "CancelOrReturnRequestEntryInput[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      {
        "kind": "PropertySignature",
        "name": "returnRequests",
        "type": "ReturnRequest[]"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ReturnRequestModification",
    "members": [
      { "kind": "PropertySignature", "name": "status", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Review",
    "members": [
      { "kind": "PropertySignature", "name": "alias", "type": "string" },
      { "kind": "PropertySignature", "name": "comment", "type": "string" },
      { "kind": "PropertySignature", "name": "date", "type": "Date" },
      { "kind": "PropertySignature", "name": "headline", "type": "string" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "principal", "type": "User" },
      { "kind": "PropertySignature", "name": "rating", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RootConfig",
    "type": "InjectionToken<any>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RouteBreadcrumbConfig",
    "members": [
      { "kind": "PropertySignature", "name": "i18n", "type": "string" },
      { "kind": "PropertySignature", "name": "raw", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RouteBreadcrumbResolver",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "RouteBreadcrumbResolverParams",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RouteBreadcrumbResolverParams:interface",
            "shortType": "RouteBreadcrumbResolverParams",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<BreadcrumbMeta[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RouteBreadcrumbResolverParams",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pageMetaConfig",
        "type": "RoutePageMetaConfig"
      },
      {
        "kind": "PropertySignature",
        "name": "route",
        "type": "ActivatedRouteSnapshot"
      },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RouteConfig",
    "members": [
      { "kind": "PropertySignature", "name": "authFlow", "type": "boolean" },
      { "kind": "PropertySignature", "name": "disabled", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "matchers",
        "type": "(UrlMatcher | InjectionToken<UrlMatcherFactory>)[]"
      },
      {
        "kind": "PropertySignature",
        "name": "paramsMapping",
        "type": "ParamsMapping"
      },
      { "kind": "PropertySignature", "name": "paths", "type": "string[]" },
      { "kind": "PropertySignature", "name": "protected", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "RouteLoadStrategy",
    "members": ["ALWAYS", "ONCE"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RoutePageMetaConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "breadcrumb",
        "type": "string | RouteBreadcrumbConfig"
      },
      { "kind": "PropertySignature", "name": "resolver", "type": "Type<any>" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RouterState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "nextState",
        "type": "ActivatedRouterStateSnapshot"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RoutesConfig",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routeName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "RouteConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ROUTING_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "RoutingActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CHANGE_NEXT_PAGE_CONTEXT",
    "namespace": "RoutingActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ChangeNextPageContext",
    "namespace": "RoutingActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PageContext" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "RoutingAction",
    "namespace": "RoutingActions",
    "members": ["ChangeNextPageContext"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RoutingConfig",
    "members": [
      {
        "kind": "Property",
        "name": "routing",
        "type": "RoutingConfigDefinition"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RoutingConfigDefinition",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "loadStrategy",
        "type": "RouteLoadStrategy"
      },
      { "kind": "PropertySignature", "name": "protected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "routes", "type": "RoutesConfig" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RoutingConfigService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "RoutingConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingConfig:class",
            "shortType": "RoutingConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "RoutingConfig" },
      {
        "kind": "Method",
        "name": "getLoadStrategy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "RouteLoadStrategy"
      },
      {
        "kind": "Method",
        "name": "getRouteConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routeName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "RouteConfig"
      },
      {
        "kind": "Method",
        "name": "getRouteName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "path",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "initRouteNamesByPath",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routeNamesByPath",
        "type": "{\n        [path: string]: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RoutingModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<RoutingModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RoutingPageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoutesService",
            "type": "ActivatedRoutesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActivatedRoutesService:class",
            "shortType": "ActivatedRoutesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoutesService",
        "type": "ActivatedRoutesService"
      },
      {
        "kind": "Method",
        "name": "getPageMetaConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshotWithPageMeta",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActivatedRouteSnapshotWithPageMeta:interface",
            "shortType": "ActivatedRouteSnapshotWithPageMeta",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "RoutePageMetaConfig"
      },
      {
        "kind": "Method",
        "name": "getResolver",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshotWithPageMeta",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActivatedRouteSnapshotWithPageMeta:interface",
            "shortType": "ActivatedRouteSnapshotWithPageMeta",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "any"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      {
        "kind": "Method",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "RoutingResolveBreadcrumbsOptions",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!RoutingResolveBreadcrumbsOptions:interface",
            "shortType": "RoutingResolveBreadcrumbsOptions",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<BreadcrumbMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveRouteBreadcrumb",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ route, resolver, url, }",
            "type": "RouteWithExtras",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RouteWithExtras:interface",
            "shortType": "RouteWithExtras",
            "importPath": ""
          }
        ],
        "returnType": "Observable<BreadcrumbMeta[]>"
      },
      {
        "kind": "Property",
        "name": "routes$",
        "type": "Observable<ActivatedRouteSnapshot[]>"
      },
      {
        "kind": "Property",
        "name": "routesWithExtras$",
        "type": "Observable<RouteWithExtras[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RoutingParamsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "activatedRoutesService",
            "type": "ActivatedRoutesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActivatedRoutesService:class",
            "shortType": "ActivatedRoutesService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoutesService",
        "type": "ActivatedRoutesService"
      },
      {
        "kind": "Method",
        "name": "findAllParam",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routes",
            "type": "ActivatedRouteSnapshot[]",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "{\n        [key: string]: string;\n    }"
      },
      {
        "kind": "Method",
        "name": "getParams",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        [key: string]: string;\n    }>"
      },
      {
        "kind": "Property",
        "name": "params$",
        "type": "Observable<{\n        [key: string]: string;\n    }>"
      },
      { "kind": "Property", "name": "router", "type": "Router" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "RoutingResolveBreadcrumbsOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "includeCurrentRoute",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "RoutingSelector"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getNextPageContext",
    "namespace": "RoutingSelector",
    "type": "MemoizedSelector<any, PageContext>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPageContext",
    "namespace": "RoutingSelector",
    "type": "MemoizedSelector<any, PageContext>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getRouterFeatureState",
    "namespace": "RoutingSelector",
    "type": "MemoizedSelector<any, State>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getRouterState",
    "namespace": "RoutingSelector",
    "type": "MemoizedSelector<any, RouterState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSemanticRoute",
    "namespace": "RoutingSelector",
    "type": "MemoizedSelector<any, string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "isNavigating",
    "namespace": "RoutingSelector",
    "type": "MemoizedSelector<any, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RoutingService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<RouterState>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingParamsService",
            "type": "RoutingParamsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingParamsService:class",
            "shortType": "RoutingParamsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "location",
            "type": "Location",
            "isOptional": false,
            "canonicalReference": "@angular/common!Location:class",
            "shortType": "Location",
            "importPath": "@angular/common"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "changeNextPageContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "forward",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getFullUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commands",
            "type": "UrlCommands",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlCommands:type",
            "shortType": "UrlCommands",
            "importPath": "@spartacus/core"
          },
          {
            "name": "extras",
            "type": "NavigationExtras",
            "isOptional": true,
            "canonicalReference": "@angular/router!NavigationExtras:interface",
            "shortType": "NavigationExtras",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getNextPageContext",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageContext>"
      },
      {
        "kind": "Method",
        "name": "getPageContext",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageContext>"
      },
      {
        "kind": "Method",
        "name": "getParams",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        [key: string]: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "getRouterState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<RouterState>"
      },
      {
        "kind": "Method",
        "name": "getUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commands",
            "type": "UrlCommands",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlCommands:type",
            "shortType": "UrlCommands",
            "importPath": "@spartacus/core"
          },
          {
            "name": "extras",
            "type": "NavigationExtras",
            "isOptional": true,
            "canonicalReference": "@angular/router!NavigationExtras:interface",
            "shortType": "NavigationExtras",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "go",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commands",
            "type": "UrlCommands",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlCommands:type",
            "shortType": "UrlCommands",
            "importPath": "@spartacus/core"
          },
          {
            "name": "extras",
            "type": "NavigationExtras",
            "isOptional": true,
            "canonicalReference": "@angular/router!NavigationExtras:interface",
            "shortType": "NavigationExtras",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "goByUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "extras",
            "type": "NavigationBehaviorOptions",
            "isOptional": true,
            "canonicalReference": "@angular/router!NavigationBehaviorOptions:interface",
            "shortType": "NavigationBehaviorOptions",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Promise<boolean>"
      },
      {
        "kind": "Method",
        "name": "isNavigating",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "location", "type": "Location" },
      {
        "kind": "Method",
        "name": "navigate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "path",
            "type": "any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "extras",
            "type": "NavigationExtras",
            "isOptional": true,
            "canonicalReference": "@angular/router!NavigationExtras:interface",
            "shortType": "NavigationExtras",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Promise<boolean>"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "routingParamsService",
        "type": "RoutingParamsService"
      },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      },
      { "kind": "Property", "name": "store", "type": "Store<RouterState>" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SAVE_CART_NORMALIZER",
    "type": "InjectionToken<Converter<any, SaveCartResult>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SaveCartAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<SaveCartResult>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SaveCartConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "SaveCartAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SaveCartAdapter:class",
            "shortType": "SaveCartAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "SaveCartAdapter" },
      {
        "kind": "Method",
        "name": "saveCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "saveCartDescription",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<SaveCartResult>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SaveCartResult",
    "members": [
      { "kind": "PropertySignature", "name": "savedCartData", "type": "Cart" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ScheduleReplenishmentForm",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "daysOfWeek",
        "type": "DaysOfWeek[]"
      },
      {
        "kind": "PropertySignature",
        "name": "nthDayOfMonth",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "numberOfDays", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "numberOfWeeks",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "recurrencePeriod",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentStartDate",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ScopedData",
    "members": [
      { "kind": "PropertySignature", "name": "data$", "type": "Observable<T>" },
      { "kind": "PropertySignature", "name": "scope", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ScopedDataWithUrl",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "scopedData",
        "type": "ScopedData<any>"
      },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ScopedProductData",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ScriptLoader",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "platformId",
            "type": "Object",
            "isOptional": false,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "document", "type": "any" },
      {
        "kind": "Method",
        "name": "embedScript",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "embedOptions",
            "type": "{\n        src: string;\n        params?: Object;\n        attributes?: Object;\n        callback?: EventListener;\n        errorCallback?: EventListener;\n        placement?: ScriptPlacement;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hasScript",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "src",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "platformId", "type": "Object" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "ScriptPlacement",
    "members": ["BODY", "HEAD"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SearchboxService",
    "members": [
      {
        "kind": "Method",
        "name": "clearResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProductSearchPage>"
      },
      {
        "kind": "Method",
        "name": "getSuggestionResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Suggestion[]>"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "searchSuggestions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SearchConfig",
    "members": [
      { "kind": "PropertySignature", "name": "currentPage", "type": "number" },
      { "kind": "PropertySignature", "name": "pageSize", "type": "number" },
      { "kind": "PropertySignature", "name": "sort", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SearchPageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productSearchService",
            "type": "ProductSearchService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductSearchService:class",
            "shortType": "ProductSearchService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "basePageMetaResolver",
            "type": "BasePageMetaResolver",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BasePageMetaResolver:class",
            "shortType": "BasePageMetaResolver",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "basePageMetaResolver",
        "type": "BasePageMetaResolver"
      },
      {
        "kind": "Property",
        "name": "productSearchService",
        "type": "ProductSearchService"
      },
      { "kind": "Property", "name": "query$", "type": "Observable<string>" },
      {
        "kind": "Method",
        "name": "resolveCanonicalUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "total$",
        "type": "Observable<number | undefined>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SearchQuery",
    "members": [
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SearchState",
    "members": [
      { "kind": "PropertySignature", "name": "query", "type": "SearchQuery" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SelectiveCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartConfigService",
            "type": "CartConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CartConfigService:class",
            "shortType": "CartConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      {
        "kind": "Property",
        "name": "cartConfigService",
        "type": "CartConfigService"
      },
      { "kind": "Property", "name": "cartId", "type": "string" },
      {
        "kind": "Property",
        "name": "cartId$",
        "type": "BehaviorSubject<string>"
      },
      {
        "kind": "Property",
        "name": "cartSelector$",
        "type": "Observable<import(\"../../state/utils/processes-loader\").ProcessesLoaderState<Cart>>"
      },
      { "kind": "Property", "name": "customerId", "type": "string" },
      {
        "kind": "Method",
        "name": "getCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderEntry>"
      },
      {
        "kind": "Method",
        "name": "isEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isEnabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isJustLoggedIn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isLoggedIn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isStable",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Property",
        "name": "PREVIOUS_USER_ID_INITIAL_VALUE",
        "type": ""
      },
      { "kind": "Property", "name": "previousUserId", "type": "string" },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectiveCart$",
        "type": "Observable<Cart>"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      {
        "kind": "Method",
        "name": "updateEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entryNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userId", "type": "string" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SemanticPathService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingConfigService",
            "type": "RoutingConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "urlParser",
            "type": "UrlParsingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlParsingService:class",
            "shortType": "UrlParsingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routeName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "ROOT_URL", "type": "string[]" },
      {
        "kind": "Property",
        "name": "routingConfigService",
        "type": "RoutingConfigService"
      },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commands",
            "type": "UrlCommands",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlCommands:type",
            "shortType": "UrlCommands",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "any[]"
      },
      { "kind": "Property", "name": "urlParser", "type": "UrlParsingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SERVER_REQUEST_ORIGIN",
    "type": "InjectionToken<string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SERVER_REQUEST_URL",
    "type": "InjectionToken<string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "serviceMapFactory",
    "parameters": [],
    "returnType": "{\n    language: typeof LanguageService;\n    currency: typeof CurrencyService;\n    baseSite: typeof BaseSiteService;\n}"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SITE_CONTEXT_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "loadBaseSite",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "siteUid",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<BaseSite | undefined>"
      },
      {
        "kind": "Method",
        "name": "loadBaseSites",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BaseSite[]>"
      },
      {
        "kind": "Method",
        "name": "loadCountries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "CountryType",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!CountryType:enum",
            "shortType": "CountryType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "loadCurrencies",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Currency[]>"
      },
      {
        "kind": "Method",
        "name": "loadLanguages",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Language[]>"
      },
      {
        "kind": "Method",
        "name": "loadRegions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "countryIsoCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Region[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "SiteAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteAdapter:class",
            "shortType": "SiteAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "SiteAdapter" },
      {
        "kind": "Method",
        "name": "getBaseSite",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "siteUid",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<BaseSite>"
      },
      {
        "kind": "Method",
        "name": "getBaseSites",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BaseSite[]>"
      },
      {
        "kind": "Method",
        "name": "getCountries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "CountryType",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!CountryType:enum",
            "shortType": "CountryType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "getCurrencies",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Currency[]>"
      },
      {
        "kind": "Method",
        "name": "getLanguages",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Language[]>"
      },
      {
        "kind": "Method",
        "name": "getRegions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "countryIsoCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Region[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SiteContext",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "MethodSignature",
        "name": "getAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<T[]>"
      },
      {
        "kind": "MethodSignature",
        "name": "setActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isocode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "SiteContextActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "BASE_SITE_CHANGE",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "BaseSiteAction",
    "namespace": "SiteContextActions",
    "members": [
      "LoadBaseSite",
      " | ",
      "LoadBaseSiteFail",
      " | ",
      "LoadBaseSiteSuccess",
      " | ",
      "LoadBaseSites",
      " | ",
      "LoadBaseSitesFail",
      " | ",
      "LoadBaseSitesSuccess",
      " | ",
      "SetActiveBaseSite",
      " | ",
      "BaseSiteChange"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "BaseSiteChange",
    "namespace": "SiteContextActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CurrenciesAction",
    "namespace": "SiteContextActions",
    "members": [
      "LoadCurrencies",
      " | ",
      "LoadCurrenciesFail",
      " | ",
      "LoadCurrenciesSuccess",
      " | ",
      "SetActiveCurrency",
      " | ",
      "CurrencyChange"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CURRENCY_CHANGE",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CurrencyChange",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        previous: string;\n        current: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        previous: string;\n        current: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LANGUAGE_CHANGE",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LanguageChange",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        previous: string;\n        current: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        previous: string;\n        current: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "LanguagesAction",
    "namespace": "SiteContextActions",
    "members": [
      "LoadLanguages",
      " | ",
      "LoadLanguagesFail",
      " | ",
      "LoadLanguagesSuccess",
      " | ",
      "SetActiveLanguage",
      " | ",
      "LanguageChange"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BASE_SITE_FAIL",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BASE_SITE_SUCCESS",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BASE_SITE",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BASE_SITES_FAIL",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BASE_SITES_SUCCESS",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BASE_SITES",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CURRENCIES_FAIL",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CURRENCIES_SUCCESS",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CURRENCIES",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_LANGUAGES_FAIL",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_LANGUAGES_SUCCESS",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_LANGUAGES",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBaseSite",
    "namespace": "SiteContextActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBaseSiteFail",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBaseSites",
    "namespace": "SiteContextActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBaseSitesFail",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBaseSitesSuccess",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "BaseSite[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BaseSite:interface",
            "shortType": "BaseSite",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "BaseSite[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBaseSiteSuccess",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "BaseSite",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BaseSite:interface",
            "shortType": "BaseSite",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "BaseSite" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCurrencies",
    "namespace": "SiteContextActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCurrenciesFail",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCurrenciesSuccess",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Currency[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Currency:interface",
            "shortType": "Currency",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Currency[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadLanguages",
    "namespace": "SiteContextActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadLanguagesFail",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadLanguagesSuccess",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Language[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Language:interface",
            "shortType": "Language",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Language[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_ACTIVE_BASE_SITE",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_ACTIVE_CURRENCY",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_ACTIVE_LANGUAGE",
    "namespace": "SiteContextActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetActiveBaseSite",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetActiveCurrency",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetActiveLanguage",
    "namespace": "SiteContextActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextConfig",
    "members": [
      {
        "kind": "Property",
        "name": "context",
        "type": "{\n        urlParameters?: string[];\n        [contextName: string]: string[] | undefined;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextConfigInitializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "javaRegExpConverter",
            "type": "JavaRegExpConverter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!JavaRegExpConverter:class",
            "shortType": "JavaRegExpConverter",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      {
        "kind": "Property",
        "name": "configFactory",
        "type": "() => Promise<SiteContextConfig>"
      },
      {
        "kind": "Method",
        "name": "getConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "BaseSite",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!BaseSite:interface",
            "shortType": "BaseSite",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "SiteContextConfig"
      },
      {
        "kind": "Property",
        "name": "javaRegExpConverter",
        "type": "JavaRegExpConverter"
      },
      {
        "kind": "Method",
        "name": "resolveConfig",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<SiteContextConfig>"
      },
      { "kind": "Property", "name": "scopes", "type": "string[]" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerSetCurrency",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerSetLanguage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_siteContextEventBuilder",
            "type": "SiteContextEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextEventBuilder:class",
            "shortType": "SiteContextEventBuilder",
            "importPath": "@spartacus/core"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "currencyService",
            "type": "CurrencyService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CurrencyService:class",
            "shortType": "CurrencyService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "activeCurr", "type": "string" },
      { "kind": "Property", "name": "activeLang", "type": "string" },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<SiteContextModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextParamsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "serviceMap",
            "type": "ContextServiceMap",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ContextServiceMap:class",
            "shortType": "ContextServiceMap",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getContextParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "getParamDefaultValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "param",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getParamValues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "param",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "getSiteContextService",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "param",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "SiteContext<any> | undefined"
      },
      {
        "kind": "Method",
        "name": "getUrlEncodingParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "getValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "param",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getValues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Array<string>>"
      },
      {
        "kind": "Method",
        "name": "setValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "param",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "SiteContextSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getActiveBaseSite",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getActiveCurrency",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getActiveLanguage",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAllBaseSites",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, BaseSite[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAllCurrencies",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, Currency[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAllLanguages",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, Language[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getBaseSiteData",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, BaseSite>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getBaseSitesEntities",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, BaseSiteEntities>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getBaseSiteState",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, BaseSiteState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCurrenciesEntities",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, CurrencyEntities>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCurrenciesState",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, CurrenciesState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getLanguagesEntities",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, LanguagesEntities>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getLanguagesState",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, LanguagesState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getSiteContextState",
    "namespace": "SiteContextSelectors",
    "type": "MemoizedSelector<StateWithSiteContext, SiteContextState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SiteContextState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "baseSite",
        "type": "BaseSiteState"
      },
      {
        "kind": "PropertySignature",
        "name": "currencies",
        "type": "CurrenciesState"
      },
      {
        "kind": "PropertySignature",
        "name": "languages",
        "type": "LanguagesState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SiteContextUrlParams",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SiteContextUrlSerializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "siteContextParams",
            "type": "SiteContextParamsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextParamsService:class",
            "shortType": "SiteContextParamsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "hasContextInRoutes", "type": "boolean" },
      {
        "kind": "Method",
        "name": "parse",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "UrlTreeWithSiteContext"
      },
      {
        "kind": "Method",
        "name": "serialize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tree",
            "type": "UrlTreeWithSiteContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlTreeWithSiteContext:interface",
            "shortType": "UrlTreeWithSiteContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "URL_SPLIT", "type": "RegExp" },
      {
        "kind": "Property",
        "name": "urlEncodingParameters",
        "type": "string[]"
      },
      {
        "kind": "Method",
        "name": "urlExtractContextParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "{\n        url: string;\n        params: SiteContextUrlParams;\n    }"
      },
      {
        "kind": "Method",
        "name": "urlIncludeContextParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SiteContextUrlParams",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextUrlParams:interface",
            "shortType": "SiteContextUrlParams",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "urlTreeExtractContextParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "urlTree",
            "type": "UrlTreeWithSiteContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlTreeWithSiteContext:interface",
            "shortType": "UrlTreeWithSiteContext",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "SiteContextUrlParams"
      },
      {
        "kind": "Method",
        "name": "urlTreeIncludeContextParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "urlTree",
            "type": "UrlTreeWithSiteContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlTreeWithSiteContext:interface",
            "shortType": "UrlTreeWithSiteContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "params",
            "type": "SiteContextUrlParams",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SiteContextUrlParams:interface",
            "shortType": "SiteContextUrlParams",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SlotDecorator",
    "members": [
      {
        "kind": "Method",
        "name": "decorate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "Element",
            "isOptional": false,
            "canonicalReference": "!Element:interface",
            "shortType": "Element",
            "importPath": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "slot",
            "type": "ContentSlotData",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!ContentSlotData:interface",
            "shortType": "ContentSlotData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SMART_EDIT_CONTEXT",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SortModel",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SpecialOpeningDay",
    "members": [
      { "kind": "PropertySignature", "name": "closed", "type": "boolean" },
      { "kind": "PropertySignature", "name": "closingTime", "type": "Time" },
      { "kind": "PropertySignature", "name": "comment", "type": "string" },
      { "kind": "PropertySignature", "name": "date", "type": "Date" },
      {
        "kind": "PropertySignature",
        "name": "formattedDate",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "openingTime", "type": "Time" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SpellingSuggestion",
    "members": [
      { "kind": "PropertySignature", "name": "query", "type": "string" },
      { "kind": "PropertySignature", "name": "suggestion", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StandardCmsComponentConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "BannerComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "BreadcrumbComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "CategoryNavigationComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "CMSLinkComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "CMSParagraphComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "CMSSiteContextComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "CMSTabParagraphComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "FooterNavigationComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "LoginComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "MiniCartComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "NavigationComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "ProductAddToCartComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "ProductCarouselComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "ProductReferencesComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "SearchBoxComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "SimpleBannerComponent",
        "type": "CmsComponentMapping"
      },
      {
        "kind": "PropertySignature",
        "name": "SimpleResponsiveBannerComponent",
        "type": "CmsComponentMapping"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "State",
    "members": [
      { "kind": "PropertySignature", "name": "router", "type": "RouterState" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "StateConfig",
    "members": [
      {
        "kind": "Property",
        "name": "state",
        "type": "{\n        ssrTransfer?: {\n            keys?: {\n                [key: string]: StateTransferType;\n            };\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "StateEventService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "createEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "action",
            "type": "{\n        type: string;\n        payload?: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "eventType",
            "type": "Type<T>",
            "isOptional": false,
            "canonicalReference": "@angular/core!Type:interface",
            "shortType": "Type",
            "importPath": "@angular/core"
          },
          {
            "name": "factory",
            "type": "(action: any) => T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "T"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "getFromAction",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapping",
            "type": "ActionToEventMapping<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActionToEventMapping:interface",
            "shortType": "ActionToEventMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapping",
            "type": "ActionToEventMapping<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ActionToEventMapping:interface",
            "shortType": "ActionToEventMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "() => void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "StateModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<StateModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "StatePersistenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "generateKeyWithContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "string | Array<string>",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "readStateFromStorage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ key, context, storageType, }",
            "type": "{\n        key: string;\n        context?: string | Array<string>;\n        storageType?: StorageSyncType;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "T | undefined"
      },
      {
        "kind": "Method",
        "name": "syncWithStorage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ key, state$, context$, storageType, onRead, }",
            "type": "{\n        key: string;\n        state$: Observable<T>;\n        context$?: Observable<string | Array<string>>;\n        storageType?: StorageSyncType;\n        onRead?: (stateFromStorage: T | undefined) => void;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Subscription"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "StateTransferType",
    "members": ["TRANSFER_STATE"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "StateUtils"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "denormalizeCustomB2BSearch",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "list",
        "type": "EntityLoaderState<ListModel>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityLoaderState:type",
        "shortType": "EntityLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "entities",
        "type": "EntityLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityLoaderState:type",
        "shortType": "EntityLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "params",
        "type": "SearchConfig",
        "isOptional": true,
        "canonicalReference": "@spartacus/core!SearchConfig:interface",
        "shortType": "SearchConfig",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "LoaderState<EntitiesModel<T>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "denormalizeSearch",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityListState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityListState:interface",
        "shortType": "EntityListState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "params",
        "type": "SearchConfig",
        "isOptional": true,
        "canonicalReference": "@spartacus/core!SearchConfig:interface",
        "shortType": "SearchConfig",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "LoaderState<EntitiesModel<T>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_FAIL_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_LOAD_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_PROCESSES_DECREMENT_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_PROCESSES_INCREMENT_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_PROCESSES_LOADER_RESET_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_REMOVE_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_REMOVE_ALL_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_RESET_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ENTITY_SUCCESS_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityAction",
    "namespace": "StateUtils",
    "members": [
      { "kind": "PropertySignature", "name": "meta", "type": "EntityMeta" },
      { "kind": "PropertySignature", "name": "payload", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityErrorSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityLoaderState:type",
        "shortType": "EntityLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntityFailAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "id",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "error",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "EntityLoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityFailMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "error",
        "type": "any",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityHasPendingProcessesSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityProcessesLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityProcessesLoaderState:type",
        "shortType": "EntityProcessesLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityIsStableSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityProcessesLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityProcessesLoaderState:type",
        "shortType": "EntityProcessesLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityListState",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "EntityLoaderState<Type>"
      },
      {
        "kind": "PropertySignature",
        "name": "list",
        "type": "EntityLoaderState<ListModel>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntityLoadAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "id",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "EntityLoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityLoaderAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "meta",
        "type": "EntityLoaderMeta"
      },
      { "kind": "PropertySignature", "name": "payload", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityLoaderMeta",
    "namespace": "StateUtils",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityLoaderReducer",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "reducer",
        "type": "(state: T, action: LoaderAction) => T",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "(state: EntityLoaderState<T>, action: EntityLoaderAction) => EntityLoaderState<T>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntityLoaderResetAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "id",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "EntityLoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "EntityLoaderState",
    "namespace": "StateUtils",
    "members": ["EntityState", "<", "LoaderState", "<T>>"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityLoaderStateSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityLoaderState:type",
        "shortType": "EntityLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "LoaderState<T>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityLoadingSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityLoaderState:type",
        "shortType": "EntityLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityLoadMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "type",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityMeta",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entityId",
        "type": "string | string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "entityRemove",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "entityType", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntityProcessesDecrementAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "id",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "meta",
        "type": "EntityProcessesLoaderMeta"
      },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityProcessesDecrementMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityProcessesLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntityProcessesIncrementAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "id",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "meta",
        "type": "EntityProcessesLoaderMeta"
      },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityProcessesIncrementMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityProcessesLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityProcessesLoaderAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "meta",
        "type": "EntityProcessesLoaderMeta"
      },
      { "kind": "PropertySignature", "name": "payload", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityProcessesLoaderMeta",
    "namespace": "StateUtils",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityProcessesLoaderReducer",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "reducer",
        "type": "(state: T, action: ProcessesLoaderAction) => T",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "(state: EntityProcessesLoaderState<T>, action: EntityProcessesLoaderAction) => EntityProcessesLoaderState<T>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntityProcessesLoaderResetAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "id",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "meta",
        "type": "EntityProcessesLoaderMeta"
      },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityProcessesLoaderResetMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityProcessesLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "EntityProcessesLoaderState",
    "namespace": "StateUtils",
    "members": ["EntityState", "<", "ProcessesLoaderState", "<T>>"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityProcessesLoaderStateSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityProcessesLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityProcessesLoaderState:type",
        "shortType": "EntityProcessesLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "ProcessesLoaderState<T>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityReducer",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "reducer",
        "type": "(state: T, action: Action) => T",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "(state: EntityState<T>, action: EntityAction) => EntityState<T>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntityRemoveAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "id",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "EntityMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntityRemoveAllAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "EntityMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityRemoveAllMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "type",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityRemoveMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "type",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityResetMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entitySelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityState:interface",
        "shortType": "EntityState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "T"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "EntityState",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "{\n        [id: string]: T;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "EntitySuccessAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "id",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "payload",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "EntityLoaderMeta" },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entitySuccessMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "id",
        "type": "string | string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "EntityLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entitySuccessSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityLoaderState:type",
        "shortType": "EntityLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "entityValueSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "EntityLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntityLoaderState:type",
        "shortType": "EntityLoaderState",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "T"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "failMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "error",
        "type": "any",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "LoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "getStateSlice",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "keys",
        "type": "string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "excludeKeys",
        "type": "string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "state",
        "type": "T",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "E"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "hasPendingProcessesSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "ProcessesLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ProcessesLoaderState:interface",
        "shortType": "ProcessesLoaderState",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "initialEntityState",
    "namespace": "StateUtils",
    "type": "EntityState<any>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "initialLoaderState",
    "namespace": "StateUtils",
    "type": "LoaderState<any>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "initialProcessesState",
    "namespace": "StateUtils",
    "type": "ProcessesLoaderState<any>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "isStableSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "ProcessesLoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ProcessesLoaderState:interface",
        "shortType": "ProcessesLoaderState",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOADER_FAIL_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOADER_LOAD_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOADER_RESET_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOADER_SUCCESS_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "LoaderAction",
    "namespace": "StateUtils",
    "members": [
      { "kind": "PropertySignature", "name": "meta", "type": "LoaderMeta" },
      { "kind": "PropertySignature", "name": "payload", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "loaderErrorSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "LoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!LoaderState:interface",
        "shortType": "LoaderState",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoaderFailAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "error",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "LoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoaderLoadAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "LoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "loaderLoadingSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "LoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!LoaderState:interface",
        "shortType": "LoaderState",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "LoaderMeta",
    "namespace": "StateUtils",
    "members": [
      { "kind": "PropertySignature", "name": "entityType", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "loader",
        "type": "{\n        load?: boolean;\n        error?: any;\n        success?: boolean;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "loaderReducer",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "reducer",
        "type": "(state: T, action: Action | V) => T",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "(state: LoaderState<T> | undefined, action: LoaderAction) => LoaderState<T>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoaderResetAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "LoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "LoaderState",
    "namespace": "StateUtils",
    "members": [
      { "kind": "PropertySignature", "name": "error", "type": "boolean" },
      { "kind": "PropertySignature", "name": "loading", "type": "boolean" },
      { "kind": "PropertySignature", "name": "success", "type": "boolean" },
      { "kind": "PropertySignature", "name": "value", "type": "T" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoaderSuccessAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "LoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "loaderSuccessSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "LoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!LoaderState:interface",
        "shortType": "LoaderState",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "loaderValueSelector",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "state",
        "type": "LoaderState<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!LoaderState:interface",
        "shortType": "LoaderState",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "T"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "loadMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "LoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "normalizeListPage",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "list",
        "type": "EntitiesModel<T>",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!EntitiesModel:interface",
        "shortType": "EntitiesModel",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "{\n    values: T[];\n    page: ListModel;\n}"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PROCESSES_DECREMENT_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PROCESSES_INCREMENT_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "PROCESSES_LOADER_RESET_ACTION",
    "namespace": "StateUtils",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProcessesDecrementAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "ProcessesLoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "processesDecrementMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "ProcessesLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProcessesIncrementAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "ProcessesLoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "processesIncrementMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "ProcessesLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProcessesLoaderAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "meta",
        "type": "ProcessesLoaderMeta"
      },
      { "kind": "PropertySignature", "name": "payload", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProcessesLoaderMeta",
    "namespace": "StateUtils",
    "members": [
      { "kind": "PropertySignature", "name": "entityType", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "processesCountDiff",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "processesLoaderReducer",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "reducer",
        "type": "(state: T, action: Action) => T",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "(state: ProcessesLoaderState<T>, action: ProcessesLoaderAction) => ProcessesLoaderState<T>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ProcessesLoaderResetAction",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entityType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "meta", "type": "ProcessesLoaderMeta" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "processesLoaderResetMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "ProcessesLoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "ProcessesLoaderState",
    "namespace": "StateUtils",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "processesCount",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "resetMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "LoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "serializeParams",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "params",
        "type": "string | string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "searchConfig",
        "type": "SearchConfig",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!SearchConfig:interface",
        "shortType": "SearchConfig",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "string"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "serializeSearchConfig",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "config",
        "type": "SearchConfig",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!SearchConfig:interface",
        "shortType": "SearchConfig",
        "importPath": "@spartacus/core"
      },
      {
        "name": "id",
        "type": "string",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "string"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "successMeta",
    "namespace": "StateUtils",
    "parameters": [
      {
        "name": "entityType",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "LoaderMeta"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithAnonymousConsents",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "\"anonymous-consents\"",
        "type": "AnonymousConsentsState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithClientAuth",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "\"client-auth\"",
        "type": "ClientAuthState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithCms",
    "members": [
      { "kind": "PropertySignature", "name": "cms", "type": "CmsState" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithGlobalMessage",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "\"global-message\"",
        "type": "GlobalMessageState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithMultiCart",
    "members": [
      { "kind": "PropertySignature", "name": "cart", "type": "MultiCartState" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithProcess",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "process",
        "type": "EntityLoaderState<T>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithProduct",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "product",
        "type": "ProductsState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithSiteContext",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "siteContext",
        "type": "SiteContextState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "StateWithUser",
    "members": [
      { "kind": "PropertySignature", "name": "user", "type": "UserState" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Stock",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "isValueRounded",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "stockLevel", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "stockLevelStatus",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "StorageSyncType",
    "members": ["LOCAL_STORAGE", "NO_STORAGE", "SESSION_STORAGE"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "StringTemplate",
    "members": [
      {
        "kind": "Method",
        "name": "resolve",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateString",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "templateVariables",
            "type": "Object",
            "isOptional": false,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          },
          {
            "name": "encodeVariable",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Suggestion",
    "members": [
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "SyncedAnonymousConsentsState",
    "members": ["Partial", "<", "AnonymousConsentsState", ">"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "SyncedAuthState",
    "members": [
      { "kind": "PropertySignature", "name": "redirectUrl", "type": "string" },
      { "kind": "PropertySignature", "name": "token", "type": "AuthToken" },
      { "kind": "PropertySignature", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "TestConfigModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "TestConfigModuleOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!TestConfigModuleOptions:interface",
            "shortType": "TestConfigModuleOptions",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ModuleWithProviders<TestConfigModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "TestConfigModuleOptions",
    "members": [
      { "kind": "PropertySignature", "name": "cookie", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "THEME_CONTEXT_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Time",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "formattedHour",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "hour", "type": "number" },
      { "kind": "PropertySignature", "name": "minute", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "TimeUtils",
    "members": [
      {
        "kind": "Method",
        "name": "convertDatetimeToDate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "datetime",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "convertDateToDatetime",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "endOfDay",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLocalTimezoneOffset",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "invert",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Title",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "TokenRevocationInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authStorageService",
            "type": "AuthStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthStorageService:class",
            "shortType": "AuthStorageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authConfigService",
            "type": "AuthConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthConfigService:class",
            "shortType": "AuthConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authConfigService",
        "type": "AuthConfigService"
      },
      {
        "kind": "Property",
        "name": "authStorageService",
        "type": "AuthStorageService"
      },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      },
      {
        "kind": "Method",
        "name": "isTokenRevocationRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Translatable",
    "members": [
      { "kind": "PropertySignature", "name": "key", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "params",
        "type": "TranslatableParams"
      },
      { "kind": "PropertySignature", "name": "raw", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "TranslatableParams",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "param",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "TranslatePipe",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "service", "type": "TranslationService" },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "input",
            "type": "Translatable | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Translatable:interface",
            "shortType": "Translatable",
            "importPath": "@spartacus/core"
          },
          {
            "name": "options",
            "type": "TranslatableParams",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!TranslatableParams:interface",
            "shortType": "TranslatableParams",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "TranslationChunksConfig",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "chunk",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "TranslationChunkService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "I18nConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!I18nConfig:class",
            "shortType": "I18nConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "chunks",
        "type": "{\n        [key: string]: string;\n    }"
      },
      { "kind": "Property", "name": "config", "type": "I18nConfig" },
      {
        "kind": "Property",
        "name": "duplicates",
        "type": "{\n        [key: string]: string[];\n    }"
      },
      {
        "kind": "Method",
        "name": "getChunkNameForKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "KEY_SEPARATOR", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "TranslationResources",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lang",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "{\n        [chunkName: string]: {\n            [key: string]: any;\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "TranslationService",
    "members": [
      {
        "kind": "Property",
        "name": "loadChunks",
        "type": "(chunkNames: string | string[]) => Promise<any>"
      },
      {
        "kind": "Property",
        "name": "translate",
        "type": "(key: string, options?: any, whitespaceUntilLoaded?: boolean) => Observable<string>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Trigger",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "activationTime",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "displayTimeTable",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UnifiedInjector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "rootInjector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "lazyModules",
            "type": "LazyModulesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!LazyModulesService:class",
            "shortType": "LazyModulesService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "Type<T> | InjectionToken<T> | AbstractType<T>",
            "isOptional": false,
            "canonicalReference": "@angular/core!Type:interface",
            "shortType": "Type",
            "importPath": "@angular/core"
          },
          {
            "name": "notFoundValue",
            "type": "T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Method",
        "name": "getMulti",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "Type<T> | InjectionToken<T> | AbstractType<T>",
            "isOptional": false,
            "canonicalReference": "@angular/core!Type:interface",
            "shortType": "Type",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<T[]>"
      },
      {
        "kind": "Method",
        "name": "getMulti",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "token",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Property",
        "name": "injectors$",
        "type": "Observable<Injector>"
      },
      {
        "kind": "Property",
        "name": "lazyModules",
        "type": "LazyModulesService"
      },
      { "kind": "Property", "name": "rootInjector", "type": "Injector" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "uniteLatest",
    "parameters": [
      {
        "name": "sources",
        "type": "R",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "Observable<ReturnTypes<R>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UnknownErrorHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "errorResponse",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_errorResponse",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UPDATE_NOTIFICATION_PREFERENCES_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UpdateUserAddressEvent",
    "members": [
      { "kind": "Property", "name": "address", "type": "Address" },
      { "kind": "Property", "name": "addressId", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UrlCommand",
    "members": ["UrlCommandRoute", " | any"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "UrlCommandRoute",
    "members": [
      { "kind": "PropertySignature", "name": "cxRoute", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "params",
        "type": "{\n        [param: string]: any;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UrlCommands",
    "members": ["UrlCommand", " | ", "UrlCommand", "[]"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UrlMatcherFactory",
    "members": ["(route: ", "Route", ") => ", "UrlMatcher"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UrlMatcherService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "globService",
            "type": "GlobService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!GlobService:class",
            "shortType": "GlobService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getCombined",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "matchers",
            "type": "UrlMatcher[]",
            "isOptional": false,
            "canonicalReference": "@angular/router!UrlMatcher:type",
            "shortType": "UrlMatcher",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "UrlMatcher"
      },
      {
        "kind": "Method",
        "name": "getFalsy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "UrlMatcher"
      },
      {
        "kind": "Method",
        "name": "getFromGlob",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "globPatterns",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "UrlMatcher"
      },
      {
        "kind": "Method",
        "name": "getFromPath",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "path",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "UrlMatcher"
      },
      {
        "kind": "Method",
        "name": "getFromPaths",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paths",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "UrlMatcher"
      },
      {
        "kind": "Method",
        "name": "getOpposite",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "originalMatcher",
            "type": "UrlMatcher",
            "isOptional": false,
            "canonicalReference": "@angular/router!UrlMatcher:type",
            "shortType": "UrlMatcher",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "UrlMatcher"
      },
      { "kind": "Property", "name": "globService", "type": "GlobService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UrlModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UrlParsingService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getPrimarySegments",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "matchPath",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "urlSegments",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pathSegments",
            "type": "string | string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "urlPathJoin",
    "parameters": [
      {
        "name": "parts",
        "type": "string[]",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "string"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UrlPipe",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "urlService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commands",
            "type": "UrlCommands",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UrlCommands:type",
            "shortType": "UrlCommands",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "any[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "UrlTreeWithSiteContext",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "siteContext",
        "type": "SiteContextUrlParams"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USE_CLIENT_TOKEN",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USE_CUSTOMER_SUPPORT_AGENT_TOKEN",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_ADDRESSES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_CONSENTS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_COST_CENTERS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_ORDER_DETAILS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_ORDERS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_PAYMENT_METHODS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_REPLENISHMENT_ORDER_DETAILS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_REPLENISHMENT_ORDERS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_RETURN_REQUEST_DETAILS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "USER_RETURN_REQUESTS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "User",
    "members": [
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      { "kind": "PropertySignature", "name": "customerId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "deactivationDate",
        "type": "Date"
      },
      {
        "kind": "PropertySignature",
        "name": "defaultAddress",
        "type": "Address"
      },
      { "kind": "PropertySignature", "name": "displayUid", "type": "string" },
      { "kind": "PropertySignature", "name": "firstName", "type": "string" },
      { "kind": "PropertySignature", "name": "language", "type": "Language" },
      { "kind": "PropertySignature", "name": "lastName", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "roles", "type": "string[]" },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      { "kind": "PropertySignature", "name": "titleCode", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserAccountFacadeTransitionalToken",
    "members": [
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<User | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "UserActions"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_PRODUCT_INTEREST_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_PRODUCT_INTEREST_RESET",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_PRODUCT_INTEREST_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_PRODUCT_INTEREST",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_USER_ADDRESS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_USER_ADDRESS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ADD_USER_ADDRESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddProductInterest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        productCode: string;\n        notificationType: NotificationType;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        productCode: string;\n        notificationType: NotificationType;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddProductInterestFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddProductInterestSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddUserAddress",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        address: Address;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        address: Address;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddUserAddressFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "AddUserAddressSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "BillingCountriesAction",
    "namespace": "UserActions",
    "members": [
      "LoadBillingCountries",
      " | ",
      "LoadBillingCountriesFail",
      " | ",
      "LoadBillingCountriesSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrder",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orderCode: string;\n        cancelRequestInput: CancellationRequestEntryInputList;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orderCode: string;\n        cancelRequestInput: CancellationRequestEntryInputList;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestCode: string;\n        returnRequestModification: ReturnRequestModification;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestCode: string;\n        returnRequestModification: ReturnRequestModification;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequestFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequestSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelOrderSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrder",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrderFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrderSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrder",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReplenishmentOrder" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLAIM_CUSTOMER_COUPON_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLAIM_CUSTOMER_COUPON_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLAIM_CUSTOMER_COUPON",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClaimCustomerCoupon",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        couponCode: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        couponCode: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClaimCustomerCouponFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClaimCustomerCouponSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CustomerCoupon2Customer",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CustomerCoupon2Customer:interface",
            "shortType": "CustomerCoupon2Customer",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CustomerCoupon2Customer"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_CANCEL_REPLENISHMENT_ORDER",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_CONSIGNMENT_TRACKING",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_NOTIFICATION_PREFERENCES",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_DETAILS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_RETURN_REQUEST_LIST",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_RETURN_REQUEST",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_PRODUCT_INTERESTS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_REGIONS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "ClEAR_REPLENISHMENT_ORDER_DETAILS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_USER_MISCS_DATA",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_USER_ORDERS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CLEAR_USER_REPLENISHMENT_ORDERS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearCancelReplenishmentOrder",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearConsignmentTracking",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearNotificationPreferences",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearOrderDetails",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearOrderReturnRequest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearOrderReturnRequestList",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearProductInterests",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearRegions",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearReplenishmentOrderDetails",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearUserMiscsData",
    "namespace": "UserActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearUserOrders",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ClearUserReplenishmentOrders",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ConsignmentTrackingAction",
    "namespace": "UserActions",
    "members": [
      "LoadConsignmentTracking",
      " | ",
      "LoadConsignmentTrackingFail",
      " | ",
      "LoadConsignmentTrackingSuccess",
      " | ",
      "ClearConsignmentTracking"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestInput: ReturnRequestEntryInputList;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestInput: ReturnRequestEntryInputList;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequestFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequestSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequest",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequest" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "CustomerCouponAction",
    "namespace": "UserActions",
    "members": [
      "LoadCustomerCoupons",
      " | ",
      "LoadCustomerCouponsFail",
      " | ",
      "LoadCustomerCouponsSuccess",
      " | ",
      "ResetLoadCustomerCoupons",
      " | ",
      "SubscribeCustomerCoupon",
      " | ",
      "SubscribeCustomerCouponFail",
      " | ",
      "SubscribeCustomerCouponSuccess",
      " | ",
      "ResetSubscribeCustomerCouponProcess",
      " | ",
      "UnsubscribeCustomerCoupon",
      " | ",
      "UnsubscribeCustomerCouponFail",
      " | ",
      "UnsubscribeCustomerCouponSuccess",
      " | ",
      "ResetUnsubscribeCustomerCouponProcess",
      " | ",
      "ClaimCustomerCoupon",
      " | ",
      "ClaimCustomerCouponFail",
      " | ",
      "ClaimCustomerCouponSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_USER_ADDRESS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_USER_ADDRESS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_USER_ADDRESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_USER_PAYMENT_METHOD_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_USER_PAYMENT_METHOD_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "DELETE_USER_PAYMENT_METHOD",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteUserAddress",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteUserAddressFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteUserAddressSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteUserPaymentMethod",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteUserPaymentMethodFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "DeleteUserPaymentMethodSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "DeliveryCountriesAction",
    "namespace": "UserActions",
    "members": [
      "LoadDeliveryCountries",
      " | ",
      "LoadDeliveryCountriesFail",
      " | ",
      "LoadDeliveryCountriesSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GIVE_USER_CONSENT_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GIVE_USER_CONSENT_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "GIVE_USER_CONSENT",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GiveUserConsent",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        consentTemplateId: string;\n        consentTemplateVersion: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        consentTemplateId: string;\n        consentTemplateVersion: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GiveUserConsentFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "GiveUserConsentSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consentTemplate",
            "type": "ConsentTemplate",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "consentTemplate",
        "type": "ConsentTemplate"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ACTIVE_COST_CENTERS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ACTIVE_COST_CENTERS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ACTIVE_COST_CENTERS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BILLING_COUNTRIES_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BILLING_COUNTRIES_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_BILLING_COUNTRIES",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CUSTOMER_COUPONS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CUSTOMER_COUPONS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_CUSTOMER_COUPONS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_DELIVERY_COUNTRIES_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_DELIVERY_COUNTRIES_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_DELIVERY_COUNTRIES",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_NOTIFICATION_PREFERENCES_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_NOTIFICATION_PREFERENCES_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_NOTIFICATION_PREFERENCES",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_INTERESTS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_INTERESTS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_PRODUCT_INTERESTS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REGIONS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REGIONS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REGIONS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ADDRESSES_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ADDRESSES_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ADDRESSES",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_CONSENTS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_CONSENTS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_CONSENTS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_PAYMENT_METHODS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_PAYMENT_METHODS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_PAYMENT_METHODS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadActiveCostCenters",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadActiveCostCentersFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadActiveCostCentersSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CostCenter[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CostCenter[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBillingCountries",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBillingCountriesFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadBillingCountriesSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadConsignmentTracking",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId?: string;\n        orderCode: string;\n        consignmentCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId?: string;\n        orderCode: string;\n        consignmentCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadConsignmentTrackingFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadConsignmentTrackingSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ConsignmentTracking",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConsignmentTracking:interface",
            "shortType": "ConsignmentTracking",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ConsignmentTracking" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCustomerCoupons",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize: number;\n        currentPage?: number;\n        sort?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize: number;\n        currentPage?: number;\n        sort?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCustomerCouponsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadCustomerCouponsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CustomerCouponSearchResult",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CustomerCouponSearchResult:interface",
            "shortType": "CustomerCouponSearchResult",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CustomerCouponSearchResult"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadDeliveryCountries",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadDeliveryCountriesFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadDeliveryCountriesSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Country[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Country:interface",
            "shortType": "Country",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Country[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadNotificationPreferences",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadNotificationPreferencesFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadNotificationPreferencesSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "NotificationPreference[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!NotificationPreference:interface",
            "shortType": "NotificationPreference",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "NotificationPreference[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderDetails",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orderCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderDetailsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderDetailsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Order",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Order" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestList",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestListFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestListSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequestList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestList:interface",
            "shortType": "ReturnRequestList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequestList" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequest",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequest" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductInterests",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n        productCode?: string;\n        notificationType?: NotificationType;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n        productCode?: string;\n        notificationType?: NotificationType;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductInterestsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadProductInterestsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ProductInterestSearchResult",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductInterestSearchResult:interface",
            "shortType": "ProductInterestSearchResult",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "ProductInterestSearchResult"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadRegions",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadRegionsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadRegionsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        entities: Region[];\n        country: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        entities: Region[];\n        country: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetails",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetailsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetailsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrder",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReplenishmentOrder" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserAddresses",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserAddressesFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserAddressesSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserConsents",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserConsentsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserConsentsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ConsentTemplate[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ConsentTemplate[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserOrders",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n        replenishmentOrderCode?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n        replenishmentOrderCode?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserOrdersFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserOrdersSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "OrderHistoryList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OrderHistoryList:interface",
            "shortType": "OrderHistoryList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "OrderHistoryList" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserPaymentMethods",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserPaymentMethodsFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserPaymentMethodsSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "PaymentDetails[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "PaymentDetails[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrders",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrdersFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrdersSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrderList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReplenishmentOrderList:interface",
            "shortType": "ReplenishmentOrderList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "ReplenishmentOrderList"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "NotificationPreferenceAction",
    "namespace": "UserActions",
    "members": [
      "LoadNotificationPreferences",
      " | ",
      "LoadNotificationPreferencesFail",
      " | ",
      "LoadNotificationPreferencesSuccess",
      " | ",
      "UpdateNotificationPreferences",
      " | ",
      "UpdateNotificationPreferencesFail",
      " | ",
      "UpdateNotificationPreferencesSuccess",
      " | ",
      "ResetNotificationPreferences",
      " | ",
      "ClearNotificationPreferences"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "OrderDetailsAction",
    "namespace": "UserActions",
    "members": [
      "LoadOrderDetails",
      " | ",
      "LoadOrderDetailsFail",
      " | ",
      "LoadOrderDetailsSuccess",
      " | ",
      "ClearOrderDetails",
      " | ",
      "CancelOrder",
      " | ",
      "CancelOrderFail",
      " | ",
      "CancelOrderSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "OrderReturnRequestAction",
    "namespace": "UserActions",
    "members": [
      "CreateOrderReturnRequest",
      " | ",
      "CreateOrderReturnRequestFail",
      " | ",
      "CreateOrderReturnRequestSuccess",
      " | ",
      "LoadOrderReturnRequest",
      " | ",
      "LoadOrderReturnRequestFail",
      " | ",
      "LoadOrderReturnRequestSuccess",
      " | ",
      "CancelOrderReturnRequest",
      " | ",
      "CancelOrderReturnRequestFail",
      " | ",
      "CancelOrderReturnRequestSuccess",
      " | ",
      "LoadOrderReturnRequestList",
      " | ",
      "LoadOrderReturnRequestListFail",
      " | ",
      "LoadOrderReturnRequestListSuccess",
      " | ",
      "ClearOrderReturnRequest",
      " | ",
      "ClearOrderReturnRequestList",
      " | ",
      "ResetCancelReturnProcess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ProductInterestsAction",
    "namespace": "UserActions",
    "members": [
      "LoadProductInterests",
      " | ",
      "LoadProductInterestsFail",
      " | ",
      "LoadProductInterestsSuccess",
      " | ",
      "RemoveProductInterest",
      " | ",
      "RemoveProductInterestSuccess",
      " | ",
      "RemoveProductInterestFail",
      " | ",
      "AddProductInterest",
      " | ",
      "AddProductInterestFail",
      " | ",
      "AddProductInterestSuccess",
      " | ",
      "ResetAddInterestState",
      " | ",
      "ResetRemoveInterestState",
      " | ",
      "ClearProductInterests"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "RegionsAction",
    "namespace": "UserActions",
    "members": [
      "LoadRegions",
      " | ",
      "LoadRegionsFail",
      " | ",
      "LoadRegionsSuccess",
      " | ",
      "ClearRegions"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REGISTER_USER_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RegisterUserSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_PRODUCT_INTEREST_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_PRODUCT_INTEREST_RESET",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_PRODUCT_INTEREST_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "REMOVE_PRODUCT_INTEREST",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RemoveProductInterest",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        item: ProductInterestEntryRelation;\n        singleDelete?: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        item: ProductInterestEntryRelation;\n        singleDelete?: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RemoveProductInterestFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "RemoveProductInterestSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "ReplenishmentOrderDetailsAction",
    "namespace": "UserActions",
    "members": [
      "LoadReplenishmentOrderDetails",
      " | ",
      "LoadReplenishmentOrderDetailsSuccess",
      " | ",
      "LoadReplenishmentOrderDetailsFail",
      " | ",
      "ClearReplenishmentOrderDetails",
      " | ",
      "CancelReplenishmentOrder",
      " | ",
      "CancelReplenishmentOrderSuccess",
      " | ",
      "CancelReplenishmentOrderFail",
      " | ",
      "ClearCancelReplenishmentOrder"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_CANCEL_ORDER_PROCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_CANCEL_RETURN_PROCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_GIVE_USER_CONSENT_PROCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_LOAD_CUSTOMER_COUPONS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_LOAD_USER_CONSENTS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_NOTIFICATION_PREFERENCES",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_SUBSCRIBE_CUSTOMER_COUPON_PROCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_UNSUBSCRIBE_CUSTOMER_COUPON_PROCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "RESET_WITHDRAW_USER_CONSENT_PROCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetAddInterestState",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetCancelOrderProcess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetCancelReturnProcess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetGiveUserConsentProcess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetLoadCustomerCoupons",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetLoadUserConsents",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetNotificationPreferences",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetRemoveInterestState",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetSubscribeCustomerCouponProcess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetUnsubscribeCustomerCouponProcess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "ResetWithdrawUserConsentProcess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_DEFAULT_USER_PAYMENT_METHOD_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_DEFAULT_USER_PAYMENT_METHOD_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SET_DEFAULT_USER_PAYMENT_METHOD",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetDefaultUserPaymentMethod",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetDefaultUserPaymentMethodFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SetDefaultUserPaymentMethodSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SUBSCRIBE_CUSTOMER_COUPON_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SUBSCRIBE_CUSTOMER_COUPON_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "SUBSCRIBE_CUSTOMER_COUPON",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SubscribeCustomerCoupon",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        couponCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        couponCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SubscribeCustomerCouponFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "SubscribeCustomerCouponSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CustomerCouponNotification",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CustomerCouponNotification:interface",
            "shortType": "CustomerCouponNotification",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CustomerCouponNotification"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "TRANSFER_ANONYMOUS_CONSENT",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "TransferAnonymousConsent",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        consentTemplateId: string;\n        consentTemplateVersion: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        consentTemplateId: string;\n        consentTemplateVersion: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UNSUBSCRIBE_CUSTOMER_COUPON_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UNSUBSCRIBE_CUSTOMER_COUPON_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UNSUBSCRIBE_CUSTOMER_COUPON",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UnsubscribeCustomerCoupon",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        couponCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        couponCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UnsubscribeCustomerCouponFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UnsubscribeCustomerCouponSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UPDATE_NOTIFICATION_PREFERENCES_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UPDATE_NOTIFICATION_PREFERENCES_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UPDATE_NOTIFICATION_PREFERENCES",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UPDATE_USER_ADDRESS_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UPDATE_USER_ADDRESS_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "UPDATE_USER_ADDRESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UpdateNotificationPreferences",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        preferences: NotificationPreference[];\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        preferences: NotificationPreference[];\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UpdateNotificationPreferencesFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UpdateNotificationPreferencesSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "NotificationPreference[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!NotificationPreference:interface",
            "shortType": "NotificationPreference",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "NotificationPreference[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UpdateUserAddress",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        addressId: string;\n        address: Address;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        addressId: string;\n        address: Address;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UpdateUserAddressFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UpdateUserAddressSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserAddressesAction",
    "namespace": "UserActions",
    "members": [
      "LoadUserAddresses",
      " | ",
      "LoadUserAddressesFail",
      " | ",
      "LoadUserAddressesSuccess",
      " | ",
      "AddUserAddress",
      " | ",
      "AddUserAddressFail",
      " | ",
      "AddUserAddressSuccess",
      " | ",
      "UpdateUserAddress",
      " | ",
      "UpdateUserAddressFail",
      " | ",
      "UpdateUserAddressSuccess",
      " | ",
      "DeleteUserAddress",
      " | ",
      "DeleteUserAddressFail",
      " | ",
      "DeleteUserAddressSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserConsentsAction",
    "namespace": "UserActions",
    "members": [
      "LoadUserConsents",
      " | ",
      "LoadUserConsentsFail",
      " | ",
      "LoadUserConsentsSuccess",
      " | ",
      "ResetLoadUserConsents",
      " | ",
      "GiveUserConsent",
      " | ",
      "GiveUserConsentFail",
      " | ",
      "GiveUserConsentSuccess",
      " | ",
      "ResetGiveUserConsentProcess",
      " | ",
      "WithdrawUserConsent",
      " | ",
      "WithdrawUserConsentFail",
      " | ",
      "WithdrawUserConsentSuccess",
      " | ",
      "ResetWithdrawUserConsentProcess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserCostCenterAction",
    "namespace": "UserActions",
    "members": [
      "LoadActiveCostCenters",
      " | ",
      "LoadActiveCostCentersFail",
      " | ",
      "LoadActiveCostCentersSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserOrdersAction",
    "namespace": "UserActions",
    "members": [
      "LoadUserOrders",
      " | ",
      "LoadUserOrdersFail",
      " | ",
      "LoadUserOrdersSuccess",
      " | ",
      "ClearUserOrders"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserPaymentMethodsAction",
    "namespace": "UserActions",
    "members": [
      "LoadUserPaymentMethods",
      " | ",
      "LoadUserPaymentMethodsFail",
      " | ",
      "LoadUserPaymentMethodsSuccess",
      " | ",
      "SetDefaultUserPaymentMethod",
      " | ",
      "SetDefaultUserPaymentMethodFail",
      " | ",
      "SetDefaultUserPaymentMethodSuccess",
      " | ",
      "DeleteUserPaymentMethod",
      " | ",
      "DeleteUserPaymentMethodFail",
      " | ",
      "DeleteUserPaymentMethodSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserRegisterOrRemoveAction",
    "namespace": "UserActions",
    "members": ["RegisterUserSuccess"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "TypeAlias",
    "name": "UserReplenishmentOrdersAction",
    "namespace": "UserActions",
    "members": [
      "LoadUserReplenishmentOrders",
      " | ",
      "LoadUserReplenishmentOrdersFail",
      " | ",
      "LoadUserReplenishmentOrdersSuccess",
      " | ",
      "ClearUserReplenishmentOrders"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "WITHDRAW_USER_CONSENT_FAIL",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "WITHDRAW_USER_CONSENT_SUCCESS",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "WITHDRAW_USER_CONSENT",
    "namespace": "UserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "WithdrawUserConsent",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        consentCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        consentCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "WithdrawUserConsentFail",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "WithdrawUserConsentSuccess",
    "namespace": "UserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserAddressAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "verify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<AddressValidation>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserAddressConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserAddressAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserAddressAdapter:class",
            "shortType": "UserAddressAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "UserAddressAdapter" },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "verify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<AddressValidation>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserAddressEvent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserAddressService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userAddressConnector",
            "type": "UserAddressConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserAddressConnector:class",
            "shortType": "UserAddressConnector",
            "importPath": "@spartacus/core"
          },
          {
            "name": "command",
            "type": "CommandService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addUserAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearRegions",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      {
        "kind": "Method",
        "name": "deleteUserAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAddresses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Method",
        "name": "getAddressesLoadedSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getAddressesLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCountry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isocode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Country>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryCountries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "getRegions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "countryIsoCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Region[]>"
      },
      {
        "kind": "Method",
        "name": "loadAddresses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadDeliveryCountries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadRegions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "countryIsoCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setAddressAsDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "updateUserAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userAddressConnector",
        "type": "UserAddressConnector"
      },
      {
        "kind": "Property",
        "name": "userAddressVerificationCommand",
        "type": "Command<{\n        address: Address;\n    }, AddressValidation>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Method",
        "name": "verifyAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<AddressValidation>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserAuthEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stateEventService",
            "type": "StateEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!StateEventService:class",
            "shortType": "StateEventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "buildLogoutEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<LogoutEvent>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerLoginEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerLogoutEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "stateEventService",
        "type": "StateEventService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserAuthEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_userAuthEventBuilder",
            "type": "UserAuthEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserAuthEventBuilder:class",
            "shortType": "UserAuthEventBuilder",
            "importPath": "@spartacus/core"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserAuthModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<UserAuthModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserConsentAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "giveConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentTemplateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentTemplateVersion",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate>"
      },
      {
        "kind": "Method",
        "name": "loadConsents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Method",
        "name": "withdrawConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserConsentConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserConsentAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserConsentAdapter:class",
            "shortType": "UserConsentAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "UserConsentAdapter" },
      {
        "kind": "Method",
        "name": "giveConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentTemplateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentTemplateVersion",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate>"
      },
      {
        "kind": "Method",
        "name": "loadConsents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Method",
        "name": "withdrawConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserConsentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "filterConsentTemplates",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateList",
            "type": "ConsentTemplate[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          },
          {
            "name": "hideTemplateIds",
            "type": "string[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ConsentTemplate[]"
      },
      {
        "kind": "Method",
        "name": "getConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Consent>"
      },
      {
        "kind": "Method",
        "name": "getConsents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "loadIfMissing",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Method",
        "name": "getConsentsResultError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsentsResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsentsResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getGiveConsentResultError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getGiveConsentResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getGiveConsentResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getWithdrawConsentResultError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getWithdrawConsentResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getWithdrawConsentResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "giveConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consentTemplateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consentTemplateVersion",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isConsentGiven",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "Consent",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Consent:interface",
            "shortType": "Consent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConsentWithdrawn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "Consent",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!Consent:interface",
            "shortType": "Consent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "loadConsents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetConsentsProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetGiveConsentProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetWithdrawConsentProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Method",
        "name": "withdrawConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserCostCenterAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "loadActiveList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserCostCenterConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserCostCenterAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserCostCenterAdapter:class",
            "shortType": "UserCostCenterAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "UserCostCenterAdapter"
      },
      {
        "kind": "Method",
        "name": "getActiveList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserCostCenterService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getActiveCostCenters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CostCenter[]>"
      },
      {
        "kind": "Method",
        "name": "getCostCenterAddresses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Method",
        "name": "loadActiveCostCenters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "stateEventService",
            "type": "StateEventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!StateEventService:class",
            "shortType": "StateEventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addUserAddressEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteUserAddressEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "stateEventService",
        "type": "StateEventService"
      },
      {
        "kind": "Method",
        "name": "updateUserAddressEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_userEventBuilder",
            "type": "UserEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserEventBuilder:class",
            "shortType": "UserEventBuilder",
            "importPath": "@spartacus/core"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserIdService",
    "members": [
      {
        "kind": "Method",
        "name": "clearUserId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getUserId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "isEmulated",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "setUserId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "takeUserId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "loggedIn",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserInterestsAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "addInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "notificationType",
            "type": "NotificationType",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!NotificationType:enum",
            "shortType": "NotificationType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getInterests",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "notificationType",
            "type": "NotificationType",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!NotificationType:enum",
            "shortType": "NotificationType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ProductInterestSearchResult>"
      },
      {
        "kind": "Method",
        "name": "removeInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "item",
            "type": "ProductInterestEntryRelation",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductInterestEntryRelation:interface",
            "shortType": "ProductInterestEntryRelation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserInterestsConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserInterestsAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserInterestsAdapter:class",
            "shortType": "UserInterestsAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "UserInterestsAdapter" },
      {
        "kind": "Method",
        "name": "addInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "notificationType",
            "type": "NotificationType",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!NotificationType:enum",
            "shortType": "NotificationType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getInterests",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "notificationType",
            "type": "NotificationType",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!NotificationType:enum",
            "shortType": "NotificationType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ProductInterestSearchResult>"
      },
      {
        "kind": "Method",
        "name": "removeInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "item",
            "type": "ProductInterestEntryRelation",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductInterestEntryRelation:interface",
            "shortType": "ProductInterestEntryRelation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserInterestsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addProductInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "notificationType",
            "type": "NotificationType",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!NotificationType:enum",
            "shortType": "NotificationType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearProductInterests",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAddProductInterestError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getAddProductInterestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getAndLoadProductInterests",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductInterestSearchResult>"
      },
      {
        "kind": "Method",
        "name": "getProductInterests",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProductInterestSearchResult>"
      },
      {
        "kind": "Method",
        "name": "getProdutInterestsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRemoveProdutInterestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getRemoveProdutInterestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadProductInterests",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "productCode",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "notificationType",
            "type": "NotificationType",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!NotificationType:enum",
            "shortType": "NotificationType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeProdutInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "ProductInterestEntryRelation",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ProductInterestEntryRelation:interface",
            "shortType": "ProductInterestEntryRelation",
            "importPath": "@spartacus/core"
          },
          {
            "name": "singleDelete",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetAddInterestState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetRemoveInterestState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserNotificationPreferenceService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clearPreferences",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getEnabledPreferences",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<NotificationPreference[]>"
      },
      {
        "kind": "Method",
        "name": "getPreferences",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<NotificationPreference[]>"
      },
      {
        "kind": "Method",
        "name": "getPreferencesLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getUpdatePreferencesResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadPreferences",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetNotificationPreferences",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "updatePreferences",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "preferences",
            "type": "NotificationPreference[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!NotificationPreference:interface",
            "shortType": "NotificationPreference",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOccTransitional_4_2_Module",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOccTransitionalModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "createReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserOrderAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserOrderAdapter:class",
            "shortType": "UserOrderAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "UserOrderAdapter" },
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Method",
        "name": "return",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserOrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryListLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetCancelOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserPaymentAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentMethodID",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "loadAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PaymentDetails[]>"
      },
      {
        "kind": "Method",
        "name": "setDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentMethodID",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserPaymentConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserPaymentAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserPaymentAdapter:class",
            "shortType": "UserPaymentAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "UserPaymentAdapter" },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentMethodID",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "getAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PaymentDetails[]>"
      },
      {
        "kind": "Method",
        "name": "setDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "paymentMethodID",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserPaymentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "deletePaymentMethod",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentMethodId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAllBillingCountries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "getPaymentMethods",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PaymentDetails[]>"
      },
      {
        "kind": "Method",
        "name": "getPaymentMethodsLoadedSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getPaymentMethodsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadBillingCountries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadPaymentMethods",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setPaymentMethodAsDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentMethodId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserProfileFacadeTransitionalToken",
    "members": [
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserReplenishmentOrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserReplenishmentOrderAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserReplenishmentOrderAdapter:class",
            "shortType": "UserReplenishmentOrderAdapter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "UserReplenishmentOrderAdapter"
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserReplenishmentOrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCancelReplenishmentOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithUser | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userAccountFacade",
            "type": "UserAccountFacadeTransitionalToken",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!UserAccountFacadeTransitionalToken:class",
            "shortType": "UserAccountFacadeTransitionalToken",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userProfileFacade",
            "type": "UserProfileFacadeTransitionalToken",
            "isOptional": true,
            "canonicalReference": "@spartacus/core!UserProfileFacadeTransitionalToken:class",
            "shortType": "UserProfileFacadeTransitionalToken",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<User | undefined>"
      },
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithUser | StateWithProcess<void>>"
      },
      {
        "kind": "Property",
        "name": "userAccountFacade",
        "type": "UserAccountFacadeTransitionalToken"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Property",
        "name": "userProfileFacade",
        "type": "UserProfileFacadeTransitionalToken"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Namespace",
    "name": "UsersSelectors"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "countrySelectorFactory",
    "namespace": "UsersSelectors",
    "type": "(isocode: string) => MemoizedSelector<StateWithUser, Country>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAddresses",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, Address[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAddressesLoadedSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAddressesLoaderState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<Address[]>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAddressesLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAllBillingCountries",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, Country[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAllDeliveryCountries",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, Country[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getAllRegions",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, Region[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getBillingCountriesEntites",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, BillingCountryEntities>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getBillingCountriesState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, BillingCountriesState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsentByTemplateId",
    "namespace": "UsersSelectors",
    "type": "(templateId: string) => MemoizedSelector<StateWithUser, ConsentTemplate>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsentsError",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsentsLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsentsState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ConsentTemplate[]>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsentsSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsentsValue",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ConsentTemplate[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsignmentTracking",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ConsignmentTracking>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getConsignmentTrackingState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ConsignmentTrackingState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCostCenters",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, CostCenter[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCostCentersState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<CostCenter[]>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCustomerCoupons",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, CustomerCouponSearchResult>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCustomerCouponsLoaded",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCustomerCouponsLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getCustomerCouponsState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<CustomerCouponSearchResult>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getDeliveryCountriesEntites",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, DeliveryCountryEntities>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getDeliveryCountriesState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, DeliveryCountriesState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getEnabledPreferences",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, NotificationPreference[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getInterests",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ProductInterestSearchResult>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getInterestsLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getInterestsState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ProductInterestSearchResult>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderDetails",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, Order>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequest",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ReturnRequest>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestList",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ReturnRequestList>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestListState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ReturnRequestList>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ReturnRequest>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrders",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, OrderHistoryList>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrdersLoaded",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrdersState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<OrderHistoryList>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getOrderState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<Order>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPaymentMethods",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, PaymentDetails[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPaymentMethodsLoadedSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPaymentMethodsLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPaymentMethodsState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<PaymentDetails[]>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPreferences",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, NotificationPreference[]>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPreferencesLoaderState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<NotificationPreference[]>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getPreferencesLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getRegionsCountry",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, string>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getRegionsDataAndLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, {\n    loaded: boolean;\n    loading: boolean;\n    regions: Region[];\n    country: string;\n}>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getRegionsLoaded",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getRegionsLoaderState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<RegionsState>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getRegionsLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsError",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsValue",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ReplenishmentOrder>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrders",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, ReplenishmentOrderList>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersError",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersLoading",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ReplenishmentOrderList>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersSuccess",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, boolean>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, LoaderState<ReplenishmentOrder>>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "getUserState",
    "namespace": "UsersSelectors",
    "type": "MemoizedSelector<StateWithUser, UserState>"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "UserState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "addresses",
        "type": "StateUtils.LoaderState<Address[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "billingCountries",
        "type": "BillingCountriesState"
      },
      {
        "kind": "PropertySignature",
        "name": "consents",
        "type": "StateUtils.LoaderState<ConsentTemplate[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "consignmentTracking",
        "type": "ConsignmentTrackingState"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenters",
        "type": "StateUtils.LoaderState<CostCenter[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "countries",
        "type": "DeliveryCountriesState"
      },
      {
        "kind": "PropertySignature",
        "name": "customerCoupons",
        "type": "StateUtils.LoaderState<CustomerCouponSearchResult>"
      },
      {
        "kind": "PropertySignature",
        "name": "notificationPreferences",
        "type": "StateUtils.LoaderState<NotificationPreference[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "order",
        "type": "StateUtils.LoaderState<Order>"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturn",
        "type": "StateUtils.LoaderState<ReturnRequest>"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturnList",
        "type": "StateUtils.LoaderState<ReturnRequestList>"
      },
      {
        "kind": "PropertySignature",
        "name": "orders",
        "type": "StateUtils.LoaderState<OrderHistoryList>"
      },
      {
        "kind": "PropertySignature",
        "name": "payments",
        "type": "StateUtils.LoaderState<PaymentDetails[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "productInterests",
        "type": "StateUtils.LoaderState<ProductInterestSearchResult>"
      },
      {
        "kind": "PropertySignature",
        "name": "regions",
        "type": "StateUtils.LoaderState<RegionsState>"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrder",
        "type": "StateUtils.LoaderState<ReplenishmentOrder>"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrders",
        "type": "StateUtils.LoaderState<ReplenishmentOrderList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserTransitional_4_2_Module",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<UserTransitional_4_2_Module>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "UserTransitionalModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<UserTransitionalModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "validateConfig",
    "parameters": [
      {
        "name": "config",
        "type": "Config",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!Config:class",
        "shortType": "Config",
        "importPath": "@spartacus/core"
      },
      {
        "name": "configValidators",
        "type": "ConfigValidator[]",
        "isOptional": false,
        "canonicalReference": "@spartacus/core!ConfigValidator:type",
        "shortType": "ConfigValidator",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "void"
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantCategory",
    "members": [
      { "kind": "PropertySignature", "name": "hasImage", "type": "boolean" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "priority", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantMatrixElement",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "elements",
        "type": "VariantMatrixElement[]"
      },
      { "kind": "PropertySignature", "name": "isLeaf", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "parentVariantCategory",
        "type": "VariantCategory"
      },
      {
        "kind": "PropertySignature",
        "name": "variantOption",
        "type": "VariantOption"
      },
      {
        "kind": "PropertySignature",
        "name": "variantValueCategory",
        "type": "VariantValueCategory"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantOption",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "priceData", "type": "Price" },
      { "kind": "PropertySignature", "name": "stock", "type": "Stock" },
      { "kind": "PropertySignature", "name": "url", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "variantOptionQualifiers",
        "type": "VariantOptionQualifier[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantOptionQualifier",
    "members": [
      { "kind": "PropertySignature", "name": "image", "type": "Image" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "qualifier",
        "type": "VariantQualifier"
      },
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "VariantQualifier",
    "members": [
      "COLOR",
      "PRODUCT",
      "ROLLUP_PROPERTY",
      "SIZE",
      "STYLE",
      "THUMBNAIL"
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Enum",
    "name": "VariantType",
    "members": ["COLOR", "SIZE", "STYLE"]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "VariantValueCategory",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "sequence", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "superCategories",
        "type": "VariantCategory[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "Voucher",
    "members": [
      { "kind": "PropertySignature", "name": "appliedValue", "type": "Price" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "freeShipping",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "value", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "valueFormatted",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "valueString", "type": "string" },
      { "kind": "PropertySignature", "name": "voucherCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Interface",
    "name": "WeekdayOpeningDay",
    "members": [
      { "kind": "PropertySignature", "name": "closed", "type": "boolean" },
      { "kind": "PropertySignature", "name": "closingTime", "type": "Time" },
      { "kind": "PropertySignature", "name": "openingTime", "type": "Time" },
      { "kind": "PropertySignature", "name": "weekDay", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "WindowRef",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "platformId",
            "type": "Object",
            "isOptional": false,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          },
          {
            "name": "serverUrl",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "serverOrigin",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "document", "type": "Document" },
      {
        "kind": "Method",
        "name": "isBrowser",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "localStorage",
        "type": "Storage | undefined"
      },
      { "kind": "Property", "name": "location", "type": "Partial<Location>" },
      {
        "kind": "Property",
        "name": "nativeWindow",
        "type": "Window | undefined"
      },
      { "kind": "Property", "name": "platformId", "type": "Object" },
      { "kind": "Property", "name": "resize$", "type": "Observable<any>" },
      { "kind": "Property", "name": "serverOrigin", "type": "string" },
      { "kind": "Property", "name": "serverUrl", "type": "string" },
      {
        "kind": "Property",
        "name": "sessionStorage",
        "type": "Storage | undefined"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "WishListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithMultiCart>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createWishList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "name",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "description",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getWishList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Cart>"
      },
      {
        "kind": "Method",
        "name": "getWishListId",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getWishListLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadWishList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithMultiCart>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Class",
    "name": "WithCredentialsInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/core!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "OccConfig" },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      },
      {
        "kind": "Method",
        "name": "requiresWithCredentials",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Variable",
    "name": "WITHDRAW_CONSENT_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/core",
    "kind": "Function",
    "name": "withdrawOn",
    "parameters": [
      {
        "name": "notifier",
        "type": "Observable<any>",
        "isOptional": false,
        "canonicalReference": "rxjs!Observable:class",
        "shortType": "Observable",
        "importPath": "rxjs"
      }
    ],
    "returnType": "OperatorFunction<T, T>"
  },
  {
    "entryPoint": "@spartacus/digital-payments",
    "kind": "Class",
    "name": "DigitalPaymentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/digital-payments",
    "kind": "Class",
    "name": "DpCheckoutModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/digital-payments",
    "kind": "Class",
    "name": "DpCheckoutPaymentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "dpAdapter",
            "type": "DigitalPaymentsAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/digital-payments!DigitalPaymentsAdapter:class",
            "shortType": "DigitalPaymentsAdapter",
            "importPath": ""
          },
          {
            "name": "command",
            "type": "CommandService",
            "isOptional": false,
            "canonicalReference": "@spartacus/digital-payments!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "query",
            "type": "QueryService",
            "isOptional": false,
            "canonicalReference": "@spartacus/digital-payments!QueryService:class",
            "shortType": "QueryService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/digital-payments!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      {
        "kind": "Method",
        "name": "createPaymentDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sessionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "signature",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PaymentDetails>"
      },
      {
        "kind": "Property",
        "name": "createPaymentDetailsCommand",
        "type": "Command<{\n        sessionId: string;\n        signature: string;\n    }, PaymentDetails>"
      },
      {
        "kind": "Property",
        "name": "dpAdapter",
        "type": "DigitalPaymentsAdapter"
      },
      {
        "kind": "Method",
        "name": "getCardRegistrationDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<DpPaymentRequest | undefined>"
      },
      { "kind": "Property", "name": "query", "type": "QueryService" },
      {
        "kind": "Property",
        "name": "RequestUrlQuery",
        "type": "Query<DpPaymentRequest>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/digital-payments",
    "kind": "Interface",
    "name": "DpPaymentRequest",
    "members": [
      { "kind": "PropertySignature", "name": "sessionId", "type": "string" },
      { "kind": "PropertySignature", "name": "signature", "type": "string" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/digital-payments",
    "kind": "Variable",
    "name": "dpTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/digital-payments",
    "kind": "Variable",
    "name": "dpTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/assets",
    "kind": "Variable",
    "name": "epdVisualizationTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/assets",
    "kind": "Variable",
    "name": "epdVisualizationTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "CompactAddToCartComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "CompactAddToCartModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "EpdVisualizationComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Enum",
    "name": "NavigationMode",
    "members": ["Pan", "Turntable", "Zoom"]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Enum",
    "name": "SelectionMode_2",
    "members": ["Exclusive", "None", "Sticky"]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Interface",
    "name": "VisualizationLoadInfo",
    "members": [
      { "kind": "PropertySignature", "name": "errorMessage", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "loadStatus",
        "type": "VisualizationLoadStatus"
      },
      {
        "kind": "PropertySignature",
        "name": "lookupResult",
        "type": "VisualizationLookupResult"
      },
      {
        "kind": "PropertySignature",
        "name": "matches",
        "type": "VisualizationInfo[]"
      },
      {
        "kind": "PropertySignature",
        "name": "visualization",
        "type": "VisualizationInfo"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Enum",
    "name": "VisualizationLoadStatus",
    "members": ["Loaded", "Loading", "NotStarted", "UnexpectedError"]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Enum",
    "name": "VisualizationLookupResult",
    "members": [
      "MultipleMatchesFound",
      "NoMatchFound",
      "UnexpectedError",
      "UniqueMatchFound"
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualPickingProductFilterComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "visualPickingProductFilterService",
            "type": "VisualPickingProductFilterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!VisualPickingProductFilterService:class",
            "shortType": "VisualPickingProductFilterService",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "filter", "type": "string" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "visualPickingProductFilterService",
        "type": "VisualPickingProductFilterService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualPickingProductFilterModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualPickingProductListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "visualPickingProductListService",
            "type": "VisualPickingProductListService",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!VisualPickingProductListService:class",
            "shortType": "VisualPickingProductListService",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "activeSlideStartIndex", "type": "number" },
      {
        "kind": "Property",
        "name": "filteredItems$",
        "type": "Observable<VisualPickingProductListItem[]>"
      },
      { "kind": "Property", "name": "itemsPerSlide", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedProductCodes",
        "type": "string[]"
      },
      {
        "kind": "Property",
        "name": "selectedProductCodesChange",
        "type": "import(\"@angular/core\").EventEmitter<string[]>"
      },
      { "kind": "Property", "name": "singleSelection", "type": "boolean" },
      { "kind": "Property", "name": "title", "type": "string" },
      {
        "kind": "Property",
        "name": "visualPickingProductListService",
        "type": "VisualPickingProductListService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Interface",
    "name": "VisualPickingProductListItem",
    "members": [
      { "kind": "PropertySignature", "name": "product", "type": "Product" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualPickingProductListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualPickingTabComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "visualPickingTabService",
            "type": "VisualPickingTabService",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!VisualPickingTabService:class",
            "shortType": "VisualPickingTabService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "hideNoProductReferencesIndicator",
        "type": "boolean"
      },
      { "kind": "Property", "name": "hideProductList", "type": "boolean" },
      { "kind": "Property", "name": "hideViewport", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngAfterViewInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedProductCodes",
        "type": "string[]"
      },
      {
        "kind": "Property",
        "name": "visualPickingProductListService",
        "type": "VisualPickingProductListService"
      },
      {
        "kind": "Property",
        "name": "visualPickingTabService",
        "type": "VisualPickingTabService"
      },
      {
        "kind": "Property",
        "name": "visualViewerService",
        "type": "VisualViewerService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualPickingTabModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualViewerAnimationSliderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "visualViewerAnimationSliderService",
            "type": "VisualViewerAnimationSliderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!VisualViewerAnimationSliderService:class",
            "shortType": "VisualViewerAnimationSliderService",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      { "kind": "Property", "name": "hidden", "type": "boolean" },
      { "kind": "Property", "name": "initialized", "type": "boolean" },
      {
        "kind": "Property",
        "name": "initializedChange",
        "type": "EventEmitter<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngAfterViewInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "position", "type": "number" },
      { "kind": "Property", "name": "value", "type": "number" },
      {
        "kind": "Property",
        "name": "valueChange",
        "type": "EventEmitter<number>"
      },
      {
        "kind": "Property",
        "name": "visualViewerAnimationSliderService",
        "type": "VisualViewerAnimationSliderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualViewerAnimationSliderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualViewerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "visualViewerService",
            "type": "VisualViewerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!VisualViewerService:class",
            "shortType": "VisualViewerService",
            "importPath": "@spartacus/epd-visualization/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "activateHomeView",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "animationPlaying", "type": "boolean" },
      {
        "kind": "Property",
        "name": "animationPlayingChange",
        "type": "import(\"@angular/core\").EventEmitter<boolean>"
      },
      { "kind": "Property", "name": "animationPosition", "type": "number" },
      {
        "kind": "Property",
        "name": "animationPositionChange",
        "type": "import(\"@angular/core\").EventEmitter<number>"
      },
      { "kind": "Property", "name": "animationTime", "type": "number" },
      {
        "kind": "Property",
        "name": "animationTimeChange",
        "type": "import(\"@angular/core\").EventEmitter<number>"
      },
      {
        "kind": "Property",
        "name": "animationTotalDuration",
        "type": "number"
      },
      { "kind": "Property", "name": "backgroundBottomColor", "type": "string" },
      { "kind": "Property", "name": "backgroundTopColor", "type": "string" },
      { "kind": "Property", "name": "excludedOpacity", "type": "number" },
      { "kind": "Property", "name": "hotspotSelectionColor", "type": "string" },
      {
        "kind": "Property",
        "name": "includedProductCodes",
        "type": "string[]"
      },
      { "kind": "Property", "name": "is2D", "type": "boolean" },
      { "kind": "Property", "name": "isolateModeEnabled", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isolateModeEnabledChange",
        "type": "import(\"@angular/core\").EventEmitter<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadVisualization",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<VisualizationLoadInfo>"
      },
      {
        "kind": "Property",
        "name": "navigationMode",
        "type": "NavigationMode"
      },
      {
        "kind": "Property",
        "name": "NavigationMode",
        "type": "typeof NavigationMode"
      },
      { "kind": "Property", "name": "outlineColor", "type": "string" },
      { "kind": "Property", "name": "outlineWidth", "type": "number" },
      {
        "kind": "Method",
        "name": "pauseAnimation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "playAnimation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedProductCodes",
        "type": "string[]"
      },
      {
        "kind": "Property",
        "name": "selectedProductCodesChange",
        "type": "import(\"@angular/core\").EventEmitter<string[]>"
      },
      { "kind": "Property", "name": "selectionMode", "type": "SelectionMode" },
      {
        "kind": "Property",
        "name": "SelectionMode",
        "type": "typeof SelectionMode"
      },
      { "kind": "Property", "name": "showAllHotspotsColor", "type": "string" },
      {
        "kind": "Property",
        "name": "showAllHotspotsEnabled",
        "type": "boolean"
      },
      { "kind": "Property", "name": "viewportReady", "type": "boolean" },
      {
        "kind": "Property",
        "name": "viewportReadyChange",
        "type": "import(\"@angular/core\").EventEmitter<boolean>"
      },
      {
        "kind": "Property",
        "name": "visualViewerService",
        "type": "VisualViewerService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualViewerModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualViewerService",
    "members": [
      {
        "kind": "Property",
        "name": "_sceneNodeToProductLookupService",
        "type": "SceneNodeToProductLookupService"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "epdVisualizationConfig",
            "type": "EpdVisualizationConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!EpdVisualizationConfig:class",
            "shortType": "EpdVisualizationConfig",
            "importPath": "@spartacus/epd-visualization/root"
          },
          {
            "name": "_sceneNodeToProductLookupService",
            "type": "SceneNodeToProductLookupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!SceneNodeToProductLookupService:class",
            "shortType": "SceneNodeToProductLookupService",
            "importPath": "@spartacus/epd-visualization/core"
          },
          {
            "name": "visualizationLookupService",
            "type": "VisualizationLookupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!VisualizationLookupService:class",
            "shortType": "VisualizationLookupService",
            "importPath": "@spartacus/epd-visualization/core"
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "changeDetectorRef",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "windowRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_components!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "activateHomeView",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "animationPlaying", "type": "boolean" },
      {
        "kind": "Property",
        "name": "animationPlayingChange",
        "type": "EventEmitter<boolean>"
      },
      { "kind": "Property", "name": "animationPosition", "type": "number" },
      {
        "kind": "Property",
        "name": "animationPositionChange",
        "type": "EventEmitter<number>"
      },
      { "kind": "Property", "name": "animationTime", "type": "number" },
      {
        "kind": "Property",
        "name": "animationTimeChange",
        "type": "EventEmitter<number>"
      },
      {
        "kind": "Property",
        "name": "animationTotalDuration",
        "type": "number"
      },
      { "kind": "Property", "name": "backgroundBottomColor", "type": "string" },
      { "kind": "Property", "name": "backgroundTopColor", "type": "string" },
      {
        "kind": "Property",
        "name": "changeDetectorRef",
        "type": "ChangeDetectorRef"
      },
      {
        "kind": "Property",
        "name": "DEFAULT_BACKGROUND_BOTTOM_COLOR",
        "type": ""
      },
      {
        "kind": "Property",
        "name": "DEFAULT_BACKGROUND_TOP_COLOR",
        "type": ""
      },
      { "kind": "Property", "name": "DEFAULT_EXCLUDED_OPACITY", "type": "" },
      { "kind": "Property", "name": "DEFAULT_FLY_TO_DURATION", "type": "" },
      {
        "kind": "Property",
        "name": "DEFAULT_HOTSPOT_SELECTION_HIGHLIGHT_COLOR",
        "type": ""
      },
      { "kind": "Property", "name": "DEFAULT_OUTLINE_COLOR", "type": "" },
      { "kind": "Property", "name": "DEFAULT_OUTLINE_WIDTH", "type": "" },
      { "kind": "Property", "name": "DEFAULT_SELECTION_MODE", "type": "" },
      {
        "kind": "Property",
        "name": "DEFAULT_SHOW_ALL_HOTSPOTS_COLOR",
        "type": ""
      },
      {
        "kind": "Property",
        "name": "DEFAULT_SHOW_ALL_HOTSPOTS_ENABLED",
        "type": ""
      },
      { "kind": "Property", "name": "DEFAULT_ZOOM_TO_MARGIN", "type": "" },
      { "kind": "Property", "name": "elementRef", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "epdVisualizationConfig",
        "type": "EpdVisualizationConfig"
      },
      { "kind": "Property", "name": "excludedOpacity", "type": "number" },
      { "kind": "Property", "name": "hotspotSelectionColor", "type": "string" },
      {
        "kind": "Property",
        "name": "includedProductCodes",
        "type": "string[]"
      },
      { "kind": "Property", "name": "is2D", "type": "boolean" },
      { "kind": "Property", "name": "isolateModeEnabled", "type": "boolean" },
      {
        "kind": "Property",
        "name": "isolateModeEnabledChange",
        "type": "EventEmitter<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadVisualization",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<VisualizationLoadInfo>"
      },
      {
        "kind": "Property",
        "name": "navigationMode",
        "type": "NavigationMode"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "outlineColor", "type": "string" },
      { "kind": "Property", "name": "outlineWidth", "type": "number" },
      {
        "kind": "Method",
        "name": "pauseAnimation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "playAnimation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "sceneLoadInfo$",
        "type": "BehaviorSubject<SceneLoadInfo>"
      },
      {
        "kind": "Property",
        "name": "selectedProductCodes",
        "type": "string[]"
      },
      {
        "kind": "Property",
        "name": "selectedProductCodesChange",
        "type": "EventEmitter<string[]>"
      },
      { "kind": "Property", "name": "selectionMode", "type": "SelectionMode" },
      { "kind": "Property", "name": "showAllHotspotsColor", "type": "string" },
      {
        "kind": "Property",
        "name": "showAllHotspotsEnabled",
        "type": "boolean"
      },
      { "kind": "Property", "name": "viewportReady", "type": "boolean" },
      {
        "kind": "Property",
        "name": "viewportReadyChange",
        "type": "EventEmitter<boolean>"
      },
      {
        "kind": "Property",
        "name": "visualizationLoadInfo",
        "type": "VisualizationLoadInfo"
      },
      {
        "kind": "Property",
        "name": "visualizationLoadInfoChange",
        "type": "EventEmitter<VisualizationLoadInfo>"
      },
      {
        "kind": "Property",
        "name": "visualizationLookupService",
        "type": "VisualizationLookupService"
      },
      { "kind": "Property", "name": "windowRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualViewerToolbarButtonComponent",
    "members": [
      { "kind": "Property", "name": "checked", "type": "boolean" },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      { "kind": "Property", "name": "iconClass", "type": "string" },
      { "kind": "Property", "name": "iconLibraryClass", "type": "string" },
      { "kind": "Property", "name": "text", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/components",
    "kind": "Class",
    "name": "VisualViewerToolbarButtonModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Class",
    "name": "EpdVisualizationCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Variable",
    "name": "LOOKUP_VISUALIZATIONS_RESPONSE_NORMALIZER",
    "type": "InjectionToken<Converter<any, LookupVisualizationsResponse>>"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Interface",
    "name": "LookupVisualizationsResponse",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "visualizations",
        "type": "VisualizationInfo[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Interface",
    "name": "Metadatum",
    "members": [
      { "kind": "PropertySignature", "name": "category", "type": "string" },
      { "kind": "PropertySignature", "name": "source", "type": "string" },
      { "kind": "PropertySignature", "name": "tag", "type": "string" },
      { "kind": "PropertySignature", "name": "value", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "valueType",
        "type": "MetadatumValueType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Enum",
    "name": "MetadatumValueType",
    "members": ["blob", "date", "float", "integer", "string", "string_array"]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Interface",
    "name": "NodeIdProductCodes",
    "members": [
      { "kind": "PropertySignature", "name": "nodeId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "productCodes",
        "type": "string[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Variable",
    "name": "NODES_RESPONSE_NORMALIZER",
    "type": "InjectionToken<Converter<any, NodesResponse>>"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Interface",
    "name": "NodesResponse",
    "members": [
      { "kind": "PropertySignature", "name": "nodes", "type": "TreeNode[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Class",
    "name": "SceneAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "getNodes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sceneId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "nodeIds",
            "type": "string[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "$expand",
            "type": "string[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "$filter",
            "type": "string[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "contentType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<NodesResponse>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Class",
    "name": "SceneConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sceneAdapter",
            "type": "SceneAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!SceneAdapter:class",
            "shortType": "SceneAdapter",
            "importPath": "@spartacus/epd-visualization/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getNodes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sceneId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "nodeIds",
            "type": "string[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "$expand",
            "type": "string[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "$filter",
            "type": "string[]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "contentType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<NodesResponse>"
      },
      { "kind": "Property", "name": "sceneAdapter", "type": "SceneAdapter" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Class",
    "name": "SceneNodeToProductLookupService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "epdVisualizationConfig",
            "type": "EpdVisualizationConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!EpdVisualizationConfig:class",
            "shortType": "EpdVisualizationConfig",
            "importPath": "@spartacus/epd-visualization/root"
          },
          {
            "name": "sceneConnector",
            "type": "SceneConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!SceneConnector:class",
            "shortType": "SceneConnector",
            "importPath": "@spartacus/epd-visualization/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "epdVisualizationConfig",
        "type": "EpdVisualizationConfig"
      },
      {
        "kind": "Method",
        "name": "lookupNodeIds",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCodes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string[]>"
      },
      {
        "kind": "Method",
        "name": "lookupProductCodes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nodeIds",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string[]>"
      },
      {
        "kind": "Method",
        "name": "populateMapsForScene",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sceneId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "sceneConnector",
        "type": "SceneConnector"
      },
      {
        "kind": "Method",
        "name": "syncLookupNodeIds",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCodes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "syncLookupProductCodes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nodeIds",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Interface",
    "name": "TreeNode",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "metadata",
        "type": "Metadatum[]"
      },
      { "kind": "PropertySignature", "name": "sid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Class",
    "name": "VisualizationAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "lookupVisualization",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "visualizationUsageId",
            "type": "UsageId",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!UsageId:interface",
            "shortType": "UsageId",
            "importPath": "@spartacus/epd-visualization/root"
          },
          {
            "name": "folderUsageId",
            "type": "UsageId",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!UsageId:interface",
            "shortType": "UsageId",
            "importPath": "@spartacus/epd-visualization/root"
          }
        ],
        "returnType": "Observable<LookupVisualizationsResponse>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Class",
    "name": "VisualizationConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "visualizationAdapter",
            "type": "VisualizationAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!VisualizationAdapter:class",
            "shortType": "VisualizationAdapter",
            "importPath": "@spartacus/epd-visualization/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "lookupVisualization",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "visualizationUsageId",
            "type": "UsageId",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!UsageId:interface",
            "shortType": "UsageId",
            "importPath": "@spartacus/epd-visualization/root"
          },
          {
            "name": "folderUsageId",
            "type": "UsageId",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!UsageId:interface",
            "shortType": "UsageId",
            "importPath": "@spartacus/epd-visualization/root"
          }
        ],
        "returnType": "Observable<LookupVisualizationsResponse>"
      },
      {
        "kind": "Property",
        "name": "visualizationAdapter",
        "type": "VisualizationAdapter"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/core",
    "kind": "Class",
    "name": "VisualizationLookupService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "epdVisualizationConfig",
            "type": "EpdVisualizationConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!EpdVisualizationConfig:class",
            "shortType": "EpdVisualizationConfig",
            "importPath": "@spartacus/epd-visualization/root"
          },
          {
            "name": "visualizationConnector",
            "type": "VisualizationConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_core!VisualizationConnector:class",
            "shortType": "VisualizationConnector",
            "importPath": "@spartacus/epd-visualization/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "epdVisualizationConfig",
        "type": "EpdVisualizationConfig"
      },
      {
        "kind": "Method",
        "name": "findMatchingVisualizations",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "String",
            "isOptional": false,
            "canonicalReference": "!String:interface",
            "shortType": "String",
            "importPath": ""
          }
        ],
        "returnType": "Observable<VisualizationInfo[]>"
      },
      {
        "kind": "Property",
        "name": "visualizationConnector",
        "type": "VisualizationConnector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/epd-visualization-api",
    "kind": "Class",
    "name": "EpdVisualizationApiModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Enum",
    "name": "ContentType",
    "members": ["Drawing2D", "Model3D"]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Function",
    "name": "defaultEpdVisualizationComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Variable",
    "name": "EPD_VISUALIZATION_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Class",
    "name": "EpdVisualizationConfig",
    "members": [
      {
        "kind": "Property",
        "name": "epdVisualization",
        "type": "EpdVisualizationInnerConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Function",
    "name": "epdVisualizationConfigValidator",
    "parameters": [
      {
        "name": "epdVisualizationConfig",
        "type": "EpdVisualizationConfig",
        "isOptional": false,
        "canonicalReference": "@spartacus/epd-visualization_root!EpdVisualizationConfig:class",
        "shortType": "EpdVisualizationConfig",
        "importPath": "@spartacus/epd-visualization/root"
      }
    ],
    "returnType": "string | void"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "EpdVisualizationInnerConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "apis",
        "type": "VisualizationApiConfig"
      },
      { "kind": "PropertySignature", "name": "ui5", "type": "Ui5Config" },
      {
        "kind": "PropertySignature",
        "name": "usageIds",
        "type": "UsageIdConfig"
      },
      {
        "kind": "PropertySignature",
        "name": "visualPicking",
        "type": "VisualPickingConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Class",
    "name": "EpdVisualizationRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Class",
    "name": "EventListenerUtils",
    "members": [
      {
        "kind": "Method",
        "name": "_detachEventListeners",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventListeners",
            "type": "Listener[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/epd-visualization_root!Listener:interface",
            "shortType": "Listener",
            "importPath": "@spartacus/epd-visualization/root"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "attachEventListener",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nativeElement",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "eventName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "callback",
            "type": "(event: any) => void",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "detachAllEventListeners",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nativeElement",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "detachEventListeners",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nativeElement",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "eventName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Function",
    "name": "getEpdVisualizationDefaultConfig",
    "parameters": [],
    "returnType": "EpdVisualizationConfig"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Function",
    "name": "getUrl",
    "parameters": [
      {
        "name": "urlString",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "URL | null"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Function",
    "name": "isHttpOrHttps",
    "parameters": [
      {
        "name": "url",
        "type": "URL",
        "isOptional": false,
        "canonicalReference": "!URL:interface",
        "shortType": "URL",
        "importPath": ""
      }
    ],
    "returnType": "boolean"
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "Listener",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "endListener",
        "type": "() => void"
      },
      { "kind": "PropertySignature", "name": "eventName", "type": "string" },
      { "kind": "PropertySignature", "name": "nativeElement", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "Ui5Config",
    "members": [
      { "kind": "PropertySignature", "name": "bootstrapUrl", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "UsageId",
    "members": [
      { "kind": "PropertySignature", "name": "keys", "type": "UsageIdKey[]" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "UsageIdConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "folderUsageId",
        "type": "UsageId"
      },
      {
        "kind": "PropertySignature",
        "name": "productUsageId",
        "type": "UsageIdDefinition"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "UsageIdDefinition",
    "members": [
      { "kind": "PropertySignature", "name": "category", "type": "string" },
      { "kind": "PropertySignature", "name": "keyName", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "source", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "UsageIdKey",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "String" },
      { "kind": "PropertySignature", "name": "value", "type": "String" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "VisualizationApiConfig",
    "members": [
      { "kind": "PropertySignature", "name": "baseUrl", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "VisualizationInfo",
    "members": [
      { "kind": "PropertySignature", "name": "category", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "contentType",
        "type": "ContentType"
      },
      { "kind": "PropertySignature", "name": "folderId", "type": "string" },
      { "kind": "PropertySignature", "name": "sceneId", "type": "string" },
      { "kind": "PropertySignature", "name": "version", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "visualizationId",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization/root",
    "kind": "Interface",
    "name": "VisualPickingConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "productReferenceType",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/epd-visualization",
    "kind": "Class",
    "name": "EpdVisualizationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/incubator",
    "kind": "Class",
    "name": "IncubatorCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/incubator",
    "kind": "Class",
    "name": "IncubatorStorefrontModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/assets",
    "kind": "Variable",
    "name": "orderTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/order/assets",
    "kind": "Variable",
    "name": "orderTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "AmendOrderActionsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendOrderForm", "type": "FormGroup" },
      { "kind": "Property", "name": "backRoute", "type": "string" },
      {
        "kind": "Method",
        "name": "continue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "forwardRoute", "type": "string" },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "styles", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "AmendOrderActionsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "AmendOrderItemsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Enum",
    "name": "AmendOrderType",
    "members": ["CANCEL", "RETURN"]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "CancelOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "CancelOrderConfirmationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Method",
        "name": "submit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "CancelOrderConfirmationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "CancelOrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "CancelOrReturnItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "entries", "type": "OrderEntry[]" },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Method",
        "name": "getControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormControl"
      },
      {
        "kind": "Method",
        "name": "getItemPrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Price"
      },
      {
        "kind": "Method",
        "name": "getMaxAmendQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isCancellation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "isConfirmation", "type": "boolean" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      {
        "kind": "Method",
        "name": "setAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ConsignmentTrackingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "consignment", "type": "Consignment" },
      { "kind": "Property", "name": "consignmentStatus", "type": "string[]" },
      {
        "kind": "Property",
        "name": "consignmentTracking$",
        "type": "Observable<ConsignmentTracking>"
      },
      { "kind": "Property", "name": "modalRef", "type": "ModalRef" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openTrackingDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consignment",
            "type": "Consignment",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!Consignment:interface",
            "shortType": "Consignment",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Variable",
    "name": "defaultReplenishmentOrderCancellationLayoutConfig",
    "type": "LayoutConfig"
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderAmendService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getAmendedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getAmendedPrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Price"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<FormGroup>"
      },
      {
        "kind": "Method",
        "name": "getFormControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormControl"
      },
      {
        "kind": "Method",
        "name": "getMaxAmendQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getOrder",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "isCancellation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderCancellationGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderCancellationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderCancellationService:class",
            "shortType": "OrderCancellationService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderCancellationService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderCancellationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderCancellationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userOrderService", "type": "OrderFacade" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderConsignedEntriesComponent",
    "members": [
      { "kind": "Property", "name": "consignments", "type": "Consignment[]" },
      {
        "kind": "Method",
        "name": "getConsignmentProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consignment",
            "type": "Consignment",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!Consignment:interface",
            "shortType": "Consignment",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderEntry[]"
      },
      { "kind": "Property", "name": "order", "type": "Order" },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailActionsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cancel$",
        "type": "Observable<Consignment[] | undefined>"
      },
      {
        "kind": "Property",
        "name": "completed$",
        "type": "Observable<Consignment[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<Order>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Property",
        "name": "others$",
        "type": "Observable<Consignment[] | undefined>"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailShippingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Property",
        "name": "orderCode$",
        "type": "Observable<string>"
      },
      { "kind": "Property", "name": "orderLoad$", "type": "Observable<{}>" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderDetailTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byOrderNumber: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "Order",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "hasReplenishmentOrder$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "orders$",
        "type": "Observable<OrderHistoryList | undefined>"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "tabTitleParam$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      { "kind": "Property", "name": "userOrderService", "type": "OrderFacade" },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderHistoryModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderReturnGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderReturnService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderReturnService:class",
            "shortType": "OrderReturnService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderReturnService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderReturnModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderReturnRequestListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "OrderReturnRequestFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderReturnRequestFacade:class",
            "shortType": "OrderReturnRequestFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byRMA: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequests$",
        "type": "Observable<ReturnRequestList | undefined>"
      },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "tabTitleParam$",
        "type": "Observable<number>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "OrderReturnService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "returnRequestService",
            "type": "OrderReturnRequestFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderReturnRequestFacade:class",
            "shortType": "OrderReturnRequestFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "OrderReturnRequestFacade"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrder$",
        "type": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderCode",
        "type": "string"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationDialogModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderCode$",
        "type": "Observable<any>"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderLoad$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "ReplenishmentOrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrderFacade:class",
            "shortType": "ReplenishmentOrderFacade",
            "importPath": "@spartacus/order/root"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byReplenishmentNumber: string;\n        byNextOrderDate: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "ReplenishmentOrder",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrders$",
        "type": "Observable<ReplenishmentOrderList | undefined>"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "ReplenishmentOrderFacade"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReplenishmentOrderHistoryModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnOrderConfirmationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Method",
        "name": "submit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnOrderConfirmationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnOrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnRequestDetailModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnRequestItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnRequestListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnRequestOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cancelReturn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isCancelling$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      },
      { "kind": "Property", "name": "rma", "type": "string" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "ReturnRequestTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/components",
    "kind": "Class",
    "name": "TrackingEventsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeModal",
            "type": "NgbActiveModal",
            "isOptional": false,
            "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
            "shortType": "NgbActiveModal",
            "importPath": "@ng-bootstrap/ng-bootstrap"
          },
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_components!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      { "kind": "Property", "name": "activeModal", "type": "NgbActiveModal" },
      { "kind": "Property", "name": "consignmentCode", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "shipDate", "type": "Date" },
      {
        "kind": "Property",
        "name": "tracking$",
        "type": "Observable<ConsignmentTracking>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_RETURN_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CONSIGNMENT_TRACKING_NORMALIZER",
    "type": "InjectionToken<Converter<any, ConsignmentTracking>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Interface",
    "name": "ConsignmentTrackingState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "tracking",
        "type": "ConsignmentTracking"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_DETAILS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_HISTORY_NORMALIZER",
    "type": "InjectionToken<Converter<any, OrderHistoryList>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_RETURN_REQUEST_INPUT_SERIALIZER",
    "type": "InjectionToken<Converter<ReturnRequestEntryInputList, any>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_RETURN_REQUEST_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReturnRequest>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDER_RETURNS_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReturnRequestList>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Namespace",
    "name": "OrderActions"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_RETURN_REQUEST",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_ORDER",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CANCEL_REPLENISHMENT_ORDER",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelOrder",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orderCode: string;\n        cancelRequestInput: CancellationRequestEntryInputList;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orderCode: string;\n        cancelRequestInput: CancellationRequestEntryInputList;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelOrderFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequest",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestCode: string;\n        returnRequestModification: ReturnRequestModification;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestCode: string;\n        returnRequestModification: ReturnRequestModification;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequestFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelOrderReturnRequestSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelOrderSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrder",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrderFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CancelReplenishmentOrderSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrder",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReplenishmentOrder" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CLEAR_CANCEL_REPLENISHMENT_ORDER",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CLEAR_CONSIGNMENT_TRACKING",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_DETAILS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_RETURN_REQUEST_LIST",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CLEAR_ORDER_RETURN_REQUEST",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ClEAR_REPLENISHMENT_ORDER_DETAILS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CLEAR_USER_ORDERS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CLEAR_USER_REPLENISHMENT_ORDERS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ClearCancelReplenishmentOrder",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ClearConsignmentTracking",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ClearOrderDetails",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ClearOrderReturnRequest",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ClearOrderReturnRequestList",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ClearReplenishmentOrderDetails",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ClearUserOrders",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ClearUserReplenishmentOrders",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "TypeAlias",
    "name": "ConsignmentTrackingAction",
    "namespace": "OrderActions",
    "members": [
      "LoadConsignmentTracking",
      " | ",
      "LoadConsignmentTrackingFail",
      " | ",
      "LoadConsignmentTrackingSuccess",
      " | ",
      "ClearConsignmentTracking"
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "CREATE_ORDER_RETURN_REQUEST",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequest",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestInput: ReturnRequestEntryInputList;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestInput: ReturnRequestEntryInputList;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequestFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "CreateOrderReturnRequestSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequest",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequest" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_CONSIGNMENT_TRACKING",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_DETAILS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_LIST",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_ORDER_RETURN_REQUEST",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_REPLENISHMENT_ORDER_DETAILS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_USER_ORDERS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS_FAIL",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "LOAD_USER_REPLENISHMENT_ORDERS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadConsignmentTracking",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId?: string;\n        orderCode: string;\n        consignmentCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId?: string;\n        orderCode: string;\n        consignmentCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadConsignmentTrackingFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadConsignmentTrackingSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ConsignmentTracking",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ConsignmentTracking:interface",
            "shortType": "ConsignmentTracking",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ConsignmentTracking" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderDetails",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orderCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderDetailsFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderDetailsSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Order",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Order" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequest",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        returnRequestCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        returnRequestCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestList",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestListFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestListSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequestList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequestList:interface",
            "shortType": "ReturnRequestList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequestList" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadOrderReturnRequestSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReturnRequest",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReturnRequest" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetails",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        replenishmentOrderCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetailsFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadReplenishmentOrderDetailsSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrder",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "ReplenishmentOrder" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadUserOrders",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n        replenishmentOrderCode?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n        replenishmentOrderCode?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadUserOrdersFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadUserOrdersSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "OrderHistoryList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!OrderHistoryList:interface",
            "shortType": "OrderHistoryList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "OrderHistoryList" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrders",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        pageSize?: number;\n        currentPage?: number;\n        sort?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrdersFail",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "LoadUserReplenishmentOrdersSuccess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "ReplenishmentOrderList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReplenishmentOrderList:interface",
            "shortType": "ReplenishmentOrderList",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "ReplenishmentOrderList"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "TypeAlias",
    "name": "OrderDetailsAction",
    "namespace": "OrderActions",
    "members": [
      "LoadOrderDetails",
      " | ",
      "LoadOrderDetailsFail",
      " | ",
      "LoadOrderDetailsSuccess",
      " | ",
      "ClearOrderDetails",
      " | ",
      "CancelOrder",
      " | ",
      "CancelOrderFail",
      " | ",
      "CancelOrderSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "TypeAlias",
    "name": "OrderReturnRequestAction",
    "namespace": "OrderActions",
    "members": [
      "CreateOrderReturnRequest",
      " | ",
      "CreateOrderReturnRequestFail",
      " | ",
      "CreateOrderReturnRequestSuccess",
      " | ",
      "LoadOrderReturnRequest",
      " | ",
      "LoadOrderReturnRequestFail",
      " | ",
      "LoadOrderReturnRequestSuccess",
      " | ",
      "CancelOrderReturnRequest",
      " | ",
      "CancelOrderReturnRequestFail",
      " | ",
      "CancelOrderReturnRequestSuccess",
      " | ",
      "LoadOrderReturnRequestList",
      " | ",
      "LoadOrderReturnRequestListFail",
      " | ",
      "LoadOrderReturnRequestListSuccess",
      " | ",
      "ClearOrderReturnRequest",
      " | ",
      "ClearOrderReturnRequestList",
      " | ",
      "ResetCancelReturnProcess"
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "TypeAlias",
    "name": "ReplenishmentOrderDetailsAction",
    "namespace": "OrderActions",
    "members": [
      "LoadReplenishmentOrderDetails",
      " | ",
      "LoadReplenishmentOrderDetailsSuccess",
      " | ",
      "LoadReplenishmentOrderDetailsFail",
      " | ",
      "ClearReplenishmentOrderDetails",
      " | ",
      "CancelReplenishmentOrder",
      " | ",
      "CancelReplenishmentOrderSuccess",
      " | ",
      "CancelReplenishmentOrderFail",
      " | ",
      "ClearCancelReplenishmentOrder"
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "RESET_CANCEL_ORDER_PROCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "RESET_CANCEL_RETURN_PROCESS",
    "namespace": "OrderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ResetCancelOrderProcess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ResetCancelReturnProcess",
    "namespace": "OrderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "TypeAlias",
    "name": "UserOrdersAction",
    "namespace": "OrderActions",
    "members": [
      "LoadUserOrders",
      " | ",
      "LoadUserOrdersFail",
      " | ",
      "LoadUserOrdersSuccess",
      " | ",
      "ClearUserOrders"
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "TypeAlias",
    "name": "UserReplenishmentOrdersAction",
    "namespace": "OrderActions",
    "members": [
      "LoadUserReplenishmentOrders",
      " | ",
      "LoadUserReplenishmentOrdersFail",
      " | ",
      "LoadUserReplenishmentOrdersSuccess",
      " | ",
      "ClearUserReplenishmentOrders"
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "createReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "OrderAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!OrderAdapter:class",
            "shortType": "OrderAdapter",
            "importPath": "@spartacus/order/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "OrderAdapter" },
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Method",
        "name": "return",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderReturnRequestService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrder>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReturnRequestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReturnRequestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadOrderReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "resetCancelReturnRequestProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithOrder>" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "ORDERS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Namespace",
    "name": "OrderSelectors"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getConsignmentTracking",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, ConsignmentTracking>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getConsignmentTrackingState",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, ConsignmentTrackingState>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderDetails",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, Order>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderDetailState",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<Order>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderReturnRequest",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, ReturnRequest>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestList",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, ReturnRequestList>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestListState",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReturnRequestList>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestLoading",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestState",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReturnRequest>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderReturnRequestSuccess",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrders",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, OrderHistoryList>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrdersLoaded",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrdersState",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<OrderHistoryList>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getOrderState",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, OrderState>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsError",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsLoading",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsSuccess",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderDetailsValue",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, ReplenishmentOrder>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrders",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, ReplenishmentOrderList>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersError",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersLoading",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersState",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReplenishmentOrderList>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrdersSuccess",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, boolean>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "getReplenishmentOrderState",
    "namespace": "OrderSelectors",
    "type": "MemoizedSelector<StateWithOrder, StateUtils.LoaderState<ReplenishmentOrder>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "OrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrder>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryListLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "resetCancelOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithOrder>" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Interface",
    "name": "OrderState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "consignmentTracking",
        "type": "ConsignmentTrackingState"
      },
      {
        "kind": "PropertySignature",
        "name": "orderDetail",
        "type": "StateUtils.LoaderState<Order>"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturn",
        "type": "StateUtils.LoaderState<ReturnRequest>"
      },
      {
        "kind": "PropertySignature",
        "name": "orderReturnList",
        "type": "StateUtils.LoaderState<ReturnRequestList>"
      },
      {
        "kind": "PropertySignature",
        "name": "orders",
        "type": "StateUtils.LoaderState<OrderHistoryList>"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrder",
        "type": "StateUtils.LoaderState<ReplenishmentOrder>"
      },
      {
        "kind": "PropertySignature",
        "name": "replenishmentOrders",
        "type": "StateUtils.LoaderState<ReplenishmentOrderList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_DETAILS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDER_HISTORY_NORMALIZER",
    "type": "InjectionToken<Converter<any, ReplenishmentOrderList>>"
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "REPLENISHMENT_ORDERS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ReplenishmentOrderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "ReplenishmentOrderAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!ReplenishmentOrderAdapter:class",
            "shortType": "ReplenishmentOrderAdapter",
            "importPath": "@spartacus/order/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapter",
        "type": "ReplenishmentOrderAdapter"
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Class",
    "name": "ReplenishmentOrderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrder>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "processStateStore",
            "type": "Store<StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCancelReplenishmentOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "processStateStore",
        "type": "Store<StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "store", "type": "Store<StateWithOrder>" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "RETURN_REQUEST_DETAILS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Variable",
    "name": "RETURN_REQUESTS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/core",
    "kind": "Interface",
    "name": "StateWithOrder",
    "members": [
      { "kind": "PropertySignature", "name": "order", "type": "OrderState" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/occ",
    "kind": "Class",
    "name": "OccOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      {
        "kind": "Method",
        "name": "cancelReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{}>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "createReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ConsignmentTracking>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "loadReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/occ",
    "kind": "Class",
    "name": "OccReplenishmentOrderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "loadHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentDetailsHistory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/occ",
    "kind": "Class",
    "name": "OccReturnRequestNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.ReturnRequest",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_occ!Occ.ReturnRequest:interface",
            "shortType": "Occ.ReturnRequest",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "ReturnRequest",
            "isOptional": true,
            "canonicalReference": "@spartacus/order_occ!ReturnRequest:interface",
            "shortType": "ReturnRequest",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ReturnRequest"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/occ",
    "kind": "Class",
    "name": "OrderOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Interface",
    "name": "Carrier",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Interface",
    "name": "ConsignmentTracking",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "carrierDetails",
        "type": "Carrier"
      },
      {
        "kind": "PropertySignature",
        "name": "statusDisplay",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "targetArrivalDate",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "trackingEvents",
        "type": "ConsignmentTrackingEvent[]"
      },
      { "kind": "PropertySignature", "name": "trackingID", "type": "string" },
      { "kind": "PropertySignature", "name": "trackingUrl", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Interface",
    "name": "ConsignmentTrackingEvent",
    "members": [
      { "kind": "PropertySignature", "name": "detail", "type": "string" },
      { "kind": "PropertySignature", "name": "eventDate", "type": "string" },
      { "kind": "PropertySignature", "name": "location", "type": "string" },
      { "kind": "PropertySignature", "name": "referenceCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Function",
    "name": "defaultOrderComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Variable",
    "name": "ORDER_CORE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Variable",
    "name": "ORDER_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Class",
    "name": "OrderDetailsOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "OrderFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_root!OrderFacade:class",
            "shortType": "OrderFacade",
            "importPath": "@spartacus/order/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "userOrderService", "type": "OrderFacade" }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Class",
    "name": "OrderFacade",
    "members": [
      {
        "kind": "Method",
        "name": "cancelOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "cancelRequestInput",
            "type": "CancellationRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_root!CancellationRequestEntryInputList:interface",
            "shortType": "CancellationRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConsignmentTracking>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderHistoryList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getOrderHistoryListLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadConsignmentTracking",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "consignmentCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetCancelOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Function",
    "name": "orderFacadeFactory",
    "parameters": [],
    "returnType": "OrderFacade"
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Class",
    "name": "OrderReturnRequestFacade",
    "members": [
      {
        "kind": "Method",
        "name": "cancelOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "returnRequestModification",
            "type": "ReturnRequestModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_root!ReturnRequestModification:interface",
            "shortType": "ReturnRequestModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestInput",
            "type": "ReturnRequestEntryInputList",
            "isOptional": false,
            "canonicalReference": "@spartacus/order_root!ReturnRequestEntryInputList:interface",
            "shortType": "ReturnRequestEntryInputList",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReturnRequestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReturnRequestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getOrderReturnRequest",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReturnRequest>"
      },
      {
        "kind": "Method",
        "name": "getOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReturnRequestList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReturnRequestSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadOrderReturnRequestDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderReturnRequestList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetCancelReturnRequestProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Function",
    "name": "orderReturnRequestFacadeFactory",
    "parameters": [],
    "returnType": "OrderReturnRequestFacade"
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Class",
    "name": "OrderRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Class",
    "name": "ReplenishmentOrderFacade",
    "members": [
      {
        "kind": "Method",
        "name": "cancelReplenishmentOrder",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearCancelReplenishmentOrderProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getCancelReplenishmentOrderSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderDetailsSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ReplenishmentOrderList | undefined>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentOrderHistoryListSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadReplenishmentOrderList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "sort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/order/root",
    "kind": "Function",
    "name": "replenishmentOrderFacadeFactory",
    "parameters": [],
    "returnType": "ReplenishmentOrderFacade"
  },
  {
    "entryPoint": "@spartacus/order",
    "kind": "Class",
    "name": "OrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/assets",
    "kind": "Variable",
    "name": "organizationTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/assets",
    "kind": "Variable",
    "name": "organizationTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ActiveLinkCellComponent",
    "members": [{ "kind": "Property", "name": "tabIndex", "type": "number" }]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "AdministrationComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "AmountCellComponent",
    "members": [
      { "kind": "Property", "name": "budget", "type": "any" },
      { "kind": "Property", "name": "currency", "type": "any" },
      { "kind": "Property", "name": "property", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "AssignCellComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "OutletContextData<TableDataOutletContext>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
            "shortType": "OutletContextData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "organizationItemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "organizationSubListService",
            "type": "ListService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ListService:class",
            "shortType": "ListService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "linkKey",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<T>>"
      },
      { "kind": "Property", "name": "isAssigned", "type": "boolean" },
      { "kind": "Property", "name": "link", "type": "string" },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "kind": "Method",
        "name": "notify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "state",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "organizationItemService",
        "type": "ItemService<T>"
      },
      {
        "kind": "Property",
        "name": "organizationSubListService",
        "type": "ListService<T>"
      },
      {
        "kind": "Property",
        "name": "outlet",
        "type": "OutletContextData<TableDataOutletContext>"
      },
      {
        "kind": "Method",
        "name": "toggleAssign",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "linkKey",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<T>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "TypeAlias",
    "name": "BaseItem",
    "members": [
      "{\n    code?: string;\n    selected?: boolean;\n    customerId?: string;\n    uid?: string;\n    id?: string;\n    active?: boolean;\n    orgUnit?: ",
      "B2BUnit",
      ";\n    parentOrgUnit?: ",
      "B2BUnit",
      ";\n    unit?: ",
      "B2BUnit",
      ";\n}"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BaseMessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "messageData",
            "type": "MessageData",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageData:class",
            "shortType": "MessageData",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "platformId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleAutoHide",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "message", "type": "Translatable" },
      { "kind": "Property", "name": "messageData", "type": "MessageData" },
      { "kind": "Property", "name": "messageIcon", "type": "ICON_TYPE" },
      { "kind": "Property", "name": "messageTitle", "type": "Translatable" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "platformId", "type": "any" },
      {
        "kind": "Method",
        "name": "resolveType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "terminated", "type": "boolean" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "budgetCmsConfig",
    "type": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetCostCenterListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetCostCenterListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetCostCenterListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "budgetService",
            "type": "BudgetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!BudgetService:class",
            "shortType": "BudgetService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "budgetService", "type": "BudgetService" },
      {
        "kind": "Method",
        "name": "filterSelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ pagination, sorts, values, }",
            "type": "EntitiesModel<CostCenter>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<CostCenter>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetDetailsCellComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetDetailsCellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<Budget>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<Budget>"
      },
      { "kind": "Property", "name": "model$", "type": "Observable<Budget>" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<Budget>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "currencyService",
            "type": "CurrencyService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrencyService:class",
            "shortType": "CurrencyService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "createCodeWithName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "name",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          },
          {
            "name": "code",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "currencies$",
        "type": "Observable<Currency[]>"
      },
      {
        "kind": "Property",
        "name": "currencyService",
        "type": "CurrencyService"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<Budget>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "units$",
        "type": "Observable<B2BUnitNode[]>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetFormService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "datePickerService",
            "type": "DatePickerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!DatePickerService:class",
            "shortType": "DatePickerService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "datePickerService",
        "type": "DatePickerService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentBudgetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentBudgetService:class",
            "shortType": "CurrentBudgetService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "BudgetFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!BudgetFormService:class",
            "shortType": "BudgetFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "budgetService",
            "type": "BudgetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!BudgetService:class",
            "shortType": "BudgetService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "budgetService", "type": "BudgetService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Budget>>"
      },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentBudgetService"
      },
      {
        "kind": "Property",
        "name": "formService",
        "type": "BudgetFormService"
      },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Budget>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "BudgetListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "budgetService",
            "type": "BudgetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!BudgetService:class",
            "shortType": "BudgetService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "budgetService", "type": "BudgetService" },
      {
        "kind": "Method",
        "name": "convertBudgets",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ pagination, sorts, values, }",
            "type": "EntitiesModel<Budget>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<Budget>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "budgetTableConfig",
    "type": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Function",
    "name": "budgetTableConfigFactory",
    "parameters": [],
    "returnType": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CardComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "closeView",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "i18nRoot", "type": "string" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "item$", "type": "Observable<T>" },
      { "kind": "Property", "name": "itemKey", "type": "any" },
      { "kind": "Property", "name": "itemService", "type": "ItemService<T>" },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      { "kind": "Property", "name": "previous", "type": "boolean | string" },
      { "kind": "Property", "name": "previousLabel", "type": "string" },
      {
        "kind": "Method",
        "name": "refreshMessages",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "showHint", "type": "boolean" },
      { "kind": "Property", "name": "subtitle", "type": "string" },
      { "kind": "Property", "name": "view", "type": "ViewComponent" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CardModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CellComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "OutletContextData<TableDataOutletContext>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
            "shortType": "OutletContextData",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cellOptions",
        "type": "TableFieldOptions"
      },
      { "kind": "Property", "name": "hasItem", "type": "boolean" },
      { "kind": "Property", "name": "item", "type": "any" },
      { "kind": "Property", "name": "linkable", "type": "boolean" },
      { "kind": "Property", "name": "model", "type": "TableDataOutletContext" },
      {
        "kind": "Property",
        "name": "outlet",
        "type": "OutletContextData<TableDataOutletContext>"
      },
      { "kind": "Property", "name": "property", "type": "string" },
      { "kind": "Property", "name": "route", "type": "string" },
      { "kind": "Property", "name": "routeModel", "type": "any" },
      { "kind": "Property", "name": "tabIndex", "type": "number" },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ConfirmationMessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "MessageData<ConfirmationMessageData>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageData:class",
            "shortType": "MessageData",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "platformId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "cancelText", "type": "Translatable" },
      {
        "kind": "Method",
        "name": "confirm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "confirmText", "type": "Translatable" },
      {
        "kind": "Property",
        "name": "data",
        "type": "MessageData<ConfirmationMessageData>"
      },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "platformId", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Interface",
    "name": "ConfirmationMessageData",
    "members": [
      { "kind": "PropertySignature", "name": "confirm", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ConfirmationMessageModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterAssignedBudgetListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterAssignedBudgetListService",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterBudgetListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterBudgetListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterBudgetListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "costCenterService",
            "type": "CostCenterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CostCenterService:class",
            "shortType": "CostCenterService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "budgetService",
            "type": "BudgetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!BudgetService:class",
            "shortType": "BudgetService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Budget>>"
      },
      { "kind": "Property", "name": "budgetService", "type": "BudgetService" },
      {
        "kind": "Property",
        "name": "costCenterService",
        "type": "CostCenterService"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Budget>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "costCenterCmsConfig",
    "type": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterDetailsCellComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterDetailsCellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<CostCenter>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<CostCenter>"
      },
      { "kind": "Property", "name": "model$", "type": "Observable<CostCenter>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<CostCenter>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "currencyService",
            "type": "CurrencyService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrencyService:class",
            "shortType": "CurrencyService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "createCodeWithName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "name",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          },
          {
            "name": "code",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "currencies$",
        "type": "Observable<Currency[]>"
      },
      {
        "kind": "Property",
        "name": "currencyService",
        "type": "CurrencyService"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<CostCenter>"
      },
      {
        "kind": "Property",
        "name": "units$",
        "type": "Observable<B2BUnitNode[]>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterFormService",
    "members": [
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CostCenterListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "costCenterService",
            "type": "CostCenterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CostCenterService:class",
            "shortType": "CostCenterService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convertCostCenters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ pagination, sorts, values, }",
            "type": "EntitiesModel<CostCenter>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<CostCenterModel>"
      },
      {
        "kind": "Property",
        "name": "costCenterService",
        "type": "CostCenterService"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenterModel>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Interface",
    "name": "CostCenterModel",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "currency", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "unit", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "costCenterTableConfig",
    "type": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Function",
    "name": "costCenterTableConfigFactory",
    "parameters": [],
    "returnType": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentBudgetService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "budgetService",
            "type": "BudgetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!BudgetService:class",
            "shortType": "BudgetService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "budgetService", "type": "BudgetService" },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentCostCenterService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "costCenterService",
            "type": "CostCenterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CostCenterService:class",
            "shortType": "CostCenterService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "costCenterService",
        "type": "CostCenterService"
      },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CostCenter>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "b2bUnit$", "type": "Observable<string>" },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRouterParam",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paramKey",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      { "kind": "Property", "name": "item$", "type": "Observable<T>" },
      { "kind": "Property", "name": "key$", "type": "Observable<string>" },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentPermissionService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "permissionService",
            "type": "PermissionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PermissionService:class",
            "shortType": "PermissionService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "permissionService",
        "type": "PermissionService"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentUnitAddressService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "item$", "type": "Observable<Address>" },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentUnitChildService",
    "members": [
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentUnitService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "orgUnitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "orgUnitService",
        "type": "OrgUnitService"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentUnitUserService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "b2bUserService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "b2bUserService",
        "type": "B2BUserService"
      },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentUserGroupService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userGroupService",
            "type": "UserGroupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroupService:class",
            "shortType": "UserGroupService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "userGroupService",
        "type": "UserGroupService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "CurrentUserService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "b2bUserService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "b2bUserService",
        "type": "B2BUserService"
      },
      {
        "kind": "Method",
        "name": "getError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "getParamKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "name$", "type": "Observable<string>" },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "DateRangeCellComponent",
    "members": [
      { "kind": "Property", "name": "hasRange", "type": "boolean" },
      { "kind": "Property", "name": "linkable", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "DeleteItemComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "messageService",
            "type": "MessageService<ConfirmationMessageData>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "additionalParam", "type": "string" },
      {
        "kind": "Property",
        "name": "confirmation",
        "type": "Subject<ConfirmationMessageData>"
      },
      {
        "kind": "Method",
        "name": "confirmDelete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "current$", "type": "Observable<T>" },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "i18nRoot", "type": "string" },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "itemService", "type": "ItemService<T>" },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService<ConfirmationMessageData>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "notify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "DeleteItemModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "DisableInfoComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "disableInfoService",
            "type": "DisableInfoService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!DisableInfoService:class",
            "shortType": "DisableInfoService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "current$", "type": "Observable<T>" },
      {
        "kind": "Property",
        "name": "defaultInfoConfig",
        "type": "{\n        disabledCreate: boolean;\n        disabledEdit: boolean;\n        disabledEnable: boolean;\n        disabledDisable: boolean;\n    }"
      },
      {
        "kind": "Property",
        "name": "disableInfoService",
        "type": "DisableInfoService<T>"
      },
      { "kind": "Property", "name": "displayCustomInfo", "type": "boolean" },
      {
        "kind": "Method",
        "name": "displayDisabledCreate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayDisabledDisable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayDisabledEdit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayDisabledEnable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "displayInfoConfig",
        "type": "{\n        disabledCreate?: boolean;\n        disabledEdit?: boolean;\n        disabledEnable?: boolean;\n        disabledDisable?: boolean;\n    }"
      },
      { "kind": "Property", "name": "i18nRoot", "type": "string" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "itemService", "type": "ItemService<T>" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "DisableInfoModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "DisableInfoService",
    "members": [
      {
        "kind": "Method",
        "name": "isItemDisabled",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isParentDisabled",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRootUnit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "FormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "animateBack", "type": "boolean" },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          },
          {
            "name": "card",
            "type": "CardComponent<any>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CardComponent:class",
            "shortType": "CardComponent",
            "importPath": "@spartacus/organization/administration/components"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "disabled$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      { "kind": "Property", "name": "i18n", "type": "string" },
      { "kind": "Property", "name": "i18nRoot", "type": "string" },
      { "kind": "Property", "name": "itemService", "type": "ItemService<T>" },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "notify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "action",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setI18nRoot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subtitle", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "FormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "FormService",
    "members": [
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "defaultValue", "type": "T" },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "FormGroup"
      },
      {
        "kind": "Method",
        "name": "patchData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ItemActiveDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "handleDisabledItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "BaseItem",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!BaseItem:type",
            "shortType": "BaseItem",
            "importPath": "@spartacus/organization/administration/components"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "itemService", "type": "ItemService<T>" },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ItemExistsDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "handleErrorMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "itemService", "type": "ItemService<T>" },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentItemService:class",
            "shortType": "CurrentItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "FormService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!FormService:class",
            "shortType": "FormService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildRouteParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<T>>"
      },
      { "kind": "Property", "name": "current$", "type": "Observable<T>" },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentItemService<T>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "additionalParam",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<T>>"
      },
      { "kind": "Property", "name": "error$", "type": "Observable<boolean>" },
      { "kind": "Property", "name": "formService", "type": "FormService<T>" },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "FormGroup"
      },
      {
        "kind": "Method",
        "name": "getRouterParam",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "key$", "type": "Observable<string>" },
      {
        "kind": "Method",
        "name": "launchDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "key",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<T>>"
      },
      {
        "kind": "Method",
        "name": "setEditMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isInEdit",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "unit$", "type": "Observable<string>" },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<T>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "LimitCellComponent",
    "members": [
      { "kind": "Property", "name": "isExceedPermission", "type": "boolean" },
      { "kind": "Property", "name": "isOrderThreshold", "type": "boolean" },
      { "kind": "Property", "name": "isTimeSpanThreshold", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "LinkCellComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "OutletContextData<TableDataOutletContext>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
            "shortType": "OutletContextData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "itemService",
            "type": "ItemService<B2BUnit>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getRouterModel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "uid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<B2BUnit>"
      },
      {
        "kind": "Property",
        "name": "outlet",
        "type": "OutletContextData<TableDataOutletContext>"
      },
      { "kind": "Property", "name": "tabIndex", "type": "number" },
      { "kind": "Property", "name": "unitKey$", "type": "Observable<string>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "ListService<T, P>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ListService:class",
            "shortType": "ListService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "organizationItemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "browse",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "P",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pageNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "currentKey$",
        "type": "Observable<string>"
      },
      { "kind": "Property", "name": "domainType", "type": "string" },
      {
        "kind": "Method",
        "name": "getListCount",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "dataTable",
            "type": "Table",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!Table:interface",
            "shortType": "Table",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "number"
      },
      { "kind": "Property", "name": "hasGhostData", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Method",
        "name": "launchItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "listData$",
        "type": "Observable<EntitiesModel<T>>"
      },
      {
        "kind": "Property",
        "name": "organizationItemService",
        "type": "ItemService<T>"
      },
      { "kind": "Property", "name": "service", "type": "ListService<T, P>" },
      {
        "kind": "Method",
        "name": "sort",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "P",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "sortCode", "type": "string" },
      {
        "kind": "Property",
        "name": "structure$",
        "type": "Observable<TableStructure>"
      },
      {
        "kind": "Property",
        "name": "viewType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ListService",
    "members": [
      { "kind": "Property", "name": "_domainType", "type": "string" },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "defaultTableStructure",
        "type": "ResponsiveTableConfiguration"
      },
      { "kind": "Property", "name": "domainType", "type": "string" },
      {
        "kind": "Method",
        "name": "getData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "args",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<T>>"
      },
      {
        "kind": "Method",
        "name": "getStructure",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<TableStructure>"
      },
      { "kind": "Property", "name": "ghostData", "type": "EntitiesModel<T>" },
      {
        "kind": "Method",
        "name": "hasGhostData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "EntitiesModel<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "key",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "args",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<T>>"
      },
      { "kind": "Property", "name": "notification$", "type": "Subject<any>" },
      {
        "kind": "Property",
        "name": "pagination$",
        "type": "BehaviorSubject<P>"
      },
      {
        "kind": "Method",
        "name": "sort",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "P",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "_obsoleteSort",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Method",
        "name": "view",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "P",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "nextPage",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "viewType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "MessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "messageService",
            "type": "MessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "renderService",
            "type": "MessageRenderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageRenderService:class",
            "shortType": "MessageRenderService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "kind": "Method",
        "name": "ngAfterViewInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "msg",
            "type": "MessageData",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageData:class",
            "shortType": "MessageData",
            "importPath": "@spartacus/organization/administration/components"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "renderService",
        "type": "MessageRenderService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "terminate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ref",
            "type": "ComponentRef<BaseMessageComponent>",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentRef:class",
            "shortType": "ComponentRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "MessageData",
    "members": [
      { "kind": "Property", "name": "cancel", "type": "Translatable" },
      { "kind": "Property", "name": "component", "type": "Type<T>" },
      { "kind": "Property", "name": "confirm", "type": "Translatable" },
      { "kind": "Property", "name": "events", "type": "Subject<O>" },
      { "kind": "Property", "name": "message", "type": "Translatable" },
      { "kind": "Property", "name": "messageIcon", "type": "ICON_TYPE" },
      { "kind": "Property", "name": "messageTitle", "type": "Translatable" },
      { "kind": "Property", "name": "timeout", "type": "number" },
      { "kind": "Property", "name": "type", "type": "GlobalMessageType" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Interface",
    "name": "MessageEventData",
    "members": [
      { "kind": "PropertySignature", "name": "close", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "MessageModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "MessageRenderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentFactoryResolver:class",
            "shortType": "ComponentFactoryResolver",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentFactoryResolver",
        "type": "ComponentFactoryResolver"
      },
      {
        "kind": "Method",
        "name": "getComponent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "msg",
            "type": "MessageData",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageData:class",
            "shortType": "MessageData",
            "importPath": "@spartacus/organization/administration/components"
          }
        ],
        "returnType": "ComponentFactory<any>"
      },
      {
        "kind": "Method",
        "name": "getInjector",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "MessageData",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageData:class",
            "shortType": "MessageData",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "parent",
            "type": "Injector",
            "isOptional": true,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Injector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "MessageService",
    "members": [
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "message",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Subject<O>"
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "message",
            "type": "Subject<MessageEventData>",
            "isOptional": false,
            "canonicalReference": "rxjs!Subject:class",
            "shortType": "Subject",
            "importPath": "rxjs"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "data$",
        "type": "ReplaySubject<MessageData>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<MessageData>"
      },
      {
        "kind": "Method",
        "name": "getDefaultMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "message",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "MessageData"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "NotificationMessageComponent",
    "members": [
      { "kind": "Property", "name": "closeIcon", "type": "ICON_TYPE" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "NotificationMessageModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Enum",
    "name": "OrganizationTableType",
    "members": [
      "BUDGET",
      "BUDGET_ASSIGNED_COST_CENTERS",
      "COST_CENTER",
      "COST_CENTER_ASSIGNED_BUDGETS",
      "COST_CENTER_BUDGETS",
      "PERMISSION",
      "UNIT",
      "UNIT_ADDRESS",
      "UNIT_APPROVERS",
      "UNIT_ASSIGNED_APPROVERS",
      "UNIT_CHILDREN",
      "UNIT_COST_CENTERS",
      "UNIT_USERS",
      "USER",
      "USER_APPROVERS",
      "USER_ASSIGNED_APPROVERS",
      "USER_ASSIGNED_PERMISSIONS",
      "USER_ASSIGNED_USER_GROUPS",
      "USER_GROUP",
      "USER_GROUP_ASSIGNED_PERMISSIONS",
      "USER_GROUP_ASSIGNED_USERS",
      "USER_GROUP_PERMISSIONS",
      "USER_GROUP_USERS",
      "USER_PERMISSIONS",
      "USER_USER_GROUPS"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "permissionCmsConfig",
    "type": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionDetailsCellComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionDetailsCellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<Permission>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<Permission>"
      },
      { "kind": "Property", "name": "model$", "type": "Observable<Permission>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<Permission>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "currencyService",
            "type": "CurrencyService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrencyService:class",
            "shortType": "CurrencyService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "permissionService",
            "type": "PermissionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PermissionService:class",
            "shortType": "PermissionService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currencies$",
        "type": "Observable<Currency[]>"
      },
      {
        "kind": "Property",
        "name": "currencyService",
        "type": "CurrencyService"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<Permission>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "periods", "type": "string[]" },
      {
        "kind": "Property",
        "name": "permissionService",
        "type": "PermissionService"
      },
      {
        "kind": "Property",
        "name": "types$",
        "type": "Observable<OrderApprovalPermissionType[]>"
      },
      {
        "kind": "Property",
        "name": "units$",
        "type": "Observable<B2BUnitNode[]>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionFormService",
    "members": [
      {
        "kind": "Method",
        "name": "amend",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "code",
            "type": "PermissionType",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PermissionType:enum",
            "shortType": "PermissionType",
            "importPath": "@spartacus/organization/administration/components"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "defaultValue", "type": "Permission" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "patchData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentPermissionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentPermissionService:class",
            "shortType": "CurrentPermissionService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "PermissionFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PermissionFormService:class",
            "shortType": "PermissionFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "permissionService",
            "type": "PermissionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PermissionService:class",
            "shortType": "PermissionService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Permission>>"
      },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentPermissionService"
      },
      {
        "kind": "Property",
        "name": "formService",
        "type": "PermissionFormService"
      },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Property",
        "name": "permissionService",
        "type": "PermissionService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Permission>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "PermissionListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "permissionsService",
            "type": "PermissionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PermissionService:class",
            "shortType": "PermissionService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convertPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ pagination, sorts, values, }",
            "type": "EntitiesModel<UserGroup>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<PermissionModel>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<PermissionModel>>"
      },
      {
        "kind": "Property",
        "name": "permissionsService",
        "type": "PermissionService"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Interface",
    "name": "PermissionModel",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "currency",
        "type": "{\n        symbol: string;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "orderApprovalPermissionType",
        "type": "{\n        name: string;\n    }"
      },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "any" },
      { "kind": "PropertySignature", "name": "periodRange", "type": "any" },
      { "kind": "PropertySignature", "name": "threshold", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "permissionTableConfig",
    "type": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Function",
    "name": "permissionTableConfigFactory",
    "parameters": [],
    "returnType": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Enum",
    "name": "PermissionType",
    "members": ["EXCEEDED", "ORDER", "TIME_SPAN"]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "RolesCellComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "SharedOrganizationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "StatusCellComponent",
    "members": [
      { "kind": "Property", "name": "isActive", "type": "boolean" },
      {
        "kind": "Property",
        "name": "label",
        "type": "\"organization.enabled\" | \"organization.disabled\""
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "SubListComponent",
    "members": [
      {
        "kind": "Property",
        "name": "dataStructure$",
        "type": "Observable<TableStructure>"
      },
      { "kind": "Property", "name": "hasGhostData", "type": "boolean" },
      { "kind": "Property", "name": "hostClass", "type": "string" },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Property",
        "name": "listData$",
        "type": "Observable<EntitiesModel<any>>"
      },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      { "kind": "Property", "name": "previous", "type": "boolean | string" },
      { "kind": "Property", "name": "showHint", "type": "boolean" },
      { "kind": "Property", "name": "subKey$", "type": "Observable<string>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "SubListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "SubListService",
    "members": [
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "_args",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<T>>"
      },
      {
        "kind": "Property",
        "name": "defaultTableStructure",
        "type": "ResponsiveTableConfiguration"
      },
      {
        "kind": "Method",
        "name": "filterSelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "list",
            "type": "EntitiesModel<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<T>"
      },
      { "kind": "Property", "name": "ghostData", "type": "EntitiesModel<T>" },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "_args",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<T>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ToggleLinkCellComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "OutletContextData<TableDataOutletContext>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
            "shortType": "OutletContextData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "unitTreeService",
            "type": "UnitTreeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitTreeService:class",
            "shortType": "UnitTreeService",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "combinedName", "type": "string" },
      { "kind": "Property", "name": "count", "type": "any" },
      { "kind": "Property", "name": "depthLevel", "type": "any" },
      { "kind": "Property", "name": "expanded", "type": "any" },
      { "kind": "Property", "name": "hasItem", "type": "boolean" },
      { "kind": "Property", "name": "isSwitchable", "type": "boolean" },
      { "kind": "Property", "name": "item", "type": "B2BUnit | null" },
      {
        "kind": "Property",
        "name": "outlet",
        "type": "OutletContextData<TableDataOutletContext>"
      },
      { "kind": "Property", "name": "tabIndex", "type": "number" },
      {
        "kind": "Method",
        "name": "toggleItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "unitTreeService",
        "type": "UnitTreeService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ToggleStatusComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "messageService",
            "type": "MessageService<ConfirmationMessageData>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "disableInfoService",
            "type": "DisableInfoService<T>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!DisableInfoService:class",
            "shortType": "DisableInfoService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "confirmation",
        "type": "Subject<ConfirmationMessageData>"
      },
      { "kind": "Property", "name": "current$", "type": "Observable<T>" },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      {
        "kind": "Property",
        "name": "disableInfoService",
        "type": "DisableInfoService<T>"
      },
      {
        "kind": "Method",
        "name": "getPatchedItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "T"
      },
      { "kind": "Property", "name": "i18nRoot", "type": "string" },
      {
        "kind": "Method",
        "name": "isDisabled",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "itemService", "type": "ItemService<T>" },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService<ConfirmationMessageData>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "notify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "toggle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "ToggleStatusModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<Address>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "currentUnitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentUnitService",
        "type": "CurrentUnitService"
      },
      {
        "kind": "Method",
        "name": "getCountry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoCode",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Country>"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<Address>"
      },
      { "kind": "Property", "name": "model$", "type": "Observable<Address>" },
      { "kind": "Property", "name": "unit$", "type": "Observable<B2BUnit>" },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<Address>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "formService",
            "type": "UnitAddressFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitAddressFormService:class",
            "shortType": "UnitAddressFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "currentUnitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "countries$",
        "type": "Observable<Country[]>"
      },
      {
        "kind": "Property",
        "name": "currentUnitService",
        "type": "CurrentUnitService"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "formService",
        "type": "UnitAddressFormService"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<Address>"
      },
      { "kind": "Property", "name": "key$", "type": "Observable<string>" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "regions$",
        "type": "Observable<Region[]>"
      },
      { "kind": "Property", "name": "titles$", "type": "Observable<Title[]>" },
      { "kind": "Property", "name": "unit$", "type": "Observable<B2BUnit>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressFormService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userProfileFacade",
            "type": "UserProfileFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserProfileFacade:class",
            "shortType": "UserProfileFacade",
            "importPath": "@spartacus/user/profile/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getCountries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "getRegions",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Region[]>"
      },
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      {
        "kind": "Property",
        "name": "userProfileFacade",
        "type": "UserProfileFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentUnitAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitAddressService:class",
            "shortType": "CurrentUnitAddressService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "UnitAddressFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitAddressFormService:class",
            "shortType": "UnitAddressFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Address>>"
      },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentUnitAddressService"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "unitUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Address>>"
      },
      {
        "kind": "Property",
        "name": "formService",
        "type": "UnitAddressFormService"
      },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "launchDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "launchList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "unitRouteParam$",
        "type": "Observable<string>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Address>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressListComponent",
    "members": [{ "kind": "Property", "name": "routerKey", "type": "string" }]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "orgUnitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Address>>"
      },
      {
        "kind": "Property",
        "name": "orgUnitService",
        "type": "OrgUnitService"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAddressModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitApproverListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitApproverListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitApproverListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAssignedApproverListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitAssignedApproverListService",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitCellComponent",
    "members": [{ "kind": "Property", "name": "property", "type": "any" }]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitChildCreateComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "unitKey$", "type": "Observable<string>" },
      {
        "kind": "Property",
        "name": "unitService",
        "type": "CurrentUnitService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitChildCreateModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitChildItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentUnitChildService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitChildService:class",
            "shortType": "CurrentUnitChildService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "UnitFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitFormService:class",
            "shortType": "UnitFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildRouteParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        uid: string;\n    }"
      },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentUnitChildService"
      },
      { "kind": "Property", "name": "formService", "type": "UnitFormService" },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "key",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUnit>>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitChildrenComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentUnitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentUnitService",
        "type": "CurrentUnitService"
      },
      { "kind": "Property", "name": "unit$", "type": "Observable<B2BUnit>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitChildrenModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitChildrenService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "orgUnitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUnitNode>>"
      },
      {
        "kind": "Property",
        "name": "orgUnitService",
        "type": "OrgUnitService"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitCostCenterCreateComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "unitKey$", "type": "Observable<string>" },
      {
        "kind": "Property",
        "name": "unitService",
        "type": "CurrentUnitService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitCostCenterCreateModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitCostCenterItemService",
    "members": [
      {
        "kind": "Method",
        "name": "buildRouteParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        uid: string;\n    }"
      },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "key",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<CostCenter>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitCostCenterListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentUnitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentUnitService",
        "type": "CurrentUnitService"
      },
      { "kind": "Property", "name": "unit$", "type": "Observable<B2BUnit>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitCostCenterListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitCostCenterListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitDetailsCellComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitDetailsCellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<B2BUnit>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<B2BUnit>"
      },
      { "kind": "Property", "name": "model$", "type": "Observable<B2BUnit>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<B2BUnit>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "approvalProcess$",
        "type": "Observable<B2BApprovalProcess[]>"
      },
      { "kind": "Property", "name": "createChildUnit", "type": "boolean" },
      {
        "kind": "Method",
        "name": "createUidWithName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "name",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          },
          {
            "name": "code",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      { "kind": "Property", "name": "i18nRoot", "type": "string" },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "units$",
        "type": "Observable<B2BUnitNode[]>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitFormService",
    "members": [
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isRootUnit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "patchData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUnit",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleParentUnit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUnit",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "UnitFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitFormService:class",
            "shortType": "UnitFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUnit>>"
      },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentUnitService"
      },
      { "kind": "Property", "name": "formService", "type": "UnitFormService" },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUnit>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitTreeService",
            "type": "UnitTreeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitTreeService:class",
            "shortType": "UnitTreeService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "collapseAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "expandAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "unitTreeService",
        "type": "UnitTreeService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "unitItemService",
            "type": "UnitItemService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitItemService:class",
            "shortType": "UnitItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitTreeService",
            "type": "UnitTreeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitTreeService:class",
            "shortType": "UnitTreeService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convertListItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unit",
            "type": "B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          },
          {
            "name": "depthLevel",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pagination",
            "type": "{\n        totalResults: number;\n    }",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "EntitiesModel<B2BUnitTreeNode>"
      },
      {
        "kind": "Method",
        "name": "key",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<EntitiesModel<B2BUnitTreeNode>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Property",
        "name": "unitItemService",
        "type": "UnitItemService"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" },
      {
        "kind": "Property",
        "name": "unitTreeService",
        "type": "UnitTreeService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "unitsCmsConfig",
    "type": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitsComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "unitsTableConfig",
    "type": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Function",
    "name": "unitsTableConfigFactory",
    "parameters": [],
    "returnType": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserCreateComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "unitKey$", "type": "Observable<string>" },
      {
        "kind": "Property",
        "name": "unitService",
        "type": "CurrentUnitService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserCreateModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentUnitService",
            "type": "CurrentUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitService:class",
            "shortType": "CurrentUnitService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentUnitService",
        "type": "CurrentUnitService"
      },
      { "kind": "Property", "name": "routerKey", "type": "string" },
      { "kind": "Property", "name": "unit$", "type": "Observable<B2BUnit>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserRolesCellComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "OutletContextData<TableDataOutletContext>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OutletContextData:class",
            "shortType": "OutletContextData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "itemService",
            "type": "ItemService<B2BUnit>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getRouterModel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "uid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<B2BUnit>"
      },
      {
        "kind": "Property",
        "name": "outlet",
        "type": "OutletContextData<TableDataOutletContext>"
      },
      { "kind": "Property", "name": "unitKey$", "type": "Observable<string>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserRolesFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<B2BUser>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "formService",
            "type": "UnitUserRolesFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitUserRolesFormService:class",
            "shortType": "UnitUserRolesFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "userItemService",
            "type": "UserItemService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserItemService:class",
            "shortType": "UserItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "availableRoles", "type": "B2BUserRole[]" },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "formService",
        "type": "UnitUserRolesFormService"
      },
      { "kind": "Property", "name": "item", "type": "B2BUser" },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<B2BUser>"
      },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "kind": "Method",
        "name": "notify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userItemService",
        "type": "UserItemService"
      },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserRolesFormService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "availableRoles", "type": "B2BUserRole[]" },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUser",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormGroup"
      },
      {
        "kind": "Method",
        "name": "patchData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserRolesItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentUnitUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUnitUserService:class",
            "shortType": "CurrentUnitUserService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "UnitUserRolesFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UnitUserRolesFormService:class",
            "shortType": "UnitUserRolesFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "b2bUserService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "b2bUserService",
        "type": "B2BUserService"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_customer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentUnitUserService"
      },
      {
        "kind": "Property",
        "name": "formService",
        "type": "UnitUserRolesFormService"
      },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "key",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "_user",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUserRolesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UnitUsersModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserApproverListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserApproverListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserApproverListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserAssignedApproverListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserAssignedApproverListService",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserAssignedPermissionListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserAssignedPermissionListService",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserAssignedUserGroupListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserAssignedUserGroupListService",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserChangePasswordFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "UserItemService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserItemService:class",
            "shortType": "UserItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "formService",
            "type": "UserChangePasswordFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserChangePasswordFormService:class",
            "shortType": "UserChangePasswordFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "messageService",
            "type": "MessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!MessageService:class",
            "shortType": "MessageService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "formService",
        "type": "UserChangePasswordFormService"
      },
      { "kind": "Property", "name": "itemService", "type": "UserItemService" },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "MessageService"
      },
      {
        "kind": "Method",
        "name": "notify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserChangePasswordFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserChangePasswordFormService",
    "members": [
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "User",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_components!User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormGroup"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "userCmsConfig",
    "type": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserDetailsCellComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserDetailsCellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<B2BUser>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<B2BUser>"
      },
      { "kind": "Property", "name": "model$", "type": "Observable<B2BUser>" },
      {
        "kind": "Property",
        "name": "userGuardSubscription",
        "type": "Subscription"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<B2BUser>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "b2bUserService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "availableRoles", "type": "B2BUserRole[]" },
      {
        "kind": "Property",
        "name": "b2bUserService",
        "type": "B2BUserService"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "isAssignedToApprovers",
        "type": "FormControl"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "roles", "type": "FormArray" },
      { "kind": "Property", "name": "titles$", "type": "Observable<Title[]>" },
      {
        "kind": "Property",
        "name": "units$",
        "type": "Observable<B2BUnitNode[]>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" },
      {
        "kind": "Method",
        "name": "updateRoles",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserFormService",
    "members": [
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "patchData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupAssignedPermissionListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupAssignedPermissionsListService",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupAssignedUserListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupAssignedUserListService",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "userGroupCmsConfig",
    "type": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupDetailsCellComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupDetailsCellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<UserGroup>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isInEditMode$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<UserGroup>"
      },
      { "kind": "Property", "name": "model$", "type": "Observable<UserGroup>" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "itemService",
            "type": "ItemService<UserGroup>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!ItemService:class",
            "shortType": "ItemService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "unitService",
            "type": "OrgUnitService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!OrgUnitService:class",
            "shortType": "OrgUnitService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "createUidWithName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "name",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          },
          {
            "name": "code",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "itemService",
        "type": "ItemService<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "units$",
        "type": "Observable<B2BUnitNode[]>"
      },
      { "kind": "Property", "name": "unitService", "type": "OrgUnitService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupFormService",
    "members": [
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentUserGroupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUserGroupService:class",
            "shortType": "CurrentUserGroupService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "UserGroupFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroupFormService:class",
            "shortType": "UserGroupFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "userGroupService",
            "type": "UserGroupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroupService:class",
            "shortType": "UserGroupService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentUserGroupService"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "formService",
        "type": "UserGroupFormService"
      },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "launchList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "userGroupService",
        "type": "UserGroupService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "userGroupService",
            "type": "UserGroupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroupService:class",
            "shortType": "UserGroupService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convertUserGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ pagination, sorts, values, }",
            "type": "EntitiesModel<UserGroup>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<UserGroupModel>"
      },
      {
        "kind": "Method",
        "name": "key",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroupModel>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Property",
        "name": "userGroupService",
        "type": "UserGroupService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Interface",
    "name": "UserGroupModel",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "any" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupPermissionListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupPermissionListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "userGroupService",
            "type": "UserGroupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroupService:class",
            "shortType": "UserGroupService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "permissionService",
            "type": "PermissionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PermissionService:class",
            "shortType": "PermissionService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Property",
        "name": "permissionService",
        "type": "PermissionService"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "userGroupService",
        "type": "UserGroupService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupPermissionModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "userGroupTableConfig",
    "type": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Function",
    "name": "userGroupTableConfigFactory",
    "parameters": [],
    "returnType": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupUserListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentUserGroupService",
            "type": "CurrentUserGroupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUserGroupService:class",
            "shortType": "CurrentUserGroupService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "userGroupUserListService",
            "type": "UserGroupUserListService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroupUserListService:class",
            "shortType": "UserGroupUserListService",
            "importPath": "@spartacus/organization/administration/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentUserGroupService",
        "type": "CurrentUserGroupService"
      },
      {
        "kind": "Method",
        "name": "notify",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subList", "type": "SubListComponent" },
      {
        "kind": "Method",
        "name": "unassignAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userGroupUserListService",
        "type": "UserGroupUserListService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupUserListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "userGroupService",
            "type": "UserGroupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroupService:class",
            "shortType": "UserGroupService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "unassignAllMembers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "userGroupService",
        "type": "UserGroupService"
      },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserGroupUserModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserItemService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentItemService",
            "type": "CurrentUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!CurrentUserService:class",
            "shortType": "CurrentUserService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formService",
            "type": "UserFormService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserFormService:class",
            "shortType": "UserFormService",
            "importPath": "@spartacus/organization/administration/components"
          },
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      {
        "kind": "Property",
        "name": "currentItemService",
        "type": "CurrentUserService"
      },
      { "kind": "Property", "name": "formService", "type": "UserFormService" },
      {
        "kind": "Method",
        "name": "getDetailsRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "launchDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserListService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convertUsers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ pagination, sorts, values, }",
            "type": "EntitiesModel<B2BUser>",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<UserModel>"
      },
      {
        "kind": "Method",
        "name": "key",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserModel>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Interface",
    "name": "UserModel",
    "members": [
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "any" },
      { "kind": "PropertySignature", "name": "roles", "type": "string[]" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserPermissionListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserPermissionListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserPermissionListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "permissionService",
            "type": "PermissionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PermissionService:class",
            "shortType": "PermissionService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Permission>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Property",
        "name": "permissionService",
        "type": "PermissionService"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Permission>>"
      },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Variable",
    "name": "userTableConfig",
    "type": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Function",
    "name": "userTableConfigFactory",
    "parameters": [],
    "returnType": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserUserGroupListComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserUserGroupListService",
    "members": [
      {
        "kind": "Property",
        "name": "_domainType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableService",
            "type": "TableService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!TableService:class",
            "shortType": "TableService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "userService",
            "type": "B2BUserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!B2BUserService:class",
            "shortType": "B2BUserService",
            "importPath": "@spartacus/organization/administration/core"
          },
          {
            "name": "userGroupService",
            "type": "UserGroupService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!UserGroupService:class",
            "shortType": "UserGroupService",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_components!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      { "kind": "Property", "name": "tableService", "type": "TableService" },
      {
        "kind": "Property",
        "name": "tableType",
        "type": "OrganizationTableType"
      },
      {
        "kind": "Method",
        "name": "unassign",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "userGroupService",
        "type": "UserGroupService"
      },
      { "kind": "Property", "name": "userService", "type": "B2BUserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/components",
    "kind": "Class",
    "name": "UserUserGroupsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ADDRESS_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ADDRESS_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AdminGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "userService", "type": "UserService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AdministrationCoreModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<AdministrationCoreModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2B_USER_APPROVERS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2B_USER_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2B_USER_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2B_USER_NORMALIZER",
    "type": "InjectionToken<Converter<any, B2BUser>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2B_USER_PERMISSIONS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2B_USER_SERIALIZER",
    "type": "InjectionToken<Converter<B2BUser, any>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2B_USER_USER_GROUPS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2B_USERS_NORMALIZER",
    "type": "InjectionToken<Converter<any, EntitiesModel<B2BUser>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2BUNIT_APPROVAL_PROCESSES_NORMALIZER",
    "type": "InjectionToken<Converter<any, B2BApprovalProcess[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2BUNIT_NODE_LIST_NORMALIZER",
    "type": "InjectionToken<Converter<any, B2BUnitNode[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2BUNIT_NODE_NORMALIZER",
    "type": "InjectionToken<Converter<any, B2BUnitNode>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2BUNIT_NORMALIZER",
    "type": "InjectionToken<Converter<any, B2BUnit>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "B2BUNIT_SERIALIZER",
    "type": "InjectionToken<Converter<B2BUnit, any>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "B2BUnitNode",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "children",
        "type": "B2BUnitNode[]"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "parent", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "B2BUnitTreeNode",
    "members": [
      { "kind": "PropertySignature", "name": "count", "type": "number" },
      { "kind": "PropertySignature", "name": "depthLevel", "type": "number" },
      { "kind": "PropertySignature", "name": "expanded", "type": "boolean" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "B2BUserActions"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_APPROVER_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_APPROVER_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_APPROVER",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_PERMISSION_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_PERMISSION_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_PERMISSION",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_USER_GROUP_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_USER_GROUP_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_B2B_USER_USER_GROUP",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserApprover",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        approverId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        approverId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserApproverFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        approverId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        approverId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserApproverSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        approverId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        approverId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserPermission",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        permissionId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        permissionId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserPermissionFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        permissionId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        permissionId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserPermissionSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        permissionId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        permissionId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserUserGroup",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        userGroupId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        userGroupId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserUserGroupFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        userGroupId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        userGroupId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignB2BUserUserGroupSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        uid: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        uid: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "TypeAlias",
    "name": "B2BUserAction",
    "namespace": "B2BUserActions",
    "members": [
      "LoadB2BUser",
      " | ",
      "LoadB2BUserFail",
      " | ",
      "LoadB2BUserSuccess",
      " | ",
      "CreateB2BUser",
      " | ",
      "CreateB2BUserFail",
      " | ",
      "CreateB2BUserSuccess",
      " | ",
      "UpdateB2BUser",
      " | ",
      "UpdateB2BUserFail",
      " | ",
      "UpdateB2BUserSuccess",
      " | ",
      "LoadB2BUsers",
      " | ",
      "LoadB2BUsersFail",
      " | ",
      "LoadB2BUsersSuccess",
      " | ",
      "LoadB2BUserApprovers",
      " | ",
      "LoadB2BUserApproversFail",
      " | ",
      "LoadB2BUserApproversSuccess",
      " | ",
      "AssignB2BUserApprover",
      " | ",
      "AssignB2BUserApproverFail",
      " | ",
      "AssignB2BUserApproverSuccess",
      " | ",
      "UnassignB2BUserApprover",
      " | ",
      "UnassignB2BUserApproverFail",
      " | ",
      "UnassignB2BUserApproverSuccess",
      " | ",
      "LoadB2BUserPermissions",
      " | ",
      "LoadB2BUserPermissionsFail",
      " | ",
      "LoadB2BUserPermissionsSuccess",
      " | ",
      "AssignB2BUserPermission",
      " | ",
      "AssignB2BUserPermissionFail",
      " | ",
      "AssignB2BUserPermissionSuccess",
      " | ",
      "UnassignB2BUserPermission",
      " | ",
      "UnassignB2BUserPermissionFail",
      " | ",
      "UnassignB2BUserPermissionSuccess",
      " | ",
      "LoadB2BUserUserGroups",
      " | ",
      "LoadB2BUserUserGroupsFail",
      " | ",
      "LoadB2BUserUserGroupsSuccess",
      " | ",
      "AssignB2BUserUserGroup",
      " | ",
      "AssignB2BUserUserGroupFail",
      " | ",
      "AssignB2BUserUserGroupSuccess",
      " | ",
      "UnassignB2BUserUserGroup",
      " | ",
      "UnassignB2BUserUserGroupFail",
      " | ",
      "UnassignB2BUserUserGroupSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_B2B_USER_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_B2B_USER_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_B2B_USER",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateB2BUser",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomer: B2BUser;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomer: B2BUser;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateB2BUserFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateB2BUserSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BUser" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_APPROVERS_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_APPROVERS_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_APPROVERS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_PERMISSIONS_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_PERMISSIONS_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_PERMISSIONS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_USER_GROUPS_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_USER_GROUPS_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER_USER_GROUPS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USER",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USERS_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USERS_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_B2B_USERS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUser",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserApprovers",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserApproversFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserApproversSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserPermissions",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserPermissionsFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserPermissionsSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUsers",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUsersFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUsersSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BUser | B2BUser[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BUser | B2BUser[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserUserGroups",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserUserGroupsFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadB2BUserUserGroupsSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_APPROVER_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_APPROVER_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_APPROVER",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_PERMISSION_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_PERMISSION_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_PERMISSION",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_USER_GROUP_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_USER_GROUP_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_B2B_USER_USER_GROUP",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserApprover",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        approverId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        approverId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserApproverFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        approverId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        approverId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserApproverSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        approverId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        approverId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserPermission",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        permissionId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        permissionId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserPermissionFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        permissionId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        permissionId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserPermissionSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        permissionId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        permissionId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserUserGroup",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        userGroupId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        userGroupId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserUserGroupFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        userGroupId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        userGroupId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignB2BUserUserGroupSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        uid: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        uid: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_B2B_USER_FAIL",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_B2B_USER_SUCCESS",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_B2B_USER",
    "namespace": "B2BUserActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateB2BUser",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        orgCustomer: B2BUser;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        orgCustomer: B2BUser;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateB2BUserFail",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateB2BUserSuccess",
    "namespace": "B2BUserActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BUser" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "B2BUserAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignUserGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "loadApprovers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "loadPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "loadUserGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignUserGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUser>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "B2BUserConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "B2BUserAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUserAdapter:class",
            "shortType": "B2BUserAdapter",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "B2BUserAdapter" },
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignUserGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "getApprovers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "getPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "getUserGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignUserGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUser>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "B2BUserManagement",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "approvers",
        "type": "StateUtils.EntityLoaderState<ListModel>"
      },
      {
        "kind": "PropertySignature",
        "name": "permissions",
        "type": "StateUtils.EntityLoaderState<ListModel>"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroups",
        "type": "StateUtils.EntityLoaderState<ListModel>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "B2BUserSelectors"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BUserApprovers",
    "namespace": "B2BUserSelectors",
    "type": "(code: string, params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<B2BUser>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BUserManagementState",
    "namespace": "B2BUserSelectors",
    "type": "MemoizedSelector<StateWithOrganization, B2BUserManagement>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BUserPermissions",
    "namespace": "B2BUserSelectors",
    "type": "(code: string, params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<Permission>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BUsersState",
    "namespace": "B2BUserSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<B2BUser>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BUserState",
    "namespace": "B2BUserSelectors",
    "type": "(orgCustomerId: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUser>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BUserUserGroups",
    "namespace": "B2BUserSelectors",
    "type": "(code: string, params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<UserGroup>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BUserValue",
    "namespace": "B2BUserSelectors",
    "type": "(orgCustomerId: string) => MemoizedSelector<StateWithOrganization, B2BUser>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getUserList",
    "namespace": "B2BUserSelectors",
    "type": "(params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<B2BUser>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "B2BUserService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrganization | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assignUserGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "getAllRoles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "B2BUserRole[]"
      },
      {
        "kind": "Method",
        "name": "getApprovers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "getErrorState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "getLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "getPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "getUserGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadApprovers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadUserGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithOrganization | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unassignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unassignUserGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "BUDGET_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "BUDGET_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "BUDGET_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "BUDGET_NORMALIZER",
    "type": "InjectionToken<Converter<any, Budget>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "BUDGET_SERIALIZER",
    "type": "InjectionToken<Converter<Budget, any>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "Budget",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "budget", "type": "number" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "costCenters",
        "type": "CostCenter[]"
      },
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      { "kind": "PropertySignature", "name": "endDate", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "B2BUnit" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "startDate", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "BudgetActions"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "TypeAlias",
    "name": "BudgetAction",
    "namespace": "BudgetActions",
    "members": [
      "LoadBudget",
      " | ",
      "LoadBudgetFail",
      " | ",
      "LoadBudgetSuccess",
      " | ",
      "LoadBudgets",
      " | ",
      "LoadBudgetsFail",
      " | ",
      "LoadBudgetsSuccess",
      " | ",
      "CreateBudget",
      " | ",
      "CreateBudgetFail",
      " | ",
      "CreateBudgetSuccess",
      " | ",
      "UpdateBudget",
      " | ",
      "UpdateBudgetFail",
      " | ",
      "UpdateBudgetSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_BUDGET_FAIL",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_BUDGET_SUCCESS",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_BUDGET",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateBudget",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        budget: Budget;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        budget: Budget;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateBudgetFail",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        budgetCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        budgetCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateBudgetSuccess",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Budget" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_BUDGET_FAIL",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_BUDGET_SUCCESS",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_BUDGET",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_BUDGETS_FAIL",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_BUDGETS_SUCCESS",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_BUDGETS",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadBudget",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        budgetCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        budgetCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadBudgetFail",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        budgetCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        budgetCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadBudgets",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadBudgetsFail",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadBudgetsSuccess",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadBudgetSuccess",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Budget | Budget[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Budget | Budget[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_BUDGET_FAIL",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_BUDGET_SUCCESS",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_BUDGET",
    "namespace": "BudgetActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateBudget",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        budgetCode: string;\n        budget: Budget;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        budgetCode: string;\n        budget: Budget;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateBudgetFail",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        budgetCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        budgetCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateBudgetSuccess",
    "namespace": "BudgetActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Budget" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "BudgetAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budget",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budget",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Budget>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "BudgetConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "BudgetAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!BudgetAdapter:class",
            "shortType": "BudgetAdapter",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "BudgetAdapter" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budget",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budget",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Budget>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "BudgetManagement",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "BUDGETS_NORMALIZER",
    "type": "InjectionToken<Converter<any, EntitiesModel<Budget>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "BudgetSelectors"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getBudget",
    "namespace": "BudgetSelectors",
    "type": "(budgetCode: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<Budget>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getBudgetList",
    "namespace": "BudgetSelectors",
    "type": "(params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<Budget>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getBudgetManagementState",
    "namespace": "BudgetSelectors",
    "type": "MemoizedSelector<StateWithOrganization, BudgetManagement>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getBudgetsState",
    "namespace": "BudgetSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<Budget>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getBudgetValue",
    "namespace": "BudgetSelectors",
    "type": "(budgetCode: string) => MemoizedSelector<StateWithOrganization, Budget>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "BudgetService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrganization | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "budget",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "getCostCenters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      },
      {
        "kind": "Method",
        "name": "getErrorState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "budgetCode",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Method",
        "name": "getLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Budget>>"
      },
      {
        "kind": "Method",
        "name": "loadBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadBudgets",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithOrganization | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budget",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "COST_CENTER_ASSIGNED_BUDGETS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "COST_CENTER_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "COST_CENTER_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "COST_CENTER_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "CostCenterActions"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_BUDGET_FAIL",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_BUDGET_SUCCESS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_BUDGET",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignBudget",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        costCenterCode: string;\n        budgetCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        costCenterCode: string;\n        budgetCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignBudgetFail",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        budgetCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        budgetCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignBudgetSuccess",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        code: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        code: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "TypeAlias",
    "name": "CostCenterAction",
    "namespace": "CostCenterActions",
    "members": [
      "LoadCostCenter",
      " | ",
      "LoadCostCenterFail",
      " | ",
      "LoadCostCenterSuccess",
      " | ",
      "LoadCostCenters",
      " | ",
      "LoadCostCentersFail",
      " | ",
      "LoadCostCentersSuccess",
      " | ",
      "CreateCostCenter",
      " | ",
      "CreateCostCenterFail",
      " | ",
      "CreateCostCenterSuccess",
      " | ",
      "UpdateCostCenter",
      " | ",
      "UpdateCostCenterFail",
      " | ",
      "UpdateCostCenterSuccess",
      " | ",
      "LoadAssignedBudgets",
      " | ",
      "LoadAssignedBudgetsSuccess",
      " | ",
      "LoadAssignedBudgetsFail",
      " | ",
      "AssignBudget",
      " | ",
      "AssignBudgetFail",
      " | ",
      "AssignBudgetSuccess",
      " | ",
      "UnassignBudget",
      " | ",
      "UnassignBudgetFail",
      " | ",
      "UnassignBudgetSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_COST_CENTER_FAIL",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_COST_CENTER_SUCCESS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_COST_CENTER",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateCostCenter",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        costCenter: CostCenter;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        costCenter: CostCenter;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateCostCenterFail",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        costCenterCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        costCenterCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateCostCenterSuccess",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CostCenter" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ASSIGNED_BUDGETS_FAIL",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ASSIGNED_BUDGETS_SUCCESS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ASSIGNED_BUDGETS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_COST_CENTER_FAIL",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_COST_CENTER_SUCCESS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_COST_CENTER",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_COST_CENTERS_FAIL",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_COST_CENTERS_SUCCESS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_COST_CENTERS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAssignedBudgets",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        costCenterCode: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        costCenterCode: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAssignedBudgetsFail",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        costCenterCode: string;\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        costCenterCode: string;\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAssignedBudgetsSuccess",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        costCenterCode: string;\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        costCenterCode: string;\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadCostCenter",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        costCenterCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        costCenterCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadCostCenterFail",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        costCenterCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        costCenterCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadCostCenters",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadCostCentersFail",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadCostCentersSuccess",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadCostCenterSuccess",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CostCenter | CostCenter[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CostCenter | CostCenter[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_BUDGET_FAIL",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_BUDGET_SUCCESS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_BUDGET",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignBudget",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        costCenterCode: string;\n        budgetCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        costCenterCode: string;\n        budgetCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignBudgetFail",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        budgetCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        budgetCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignBudgetSuccess",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        code: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        code: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_COST_CENTER_FAIL",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_COST_CENTER_SUCCESS",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_COST_CENTER",
    "namespace": "CostCenterActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateCostCenter",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        costCenterCode: string;\n        costCenter: CostCenter;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        costCenterCode: string;\n        costCenter: CostCenter;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateCostCenterFail",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        costCenterCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        costCenterCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateCostCenterSuccess",
    "namespace": "CostCenterActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "CostCenter" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CostCenterAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "assignBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CostCenter>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CostCenter>"
      },
      {
        "kind": "Method",
        "name": "loadBudgets",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      },
      {
        "kind": "Method",
        "name": "unassignBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CostCenter>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CostCenterConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "CostCenterAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!CostCenterAdapter:class",
            "shortType": "CostCenterAdapter",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "CostCenterAdapter" },
      {
        "kind": "Method",
        "name": "assignBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CostCenter>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CostCenter>"
      },
      {
        "kind": "Method",
        "name": "getBudgets",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      },
      {
        "kind": "Method",
        "name": "unassignBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CostCenter>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "CostCenterManagement",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "budgets",
        "type": "StateUtils.EntityLoaderState<ListModel>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "CostCenterSelectors"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getAssignedBudgets",
    "namespace": "CostCenterSelectors",
    "type": "(code: string, params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<Budget>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getCostCenter",
    "namespace": "CostCenterSelectors",
    "type": "(costCenterCode: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<CostCenter>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getCostCenterList",
    "namespace": "CostCenterSelectors",
    "type": "(params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<CostCenter>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getCostCenterManagementState",
    "namespace": "CostCenterSelectors",
    "type": "MemoizedSelector<StateWithOrganization, CostCenterManagement>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getCostCentersState",
    "namespace": "CostCenterSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<CostCenter>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getCostCenterState",
    "namespace": "CostCenterSelectors",
    "type": "(code: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<CostCenter>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getCostCenterValue",
    "namespace": "CostCenterSelectors",
    "type": "(costCenterCode: string) => MemoizedSelector<StateWithOrganization, Budget>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CostCenterService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrganization | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "getBudgets",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Method",
        "name": "getErrorState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      },
      {
        "kind": "Method",
        "name": "getLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<CostCenter>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadBudgets",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithOrganization | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "unassignBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Enum",
    "name": "LoadStatus",
    "members": ["ERROR", "SUCCESS"]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "Management",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_APPROVAL_PROCESSES_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_APPROVAL_PROCESSES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_ASSIGNED_USERS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_NODE_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_NODE_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_NODES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_TREE_ENTITY",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORG_UNIT_TREE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ORGANIZATION_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "OrganizationActions"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CLEAR_ORGANIZATION_DATA",
    "namespace": "OrganizationActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "TypeAlias",
    "name": "OrganizationAction",
    "namespace": "OrganizationActions",
    "members": ["OrganizationClearData"]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrganizationClearData",
    "namespace": "OrganizationActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrganizationBadRequestHandler",
    "members": [
      { "kind": "Property", "name": "costCenterMask", "type": "RegExp" },
      {
        "kind": "Method",
        "name": "getErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "ErrorModel[]"
      },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleOrganizationConflict",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "mask",
            "type": "RegExp",
            "isOptional": false,
            "canonicalReference": "!RegExp:interface",
            "shortType": "RegExp",
            "importPath": ""
          },
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errorResponse",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "matchMask",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "permissionMask", "type": "RegExp" },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      },
      { "kind": "Property", "name": "unitMask", "type": "RegExp" },
      { "kind": "Property", "name": "unknownMask", "type": "RegExp" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrganizationConflictHandler",
    "members": [
      { "kind": "Property", "name": "budgetMask", "type": "RegExp" },
      {
        "kind": "Method",
        "name": "getErrors",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "ErrorModel[]"
      },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "handleConflict",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "mask",
            "type": "RegExp",
            "isOptional": false,
            "canonicalReference": "!RegExp:interface",
            "shortType": "RegExp",
            "importPath": ""
          },
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "code",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errorResponse",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "matchMask",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpErrorResponse",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpErrorResponse:class",
            "shortType": "HttpErrorResponse",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "responseStatus",
        "type": "HttpResponseStatus"
      },
      { "kind": "Property", "name": "unitMask", "type": "RegExp" },
      { "kind": "Property", "name": "userGroupMask", "type": "RegExp" },
      { "kind": "Property", "name": "userMask", "type": "RegExp" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "OrganizationItemStatus",
    "members": [
      { "kind": "PropertySignature", "name": "item", "type": "T" },
      { "kind": "PropertySignature", "name": "status", "type": "LoadStatus" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrganizationPageMetaModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrganizationPageMetaResolver",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "contentPageMetaResolver",
            "type": "ContentPageMetaResolver",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!ContentPageMetaResolver:class",
            "shortType": "ContentPageMetaResolver",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPath",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breadcrumbs$",
        "type": "Observable<BreadcrumbMeta[]>"
      },
      {
        "kind": "Property",
        "name": "contentPageMetaResolver",
        "type": "ContentPageMetaResolver"
      },
      { "kind": "Property", "name": "ORGANIZATION_SEMANTIC_ROUTE", "type": "" },
      {
        "kind": "Property",
        "name": "ORGANIZATION_TRANSLATION_KEY",
        "type": ""
      },
      {
        "kind": "Property",
        "name": "organizationPageBreadcrumb$",
        "type": "Observable<BreadcrumbMeta[]>"
      },
      { "kind": "Property", "name": "pageTemplate", "type": "string" },
      { "kind": "Property", "name": "pageType", "type": "PageType" },
      {
        "kind": "Method",
        "name": "resolveBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BreadcrumbMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveDescription",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveRobots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PageRobotsMeta[]>"
      },
      {
        "kind": "Method",
        "name": "resolveTitle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "semanticPath",
        "type": "SemanticPathService"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "OrganizationState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "b2bUser",
        "type": "B2BUserManagement"
      },
      {
        "kind": "PropertySignature",
        "name": "budget",
        "type": "BudgetManagement"
      },
      {
        "kind": "PropertySignature",
        "name": "costCenter",
        "type": "CostCenterManagement"
      },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "OrgUnits" },
      {
        "kind": "PropertySignature",
        "name": "permission",
        "type": "PermissionManagement"
      },
      {
        "kind": "PropertySignature",
        "name": "userGroup",
        "type": "UserGroupManagement"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "OrgUnitActions"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_APPROVER_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_APPROVER_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_APPROVER",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_ROLE_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_ROLE_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "ASSIGN_ROLE",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignApprover",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgUnitId: string;\n        orgCustomerId: string;\n        roleId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgUnitId: string;\n        orgCustomerId: string;\n        roleId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignApproverFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignApproverSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        uid: string;\n        roleId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        uid: string;\n        roleId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignRole",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        roleId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        roleId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignRoleFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignRoleSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        uid: string;\n        roleId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        uid: string;\n        roleId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CLEAR_ASSIGNED_USERS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "ClearAssignedUsers",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgUnitId: string;\n        roleId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgUnitId: string;\n        roleId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_ADDRESS_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_ADDRESS_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_ADDRESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_ORG_UNIT_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_ORG_UNIT_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_ORG_UNIT",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateAddress",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgUnitId: string;\n        address: Address;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgUnitId: string;\n        address: Address;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateAddressFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        addressId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        addressId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateAddressSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateUnit",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        unit: B2BUnit;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        unit: B2BUnit;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateUnitFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        unitCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        unitCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateUnitSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BUnit" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "DELETE_ADDRESS_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "DELETE_ADDRESS_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "DELETE_ADDRESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "DeleteAddress",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgUnitId: string;\n        addressId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgUnitId: string;\n        addressId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "DeleteAddressFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        addressId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        addressId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "DeleteAddressSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ADDRESS_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ADDRESSES_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ADDRESSES_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ADDRESSES",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_APPROVAL_PROCESSES_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_APPROVAL_PROCESSES_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_APPROVAL_PROCESSES",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ASSIGNED_USERS_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ASSIGNED_USERS_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ASSIGNED_USERS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ORG_UNIT_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ORG_UNIT_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_ORG_UNIT",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_NODE_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_NODE_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_NODE",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_NODES_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_NODES_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_NODES",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_TREE_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_TREE_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_UNIT_TREE",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAddresses",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgUnitId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgUnitId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAddressesFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgUnitId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgUnitId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAddressesSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        page: ListModel;\n        orgUnitId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        page: ListModel;\n        orgUnitId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAddressSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address | Address[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address | Address[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadApprovalProcesses",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadApprovalProcessesFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadApprovalProcessesSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BApprovalProcess[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BApprovalProcess:interface",
            "shortType": "B2BApprovalProcess",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BApprovalProcess[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAssignedUsers",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgUnitId: string;\n        roleId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgUnitId: string;\n        roleId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAssignedUsersFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgUnitId: string;\n        roleId: string;\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgUnitId: string;\n        roleId: string;\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAssignedUsersSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgUnitId: string;\n        roleId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgUnitId: string;\n        roleId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadOrgUnit",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgUnitId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgUnitId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadOrgUnitFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgUnitId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgUnitId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadOrgUnitNodes",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadOrgUnitNodesFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadOrgUnitNodesSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BUnitNode[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BUnitNode[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadOrgUnitSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BUnit | B2BUnit[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BUnit | B2BUnit[]" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadTree",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadTreeFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadTreeSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BUnitNode" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "TypeAlias",
    "name": "OrgUnitAction",
    "namespace": "OrgUnitActions",
    "members": [
      "LoadOrgUnitNodes",
      " | ",
      "LoadOrgUnitNodesFail",
      " | ",
      "LoadOrgUnitNodesSuccess",
      " | ",
      "LoadOrgUnit",
      " | ",
      "LoadOrgUnitFail",
      " | ",
      "LoadOrgUnitSuccess",
      " | ",
      "CreateUnit",
      " | ",
      "CreateUnitFail",
      " | ",
      "CreateUnitSuccess",
      " | ",
      "UpdateUnit",
      " | ",
      "UpdateUnitFail",
      " | ",
      "UpdateUnitSuccess",
      " | ",
      "LoadTree",
      " | ",
      "LoadTreeSuccess",
      " | ",
      "LoadTreeFail",
      " | ",
      "LoadApprovalProcesses",
      " | ",
      "LoadApprovalProcessesSuccess",
      " | ",
      "LoadApprovalProcessesFail",
      " | ",
      "AssignRole",
      " | ",
      "AssignRoleSuccess",
      " | ",
      "AssignRoleFail",
      " | ",
      "UnassignRole",
      " | ",
      "UnassignRoleSuccess",
      " | ",
      "UnassignRoleFail",
      " | ",
      "AssignApprover",
      " | ",
      "AssignApproverSuccess",
      " | ",
      "AssignApproverFail",
      " | ",
      "UnassignApprover",
      " | ",
      "UnassignApproverSuccess",
      " | ",
      "UnassignApproverFail",
      " | ",
      "CreateAddress",
      " | ",
      "CreateAddressSuccess",
      " | ",
      "CreateAddressFail",
      " | ",
      "UpdateAddress",
      " | ",
      "UpdateAddressSuccess",
      " | ",
      "UpdateAddressFail",
      " | ",
      "DeleteAddress",
      " | ",
      "DeleteAddressSuccess",
      " | ",
      "DeleteAddressFail",
      " | ",
      "LoadAddresses",
      " | ",
      "LoadAddressesFail",
      " | ",
      "LoadAddressesSuccess",
      " | ",
      "LoadAddressSuccess",
      " | ",
      "ClearAssignedUsers"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_APPROVER_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_APPROVER_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_APPROVER",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_ROLE_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_ROLE_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UNASSIGN_ROLE",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignApprover",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgUnitId: string;\n        orgCustomerId: string;\n        roleId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgUnitId: string;\n        orgCustomerId: string;\n        roleId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignApproverFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignApproverSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        uid: string;\n        roleId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        uid: string;\n        roleId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignRole",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgCustomerId: string;\n        roleId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgCustomerId: string;\n        roleId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignRoleFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orgCustomerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orgCustomerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignRoleSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        uid: string;\n        roleId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        uid: string;\n        roleId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_ADDRESS_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_ADDRESS_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_ADDRESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_ORG_UNIT_FAIL",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_ORG_UNIT_SUCCESS",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_ORG_UNIT",
    "namespace": "OrgUnitActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateAddress",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orgUnitId: string;\n        addressId: string;\n        address: Address;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orgUnitId: string;\n        addressId: string;\n        address: Address;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateAddressFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        addressId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        addressId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateAddressSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Address" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateUnit",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        unitCode: string;\n        unit: B2BUnit;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        unitCode: string;\n        unit: B2BUnit;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateUnitFail",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        unitCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        unitCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateUnitSuccess",
    "namespace": "OrgUnitActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "B2BUnit" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrgUnitAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "deleteAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "loadAddresses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Address>>"
      },
      {
        "kind": "Method",
        "name": "loadApprovalProcesses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BApprovalProcess[]>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnitNode[]>"
      },
      {
        "kind": "Method",
        "name": "loadTree",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnitNode>"
      },
      {
        "kind": "Method",
        "name": "loadUsers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "updateAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrgUnitConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "OrgUnitAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!OrgUnitAdapter:class",
            "shortType": "OrgUnitAdapter",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "OrgUnitAdapter" },
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "deleteAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "getAddresses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Address>>"
      },
      {
        "kind": "Method",
        "name": "getApprovalProcesses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BApprovalProcess[]>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnitNode[]>"
      },
      {
        "kind": "Method",
        "name": "getTree",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnitNode>"
      },
      {
        "kind": "Method",
        "name": "getUsers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "updateAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "OrgUnits",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "addressEntities",
        "type": "StateUtils.EntityLoaderState<Address>"
      },
      {
        "kind": "PropertySignature",
        "name": "addressList",
        "type": "StateUtils.EntityLoaderState<ListModel>"
      },
      {
        "kind": "PropertySignature",
        "name": "approvalProcesses",
        "type": "StateUtils.EntityLoaderState<B2BApprovalProcess[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "availableOrgUnitNodes",
        "type": "StateUtils.EntityLoaderState<B2BUnitNode[]>"
      },
      {
        "kind": "PropertySignature",
        "name": "entities",
        "type": "StateUtils.EntityLoaderState<B2BUnit>"
      },
      {
        "kind": "PropertySignature",
        "name": "tree",
        "type": "StateUtils.EntityLoaderState<B2BUnitNode>"
      },
      {
        "kind": "PropertySignature",
        "name": "users",
        "type": "StateUtils.EntityLoaderState<ListModel>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "OrgUnitSelectors"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getAddressesState",
    "namespace": "OrgUnitSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<Address>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getApprovalProcesses",
    "namespace": "OrgUnitSelectors",
    "type": "() => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BApprovalProcess[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getApprovalProcessesState",
    "namespace": "OrgUnitSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<B2BApprovalProcess[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getAssignedUsers",
    "namespace": "OrgUnitSelectors",
    "type": "(orgUnitId: string, roleId: string, params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<B2BUser>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BAddress",
    "namespace": "OrgUnitSelectors",
    "type": "(addressId: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<Address>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BAddresses",
    "namespace": "OrgUnitSelectors",
    "type": "(orgUnitId: string, params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<Address>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getB2BOrgUnitState",
    "namespace": "OrgUnitSelectors",
    "type": "MemoizedSelector<StateWithOrganization, OrgUnits>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getOrgUnit",
    "namespace": "OrgUnitSelectors",
    "type": "(orgUnitId: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUnit>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getOrgUnitList",
    "namespace": "OrgUnitSelectors",
    "type": "() => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUnitNode[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getOrgUnitsNodeListState",
    "namespace": "OrgUnitSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<B2BUnitNode[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getOrgUnitsState",
    "namespace": "OrgUnitSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<B2BUnitNode>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getOrgUnitState",
    "namespace": "OrgUnitSelectors",
    "type": "(orgUnitId: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUnit>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getOrgUnitsTreeState",
    "namespace": "OrgUnitSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<B2BUnitNode>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getOrgUnitTree",
    "namespace": "OrgUnitSelectors",
    "type": "() => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUnitNode>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getOrgUnitValue",
    "namespace": "OrgUnitSelectors",
    "type": "(orgUnitId: string) => MemoizedSelector<StateWithOrganization, B2BUnit>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "OrgUnitService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrganization | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearAssignedUsersList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "findUnitChildrenInTree",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orginitId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "unit",
            "type": "B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "B2BUnitNode[]"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "getActiveUnitList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<B2BUnitNode[]>"
      },
      {
        "kind": "Method",
        "name": "getAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "getAddresses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Address>>"
      },
      {
        "kind": "Method",
        "name": "getAddressLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Address>>"
      },
      {
        "kind": "Method",
        "name": "getApprovalProcesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<B2BApprovalProcess[]>"
      },
      {
        "kind": "Method",
        "name": "getChildUnits",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUnitNode>>"
      },
      {
        "kind": "Method",
        "name": "getCostCenters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      },
      {
        "kind": "Method",
        "name": "getErrorState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<B2BUnitNode[]>"
      },
      {
        "kind": "Method",
        "name": "getLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<B2BUnit>>"
      },
      {
        "kind": "Method",
        "name": "getTree",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<B2BUnitNode>"
      },
      {
        "kind": "Method",
        "name": "getUsers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadAddresses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadApprovalProcesses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadTree",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadUsers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "sortUnitList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "a",
            "type": "B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          },
          {
            "name": "b",
            "type": "B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "1 | -1 | 0"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithOrganization | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unassignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "unitCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "unit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Enum",
    "name": "Period",
    "members": ["DAY", "MONTH", "QUARTER", "WEEK", "YEAR"]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_NORMALIZER",
    "type": "InjectionToken<Converter<any, Permission>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_SERIALIZER",
    "type": "InjectionToken<Converter<Permission, any>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_TYPE_NORMALIZER",
    "type": "InjectionToken<Converter<any, OrderApprovalPermissionType>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_TYPES_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_TYPES_NORMALIZER",
    "type": "InjectionToken<Converter<any, OrderApprovalPermissionType[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSION_TYPES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "Permission",
    "members": [
      { "kind": "PropertySignature", "name": "active", "type": "boolean" },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "currency", "type": "Currency" },
      {
        "kind": "PropertySignature",
        "name": "orderApprovalPermissionType",
        "type": "OrderApprovalPermissionType"
      },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "B2BUnit" },
      { "kind": "PropertySignature", "name": "periodRange", "type": "Period" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "threshold", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "PermissionActions"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_PERMISSION_FAIL",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_PERMISSION_SUCCESS",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_PERMISSION",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreatePermission",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        permission: Permission;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        permission: Permission;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreatePermissionFail",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        permissionCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        permissionCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreatePermissionSuccess",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Permission" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSION_FAIL",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSION_SUCCESS",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSION_TYPES_FAIL",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSION_TYPES_SUCCESS",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSION_TYPES",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSION",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSIONS_FAIL",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSIONS_SUCCESS",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_PERMISSIONS",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermission",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        permissionCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        permissionCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionFail",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        permissionCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        permissionCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissions",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionsFail",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionsSuccess",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionSuccess",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Permission | Permission[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Permission | Permission[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionTypes",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionTypesFail",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionTypesSuccess",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "OrderApprovalPermissionType[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!OrderApprovalPermissionType:interface",
            "shortType": "OrderApprovalPermissionType",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "OrderApprovalPermissionType[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "TypeAlias",
    "name": "PermissionAction",
    "namespace": "PermissionActions",
    "members": [
      "LoadPermission",
      " | ",
      "LoadPermissionFail",
      " | ",
      "LoadPermissionSuccess",
      " | ",
      "LoadPermissions",
      " | ",
      "LoadPermissionsFail",
      " | ",
      "LoadPermissionsSuccess",
      " | ",
      "CreatePermission",
      " | ",
      "CreatePermissionFail",
      " | ",
      "CreatePermissionSuccess",
      " | ",
      "UpdatePermission",
      " | ",
      "UpdatePermissionFail",
      " | ",
      "UpdatePermissionSuccess",
      " | ",
      "LoadPermissionTypes",
      " | ",
      "LoadPermissionTypesFail",
      " | ",
      "LoadPermissionTypesSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_PERMISSION_FAIL",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_PERMISSION_SUCCESS",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_PERMISSION",
    "namespace": "PermissionActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdatePermission",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        permissionCode: string;\n        permission: Permission;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        permissionCode: string;\n        permission: Permission;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdatePermissionFail",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        permissionCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        permissionCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdatePermissionSuccess",
    "namespace": "PermissionActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "Permission" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "PermissionAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permission",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "loadTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderApprovalPermissionType[]>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permission",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Permission>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "PermissionConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "PermissionAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!PermissionAdapter:class",
            "shortType": "PermissionAdapter",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "PermissionAdapter" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permission",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "getTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderApprovalPermissionType[]>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permission",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Permission>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "PermissionManagement",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "permissionTypes",
        "type": "StateUtils.EntityLoaderState<OrderApprovalPermissionType[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "PERMISSIONS_NORMALIZER",
    "type": "InjectionToken<Converter<any, EntitiesModel<Permission>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "PermissionSelectors"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getPermission",
    "namespace": "PermissionSelectors",
    "type": "(permissionCode: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<Permission>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getPermissionList",
    "namespace": "PermissionSelectors",
    "type": "(params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<Permission>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getPermissionManagementState",
    "namespace": "PermissionSelectors",
    "type": "MemoizedSelector<StateWithOrganization, PermissionManagement>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getPermissionsState",
    "namespace": "PermissionSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<Permission>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getPermissionState",
    "namespace": "PermissionSelectors",
    "type": "(permissionId: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<Permission>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getPermissionTypes",
    "namespace": "PermissionSelectors",
    "type": "() => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<OrderApprovalPermissionType[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getPermissionTypesState",
    "namespace": "PermissionSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<OrderApprovalPermissionType[]>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getPermissionValue",
    "namespace": "PermissionSelectors",
    "type": "(permissionCode: string) => MemoizedSelector<StateWithOrganization, Permission>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "PermissionService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrganization | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "permission",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Method",
        "name": "getErrorState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "permissionCode",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "getLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<Permission>>"
      },
      {
        "kind": "Method",
        "name": "getTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderApprovalPermissionType[]>"
      },
      {
        "kind": "Method",
        "name": "loadPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadPermissionTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithOrganization | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permission",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "StateWithOrganization",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "organization",
        "type": "OrganizationState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_AVAILABLE_CUSTOMERS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_NORMALIZER",
    "type": "InjectionToken<Converter<any, UserGroup>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_PERMISSIONS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_SERIALIZER",
    "type": "InjectionToken<Converter<UserGroup, any>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUPS_NORMALIZER",
    "type": "InjectionToken<Converter<any, EntitiesModel<UserGroup>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "UserGroup",
    "members": [
      { "kind": "PropertySignature", "name": "members", "type": "B2BUser[]" },
      { "kind": "PropertySignature", "name": "membersCount", "type": "number" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "orgUnit", "type": "B2BUnit" },
      {
        "kind": "PropertySignature",
        "name": "permissions",
        "type": "Permission[]"
      },
      { "kind": "PropertySignature", "name": "roles", "type": "B2BUserRole[]" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "subGroups",
        "type": "UserGroup[]"
      },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "UserGroupActions"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignMember",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n        customerId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n        customerId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignMemberFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        customerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        customerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignMemberSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        customerId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        customerId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignPermission",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n        permissionUid: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n        permissionUid: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignPermissionFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        permissionUid: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        permissionUid: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "AssignPermissionSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        permissionUid: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        permissionUid: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_USER_GROUP_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_USER_GROUP_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "CREATE_USER_GROUP",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateUserGroup",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroup: UserGroup;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroup: UserGroup;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateUserGroupFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "CreateUserGroupSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "UserGroup" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "DELETE_USER_GROUP_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "DELETE_USER_GROUP_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "DELETE_USER_GROUP",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "DeleteUserGroup",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "DeleteUserGroupFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "DeleteUserGroupSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "UserGroup" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP_AVAILABLE_CUSTOMERS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP_PERMISSIONS_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP_PERMISSIONS_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP_PERMISSIONS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUP",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUPS_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUPS_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "LOAD_USER_GROUPS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAvailableOrgCustomers",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAvailableOrgCustomersFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadAvailableOrgCustomersSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissions",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionsFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadPermissionsSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadUserGroup",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadUserGroupFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadUserGroups",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadUserGroupsFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadUserGroupsSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "LoadUserGroupSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "UserGroup | UserGroup[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "UserGroup | UserGroup[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignAllMembers",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignAllMembersFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignAllMembersSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "UserGroup" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignMember",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n        customerId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n        customerId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignMemberFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        customerId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        customerId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignMemberSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        customerId: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        customerId: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignPermission",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n        permissionUid: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n        permissionUid: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignPermissionFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        permissionUid: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        permissionUid: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UnassignPermissionSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        permissionUid: string;\n        selected: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        permissionUid: string;\n        selected: boolean;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_USER_GROUP_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_USER_GROUP_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "UPDATE_USER_GROUP",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateUserGroup",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        userGroupId: string;\n        userGroup: UserGroup;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        userGroupId: string;\n        userGroup: UserGroup;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateUserGroupFail",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userGroupId: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userGroupId: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UpdateUserGroupSuccess",
    "namespace": "UserGroupActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "UserGroup" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_ASSIGN_MEMBER_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_ASSIGN_MEMBER_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_ASSIGN_MEMBER",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_ASSIGN_PERMISSION_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_ASSIGN_PERMISSION_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_ASSIGN_PERMISSION",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_ALL_MEMBERS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_MEMBER_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_MEMBER_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_MEMBER",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_PERMISSION_FAIL",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_PERMISSION_SUCCESS",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "USER_GROUP_UNASSIGN_PERMISSION",
    "namespace": "UserGroupActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "TypeAlias",
    "name": "UserGroupAction",
    "namespace": "UserGroupActions",
    "members": [
      "LoadUserGroup",
      " | ",
      "LoadUserGroupFail",
      " | ",
      "LoadUserGroupSuccess",
      " | ",
      "LoadUserGroups",
      " | ",
      "LoadUserGroupsFail",
      " | ",
      "LoadUserGroupsSuccess",
      " | ",
      "LoadPermissions",
      " | ",
      "LoadPermissionsFail",
      " | ",
      "LoadPermissionsSuccess",
      " | ",
      "LoadAvailableOrgCustomers",
      " | ",
      "LoadAvailableOrgCustomersFail",
      " | ",
      "LoadAvailableOrgCustomersSuccess",
      " | ",
      "CreateUserGroup",
      " | ",
      "CreateUserGroupFail",
      " | ",
      "CreateUserGroupSuccess",
      " | ",
      "AssignMember",
      " | ",
      "AssignMemberFail",
      " | ",
      "AssignMemberSuccess",
      " | ",
      "AssignPermission",
      " | ",
      "AssignPermissionFail",
      " | ",
      "AssignPermissionSuccess",
      " | ",
      "UpdateUserGroup",
      " | ",
      "UpdateUserGroupFail",
      " | ",
      "UpdateUserGroupSuccess",
      " | ",
      "DeleteUserGroup",
      " | ",
      "DeleteUserGroupFail",
      " | ",
      "DeleteUserGroupSuccess",
      " | ",
      "UnassignMember",
      " | ",
      "UnassignMemberFail",
      " | ",
      "UnassignMemberSuccess",
      " | ",
      "UnassignAllMembers",
      " | ",
      "UnassignAllMembersFail",
      " | ",
      "UnassignAllMembersSuccess",
      " | ",
      "UnassignPermission",
      " | ",
      "UnassignPermissionFail",
      " | ",
      "UnassignPermissionSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UserGroupAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "assignMember",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignOrderApprovalPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalPermissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroup",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "loadAvailableOrderApprovalPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "loadAvailableOrgCustomers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "unassignAllMembers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignMember",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignOrderApprovalPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalPermissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroup",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<UserGroup>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UserGroupConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserGroupAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroupAdapter:class",
            "shortType": "UserGroupAdapter",
            "importPath": "@spartacus/organization/administration/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "UserGroupAdapter" },
      {
        "kind": "Method",
        "name": "assignMember",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignOrderApprovalPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalPermissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroup",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "getAvailableOrderApprovalPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "getAvailableOrgCustomers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "unassignAllMembers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignMember",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignOrderApprovalPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalPermissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroup",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<UserGroup>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Interface",
    "name": "UserGroupManagement",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "customers",
        "type": "StateUtils.EntityLoaderState<ListModel>"
      },
      {
        "kind": "PropertySignature",
        "name": "permissions",
        "type": "StateUtils.EntityLoaderState<ListModel>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Namespace",
    "name": "UserGroupSelectors"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getAvailableOrderApprovalPermissions",
    "namespace": "UserGroupSelectors",
    "type": "(code: string, params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<Permission>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getAvailableOrgCustomers",
    "namespace": "UserGroupSelectors",
    "type": "(code: string, params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<B2BUser>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getUserGroup",
    "namespace": "UserGroupSelectors",
    "type": "(userGroupId: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<UserGroup>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getUserGroupList",
    "namespace": "UserGroupSelectors",
    "type": "(params: SearchConfig) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<EntitiesModel<UserGroup>>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getUserGroupManagementState",
    "namespace": "UserGroupSelectors",
    "type": "MemoizedSelector<StateWithOrganization, UserGroupManagement>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getUserGroupsState",
    "namespace": "UserGroupSelectors",
    "type": "MemoizedSelector<StateWithOrganization, StateUtils.EntityLoaderState<UserGroup>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getUserGroupState",
    "namespace": "UserGroupSelectors",
    "type": "(code: string) => MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<UserGroup>>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Variable",
    "name": "getUserGroupValue",
    "namespace": "UserGroupSelectors",
    "type": "(userGroupId: string) => MemoizedSelector<StateWithOrganization, UserGroup>"
  },
  {
    "entryPoint": "@spartacus/organization/administration/core",
    "kind": "Class",
    "name": "UserGroupService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithOrganization | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignMember",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "assignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroup",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "getAvailableOrderApprovalPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "getAvailableOrgCustomers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "getErrorState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "getLoadingStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrganizationItemStatus<UserGroup>>"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadAvailableOrderApprovalPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadAvailableOrgCustomers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithOrganization | StateWithProcess<void>>"
      },
      {
        "kind": "Method",
        "name": "unassignAllMembers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unassignMember",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "customerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unassignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroup",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_core!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "AdministrationOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccB2BUserAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignUserGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "getApproverEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getApproversEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig | {\n        orgCustomerId: string;\n    }",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getB2BUserEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getB2BUsersEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPermissionEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "premissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPermissionsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getUserGroupEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getUserGroupsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUser>"
      },
      {
        "kind": "Method",
        "name": "loadApprovers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "loadPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "loadUserGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "approverId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignUserGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomer",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUser>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccB2BUserNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.B2BUser:interface",
            "shortType": "Occ.B2BUser",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "B2BUser",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "B2BUser"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccB2bUserSerializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "B2BUser",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!~B2BUser:interface",
            "shortType": "B2BUser",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Occ.B2BUser",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.B2BUser:interface",
            "shortType": "Occ.B2BUser",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Occ.B2BUser"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccBudgetAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budget",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "getBudgetEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getBudgetsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Budget>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budget",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Budget>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccBudgetListNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.BudgetsList",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.BudgetsList:interface",
            "shortType": "Occ.BudgetsList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "EntitiesModel<Budget>",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<Budget>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccBudgetNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.Budget:interface",
            "shortType": "Occ.Budget",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Budget",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Budget"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccBudgetSerializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Budget",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Budget:interface",
            "shortType": "Budget",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Occ.Budget",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.Budget:interface",
            "shortType": "Occ.Budget",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Occ.Budget"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccCostCenterAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CostCenter>"
      },
      {
        "kind": "Method",
        "name": "getAllCostCentersEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getBudgetEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getBudgetsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig | {\n        budgetCode: string;\n    }",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCostCenterEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getCostCentersEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CostCenter>"
      },
      {
        "kind": "Method",
        "name": "loadBudgets",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Budget>>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<CostCenter>>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "unassignBudget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "budgetCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenterCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!~CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<CostCenter>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccOrgUnitAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "createAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      },
      {
        "kind": "Method",
        "name": "deleteAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getAddressEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getAddressesEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getApproverEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getApproversEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "{\n        roleId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getAvailableOrgUnitsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOrgUnitEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOrgUnitsApprovalProcessesEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOrgUnitsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOrgUnitsTreeEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRoleEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRolesEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "{\n        roleId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getUsersEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "loadAddresses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<EntitiesModel<Address>>"
      },
      {
        "kind": "Method",
        "name": "loadApprovalProcesses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BApprovalProcess[]>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnitNode[]>"
      },
      {
        "kind": "Method",
        "name": "loadTree",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<B2BUnitNode>"
      },
      {
        "kind": "Method",
        "name": "loadUsers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "unassignApprover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignRole",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "roleId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnit",
            "type": "B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<B2BUnit>"
      },
      {
        "kind": "Method",
        "name": "updateAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgUnitId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Address>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccOrgUnitApprovalProcessNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.B2BApprovalProcessList",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.B2BApprovalProcessList:interface",
            "shortType": "Occ.B2BApprovalProcessList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "B2BApprovalProcess[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!B2BApprovalProcess:interface",
            "shortType": "B2BApprovalProcess",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "B2BApprovalProcess[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccOrgUnitNodeListNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.B2BUnitNodeList",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.B2BUnitNodeList:interface",
            "shortType": "Occ.B2BUnitNodeList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "B2BUnitNode[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "B2BUnitNode[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccOrgUnitNodeNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.B2BUnitNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.B2BUnitNode:interface",
            "shortType": "Occ.B2BUnitNode",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "B2BUnitNode",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!B2BUnitNode:interface",
            "shortType": "B2BUnitNode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "B2BUnitNode"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccOrgUnitNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.B2BUnit",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.B2BUnit:interface",
            "shortType": "Occ.B2BUnit",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "B2BUnit",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!~B2BUnit:interface",
            "shortType": "B2BUnit",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "B2BUnit"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccPermissionAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permission",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Method",
        "name": "getPermissionEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalPermissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPermissionsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPermissionTypesEndpoint",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Permission>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "loadTypes",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderApprovalPermissionType[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "permission",
            "type": "Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Permission>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccPermissionListNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.PermissionsList",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.PermissionsList:interface",
            "shortType": "Occ.PermissionsList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "EntitiesModel<Permission>",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<Permission>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccPermissionNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.Permission",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.Permission:interface",
            "shortType": "Occ.Permission",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "Permission",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!Permission:interface",
            "shortType": "Permission",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Permission"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccPermissionTypeListNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.OrderApprovalPermissionTypeList",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.OrderApprovalPermissionTypeList:interface",
            "shortType": "Occ.OrderApprovalPermissionTypeList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "OrderApprovalPermissionType[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!OrderApprovalPermissionType:interface",
            "shortType": "OrderApprovalPermissionType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderApprovalPermissionType[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccPermissionTypeNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.OrderApprovalPermissionType",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.OrderApprovalPermissionType:interface",
            "shortType": "Occ.OrderApprovalPermissionType",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "OrderApprovalPermissionType",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!OrderApprovalPermissionType:interface",
            "shortType": "OrderApprovalPermissionType",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderApprovalPermissionType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccUserGroupAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assignMember",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "assignOrderApprovalPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalPermissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroup",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "getAvailableCustomersEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig | {\n        orgCustomerId: string;\n    }",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getMemberEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getMembersEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig | {\n        orgCustomerId: string;\n    }",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOrderApprovalPermissionEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalPermissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOrderApprovalPermissionsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig | {\n        orderApprovalPermissionCode: string;\n    }",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPermissionsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig | {\n        orgCustomerId: string;\n    }",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getUserGroupEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getUserGroupsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<UserGroup>"
      },
      {
        "kind": "Method",
        "name": "loadAvailableOrderApprovalPermissions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<Permission>>"
      },
      {
        "kind": "Method",
        "name": "loadAvailableOrgCustomers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<B2BUser>>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<UserGroup>>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "unassignAllMembers",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignMember",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orgCustomerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "unassignOrderApprovalPermission",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalPermissionCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "userGroup",
            "type": "UserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<UserGroup>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccUserGroupListNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.OrgUnitUserGroupList",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.OrgUnitUserGroupList:interface",
            "shortType": "Occ.OrgUnitUserGroupList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "EntitiesModel<UserGroup>",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<UserGroup>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccUserGroupNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.OrgUnitUserGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.OrgUnitUserGroup:interface",
            "shortType": "Occ.OrgUnitUserGroup",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "UserGroup",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!UserGroup:interface",
            "shortType": "UserGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "UserGroup"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/occ",
    "kind": "Class",
    "name": "OccUserListNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.OrgUnitUserList",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_administration_occ!Occ.OrgUnitUserList:interface",
            "shortType": "Occ.OrgUnitUserList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "EntitiesModel<B2BUser>",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_administration_occ!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<B2BUser>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Class",
    "name": "AdministrationRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "defaultBudgetRoutingConfig",
    "type": "RoutingConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "defaultCostCenterRoutingConfig",
    "type": "RoutingConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Function",
    "name": "defaultOrganizationAdministrationComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "defaultOrganizationLayoutConfig",
    "type": "LayoutConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "defaultPermissionRoutingConfig",
    "type": "RoutingConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "defaultUnitsRoutingConfig",
    "type": "RoutingConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "defaultUserGroupRoutingConfig",
    "type": "RoutingConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "defaultUserRoutingConfig",
    "type": "RoutingConfig"
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "ORGANIZATION_ADMINISTRATION_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/administration/root",
    "kind": "Variable",
    "name": "ROUTE_PARAMS",
    "type": "{\n    budgetCode: string;\n    unitCode: string;\n    costCenterCode: string;\n    userCode: string;\n    userGroupCode: string;\n    permissionCode: string;\n    addressCode: string;\n}"
  },
  {
    "entryPoint": "@spartacus/organization/administration",
    "kind": "Class",
    "name": "AdministrationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/order-approval/assets",
    "kind": "Variable",
    "name": "orderApprovalTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval/assets",
    "kind": "Variable",
    "name": "orderApprovalTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval/root",
    "kind": "Function",
    "name": "defaultOrganizationOrderApprovalComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval/root",
    "kind": "Class",
    "name": "OrderApprovalRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/order-approval/root",
    "kind": "Variable",
    "name": "ORGANIZATION_ORDER_APPROVAL_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OccOrderApprovalAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      {
        "kind": "Method",
        "name": "getOrderApprovalDecisionEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOrderApprovalEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOrderApprovalsEndpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_order-approval!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderApproval>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_order-approval!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<OrderApproval>>"
      },
      {
        "kind": "Method",
        "name": "makeDecision",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalDecision",
            "type": "OrderApprovalDecision",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalDecision:interface",
            "shortType": "OrderApprovalDecision",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrderApprovalDecision>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OccOrderApprovalDecisionNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.OrderApprovalDecision",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!Occ.OrderApprovalDecision:interface",
            "shortType": "Occ.OrderApprovalDecision",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "OrderApprovalDecision",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalDecision:interface",
            "shortType": "OrderApprovalDecision",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderApprovalDecision"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OccOrderApprovalListNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.OrderApprovalsList",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!Occ.OrderApprovalsList:interface",
            "shortType": "Occ.OrderApprovalsList",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "EntitiesModel<OrderApproval>",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_order-approval!EntitiesModel:interface",
            "shortType": "EntitiesModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "EntitiesModel<OrderApproval>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OccOrderApprovalNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Occ.OrderApproval",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!Occ.OrderApproval:interface",
            "shortType": "Occ.OrderApproval",
            "importPath": "@spartacus/core"
          },
          {
            "name": "target",
            "type": "OrderApproval",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApproval:interface",
            "shortType": "OrderApproval",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderApproval"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "ORDER_APPROVAL_DECISION_NORMALIZER",
    "type": "InjectionToken<Converter<any, OrderApprovalDecision>>"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "ORDER_APPROVAL_ENTITIES",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "ORDER_APPROVAL_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "ORDER_APPROVAL_LIST",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "ORDER_APPROVAL_NORMALIZER",
    "type": "InjectionToken<Converter<any, OrderApproval>>"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "ORDER_APPROVALS_NORMALIZER",
    "type": "InjectionToken<Converter<any, EntitiesModel<OrderApproval>>>"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Interface",
    "name": "OrderApproval",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "approvalDecisionRequired",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "customerOrderApprovalRecords",
        "type": "OrderApprovalRecord[]"
      },
      {
        "kind": "PropertySignature",
        "name": "merchantOrderApprovalRecords",
        "type": "OrderApprovalRecord[]"
      },
      { "kind": "PropertySignature", "name": "order", "type": "Order" },
      {
        "kind": "PropertySignature",
        "name": "trigger",
        "type": "OrderApprovalTrigger"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Namespace",
    "name": "OrderApprovalActions"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "LOAD_ORDER_APPROVAL_FAIL",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "LOAD_ORDER_APPROVAL_SUCCESS",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "LOAD_ORDER_APPROVAL",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "LOAD_ORDER_APPROVALS_FAIL",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "LOAD_ORDER_APPROVALS_SUCCESS",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "LOAD_ORDER_APPROVALS",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "LoadOrderApproval",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orderApprovalCode: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orderApprovalCode: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "LoadOrderApprovalFail",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orderApprovalCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orderApprovalCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "LoadOrderApprovals",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "LoadOrderApprovalsFail",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        params: SearchConfig;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        params: SearchConfig;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "LoadOrderApprovalsSuccess",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        page: ListModel;\n        params: SearchConfig;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "LoadOrderApprovalSuccess",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "OrderApproval | OrderApproval[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApproval:interface",
            "shortType": "OrderApproval",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "OrderApproval | OrderApproval[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "MAKE_DECISION_FAIL",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "MAKE_DECISION_RESET",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "MAKE_DECISION_SUCCESS",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "MAKE_DECISION",
    "namespace": "OrderApprovalActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "MakeDecision",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        userId: string;\n        orderApprovalCode: string;\n        orderApprovalDecision: OrderApprovalDecision;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        userId: string;\n        orderApprovalCode: string;\n        orderApprovalDecision: OrderApprovalDecision;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "MakeDecisionFail",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orderApprovalCode: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orderApprovalCode: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "MakeDecisionReset",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "MakeDecisionSuccess",
    "namespace": "OrderApprovalActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        orderApprovalCode: string;\n        orderApprovalDecision: OrderApprovalDecision;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        orderApprovalCode: string;\n        orderApprovalDecision: OrderApprovalDecision;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "TypeAlias",
    "name": "OrderApprovalAction",
    "namespace": "OrderApprovalActions",
    "members": [
      "LoadOrderApproval",
      " | ",
      "LoadOrderApprovalFail",
      " | ",
      "LoadOrderApprovalSuccess",
      " | ",
      "LoadOrderApprovals",
      " | ",
      "LoadOrderApprovalsFail",
      " | ",
      "LoadOrderApprovalsSuccess",
      " | ",
      "MakeDecision",
      " | ",
      "MakeDecisionFail",
      " | ",
      "MakeDecisionSuccess",
      " | ",
      "MakeDecisionReset"
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderApproval>"
      },
      {
        "kind": "Method",
        "name": "loadList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_order-approval!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<OrderApproval>>"
      },
      {
        "kind": "Method",
        "name": "makeDecision",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalDecision",
            "type": "OrderApprovalDecision",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalDecision:interface",
            "shortType": "OrderApprovalDecision",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrderApprovalDecision>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "OrderApprovalAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalAdapter:class",
            "shortType": "OrderApprovalAdapter",
            "importPath": "@spartacus/organization/order-approval"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "OrderApprovalAdapter" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderApproval>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_order-approval!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<OrderApproval>>"
      },
      {
        "kind": "Method",
        "name": "makeDecision",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalDecision",
            "type": "OrderApprovalDecision",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalDecision:interface",
            "shortType": "OrderApprovalDecision",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<OrderApprovalDecision>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Interface",
    "name": "OrderApprovalDecision",
    "members": [
      { "kind": "PropertySignature", "name": "comment", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "decision",
        "type": "OrderApprovalDecisionValue"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Enum",
    "name": "OrderApprovalDecisionValue",
    "members": ["APPROVE", "REJECT"]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalDetailFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderApprovalDetailService",
            "type": "OrderApprovalDetailService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalDetailService:class",
            "shortType": "OrderApprovalDetailService",
            "importPath": "@spartacus/organization/order-approval"
          },
          {
            "name": "orderApprovalService",
            "type": "OrderApprovalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalService:class",
            "shortType": "OrderApprovalService",
            "importPath": "@spartacus/organization/order-approval"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "approvalDecision",
        "type": "OrderApprovalDecisionValue"
      },
      {
        "kind": "Property",
        "name": "approvalDecisionValue",
        "type": "typeof OrderApprovalDecisionValue"
      },
      { "kind": "Property", "name": "approvalForm", "type": "FormGroup" },
      { "kind": "Property", "name": "approvalFormVisible", "type": "boolean" },
      {
        "kind": "Method",
        "name": "cancelDecisionForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "decisionResultLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "displayDecisionForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "decision",
            "type": "OrderApprovalDecisionValue",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalDecisionValue:enum",
            "shortType": "OrderApprovalDecisionValue",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "loading$", "type": "Observable<boolean>" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "orderApproval$",
        "type": "Observable<OrderApproval>"
      },
      {
        "kind": "Property",
        "name": "orderApprovalDetailService",
        "type": "OrderApprovalDetailService"
      },
      {
        "kind": "Property",
        "name": "orderApprovalLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "orderApprovalService",
        "type": "OrderApprovalService"
      },
      {
        "kind": "Method",
        "name": "submitDecision",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderApproval",
            "type": "OrderApproval",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApproval:interface",
            "shortType": "OrderApproval",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalDetailService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "orderApprovalService",
            "type": "OrderApprovalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalService:class",
            "shortType": "OrderApprovalService",
            "importPath": "@spartacus/organization/order-approval"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "approvalCode$",
        "type": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getOrderApproval",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderApproval>"
      },
      {
        "kind": "Method",
        "name": "getOrderApprovalCodeFromRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<Order>" },
      {
        "kind": "Property",
        "name": "orderApproval$",
        "type": "Observable<OrderApproval>"
      },
      {
        "kind": "Property",
        "name": "orderApprovalService",
        "type": "OrderApprovalService"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "orderApprovalService",
            "type": "OrderApprovalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalService:class",
            "shortType": "OrderApprovalService",
            "importPath": "@spartacus/organization/order-approval"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "fetchApprovalListPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "goToApprovalDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApproval",
            "type": "OrderApproval",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApproval:interface",
            "shortType": "OrderApproval",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "orderApprovals$",
        "type": "Observable<EntitiesModel<OrderApproval>>"
      },
      {
        "kind": "Property",
        "name": "orderApprovalService",
        "type": "OrderApprovalService"
      },
      { "kind": "Property", "name": "PAGE_SIZE", "type": "number" },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortLabels$", "type": "any" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Interface",
    "name": "OrderApprovalManagement",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Interface",
    "name": "OrderApprovalPermissionResult",
    "members": [
      { "kind": "PropertySignature", "name": "approverName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "approverNotes",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "permissionType",
        "type": "OrderApprovalPermissionType"
      },
      { "kind": "PropertySignature", "name": "statusDisplay", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Interface",
    "name": "OrderApprovalRecord",
    "members": [
      { "kind": "PropertySignature", "name": "approver", "type": "Principal" },
      { "kind": "PropertySignature", "name": "comments", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "permissionTypes",
        "type": "OrderApprovalPermissionType[]"
      },
      { "kind": "PropertySignature", "name": "statusDisplay", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Namespace",
    "name": "OrderApprovalSelectors"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "getOrderApproval",
    "namespace": "OrderApprovalSelectors",
    "type": "(orderApprovalCode: string) => MemoizedSelector<OrderApprovalState, StateUtils.LoaderState<OrderApproval>>"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "getOrderApprovalList",
    "namespace": "OrderApprovalSelectors",
    "type": "(params: SearchConfig) => MemoizedSelector<OrderApprovalState, StateUtils.LoaderState<EntitiesModel<OrderApproval>>>"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "getOrderApprovalManagementState",
    "namespace": "OrderApprovalSelectors",
    "type": "MemoizedSelector<OrderApprovalState, OrderApprovalManagement>"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "getOrderApprovalsState",
    "namespace": "OrderApprovalSelectors",
    "type": "MemoizedSelector<OrderApprovalState, StateUtils.EntityLoaderState<OrderApproval>>"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Variable",
    "name": "getOrderApprovalState",
    "namespace": "OrderApprovalSelectors",
    "type": "MemoizedSelector<OrderApprovalState, OrderApprovalState>"
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderApprovalService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<OrderApprovalState | StateWithProcess<void>>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OrderApproval>"
      },
      {
        "kind": "Method",
        "name": "getList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<EntitiesModel<OrderApproval>>"
      },
      {
        "kind": "Method",
        "name": "getMakeDecisionResultError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getMakeDecisionResultLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getMakeDecisionResultSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getOrderApprovalLoading",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadOrderApproval",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadOrderApprovals",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "params",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/organization_order-approval!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "makeDecision",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderApprovalCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "orderApprovalDecision",
            "type": "OrderApprovalDecision",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderApprovalDecision:interface",
            "shortType": "OrderApprovalDecision",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetMakeDecisionProcessState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<OrderApprovalState | StateWithProcess<void>>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Interface",
    "name": "OrderApprovalState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "\"order-approval\"",
        "type": "OrderApprovalManagement"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Interface",
    "name": "OrderApprovalTrigger",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "activationTime",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "displayTimeTable",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/organization/order-approval",
    "kind": "Class",
    "name": "OrderDetailPermissionResultsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/organization_order-approval!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "order$", "type": "Observable<Order>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/assets",
    "kind": "Variable",
    "name": "bulkPricingTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/assets",
    "kind": "Variable",
    "name": "bulkPricingTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/components",
    "kind": "Class",
    "name": "BulkPricingTableComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_bulk-pricing_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "bulkPricingService",
            "type": "BulkPricingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_bulk-pricing_components!BulkPricingService:class",
            "shortType": "BulkPricingService",
            "importPath": "@spartacus/product/bulk-pricing/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "bulkPricingService",
        "type": "BulkPricingService"
      },
      {
        "kind": "Method",
        "name": "formatQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tier",
            "type": "BulkPrice",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_bulk-pricing_components!BulkPrice:interface",
            "shortType": "BulkPrice",
            "importPath": "@spartacus/product/bulk-pricing/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPrices",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<BulkPrice[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "priceTiers$",
        "type": "Observable<BulkPrice[] | undefined>"
      },
      { "kind": "Property", "name": "PRODUCT_KEY", "type": "" },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/components",
    "kind": "Class",
    "name": "BulkPricingTableModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/core",
    "kind": "Interface",
    "name": "BulkPrice",
    "members": [
      { "kind": "PropertySignature", "name": "currencyIso", "type": "string" },
      { "kind": "PropertySignature", "name": "discount", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "formattedDiscount",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "formattedValue",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "maxQuantity", "type": "number" },
      { "kind": "PropertySignature", "name": "minQuantity", "type": "number" },
      { "kind": "PropertySignature", "name": "priceType", "type": "string" },
      { "kind": "PropertySignature", "name": "value", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/core",
    "kind": "Class",
    "name": "BulkPricingService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_bulk-pricing_core!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "calculateDiscount",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "bulkPriceTemplate",
            "type": "BulkPrice",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_bulk-pricing_core!BulkPrice:interface",
            "shortType": "BulkPrice",
            "importPath": "@spartacus/product/bulk-pricing/core"
          },
          {
            "name": "basePrice",
            "type": "number | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "BulkPrice"
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productPriceScope",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_bulk-pricing_core!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "BulkPrice[] | undefined"
      },
      {
        "kind": "Method",
        "name": "getBulkPrices",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<BulkPrice[] | undefined>"
      },
      {
        "kind": "Method",
        "name": "parsePrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "priceTier",
            "type": "Price",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_bulk-pricing_core!Price:interface",
            "shortType": "Price",
            "importPath": "@spartacus/core"
          },
          {
            "name": "basePrice",
            "type": "number | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "BulkPrice"
      },
      { "kind": "Property", "name": "PRODUCT_SCOPE", "type": "" },
      { "kind": "Property", "name": "productService", "type": "ProductService" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/occ",
    "kind": "Class",
    "name": "BulkPricingOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/root",
    "kind": "Class",
    "name": "BulkPricingRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/root",
    "kind": "Function",
    "name": "defaultProductBulkPricingComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing/root",
    "kind": "Variable",
    "name": "PRODUCT_BULK_PRICING_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product/bulk-pricing",
    "kind": "Class",
    "name": "BulkPricingModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/assets",
    "kind": "Variable",
    "name": "productImageZoomTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/assets",
    "kind": "Variable",
    "name": "productImageZoomTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/components",
    "kind": "Variable",
    "name": "defaultProductImageZoomLayoutConfig",
    "type": "LayoutConfig"
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/components",
    "kind": "Class",
    "name": "ProductImageZoomComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/components",
    "kind": "Class",
    "name": "ProductImageZoomDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_image-zoom_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      { "kind": "Property", "name": "galleryIndex", "type": "number" },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/components",
    "kind": "Class",
    "name": "ProductImageZoomModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/components",
    "kind": "Class",
    "name": "ProductImageZoomProductImagesComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_image-zoom_components!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Property",
        "name": "expandImage",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "openImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedIndex",
        "type": "number | undefined"
      },
      {
        "kind": "Method",
        "name": "triggerZoom",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/components",
    "kind": "Class",
    "name": "ProductImageZoomThumbnailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Property",
        "name": "activeThumb",
        "type": "EventEmitter<ImageGroup>"
      },
      {
        "kind": "Method",
        "name": "isActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "thumbnail",
            "type": "ImageGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_image-zoom_components!ImageGroup:interface",
            "shortType": "ImageGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "image",
            "type": "ImageGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_image-zoom_components!ImageGroup:interface",
            "shortType": "ImageGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "productImage",
        "type": "EventEmitter<{\n        image: any;\n        index: number;\n    }>"
      },
      { "kind": "Property", "name": "selectedIndex", "type": "number" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "thumbs$",
        "type": "Observable<ThumbnailsGroup[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/components",
    "kind": "Class",
    "name": "ProductImageZoomTriggerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_image-zoom_components!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "dialogClose",
        "type": "EventEmitter<void>"
      },
      { "kind": "Property", "name": "expandButton", "type": "ElementRef" },
      { "kind": "Property", "name": "galleryIndex", "type": "number" },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "triggerZoom",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/components",
    "kind": "Class",
    "name": "ProductImageZoomViewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_image-zoom_components!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_image-zoom_components!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeThumb",
        "type": "EventEmitter<ImageGroup>"
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Method",
        "name": "calculatePointerMovePosition",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "clientX",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "clientY",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "{\n        positionX: number;\n        positionY: number;\n    }"
      },
      { "kind": "Property", "name": "cdRef", "type": "ChangeDetectorRef" },
      {
        "kind": "Method",
        "name": "changeImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "{\n        image: ImageGroup;\n        index: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clearTouch",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      { "kind": "Property", "name": "defaultImage", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "defaultImageClickHandler$",
        "type": "Observable<any[]>"
      },
      {
        "kind": "Property",
        "name": "defaultImageReady$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "galleryIndex", "type": "number" },
      {
        "kind": "Method",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getNextProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "thumbs",
            "type": "Observable<ImageGroup>[]",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<ImageGroup>"
      },
      {
        "kind": "Method",
        "name": "getPreviousProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "thumbs",
            "type": "Observable<ImageGroup>[]",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<ImageGroup>"
      },
      {
        "kind": "Method",
        "name": "handleOutOfBounds",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "positionX",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "positionY",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "imageElement",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "boundingRect",
            "type": "DOMRect",
            "isOptional": false,
            "canonicalReference": "!DOMRect:interface",
            "shortType": "DOMRect",
            "importPath": ""
          }
        ],
        "returnType": "{\n        x: number;\n        y: number;\n    }"
      },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isZoomed", "type": "boolean" },
      { "kind": "Property", "name": "left", "type": "number" },
      {
        "kind": "Property",
        "name": "mainImage$",
        "type": "Observable<ImageGroup | null>"
      },
      {
        "kind": "Property",
        "name": "mainMediaContainer$",
        "type": "Observable<ImageGroup | null>"
      },
      {
        "kind": "Method",
        "name": "moveImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "positionX",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "positionY",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "boundingRect",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "imageElement",
            "type": "DOMRect",
            "isOptional": false,
            "canonicalReference": "!DOMRect:interface",
            "shortType": "DOMRect",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "ImageGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_image-zoom_components!ImageGroup:interface",
            "shortType": "ImageGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pointerMove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      {
        "kind": "Property",
        "name": "startCoords",
        "type": "{\n        x: number;\n        y: number;\n    } | null"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "thumbnails$",
        "type": "Observable<Observable<ThumbnailsGroup>[]>"
      },
      { "kind": "Property", "name": "top", "type": "number" },
      {
        "kind": "Method",
        "name": "touchMove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "TouchEvent",
            "isOptional": false,
            "canonicalReference": "!TouchEvent:interface",
            "shortType": "TouchEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "zoom",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "zoomedImage", "type": "ElementRef" },
      { "kind": "Property", "name": "zoomImage", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "zoomImageClickHandler$",
        "type": "Observable<any[]>"
      },
      {
        "kind": "Property",
        "name": "zoomReady$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/root",
    "kind": "Function",
    "name": "defaultImageZoomComponentsConfig",
    "parameters": [],
    "returnType": "{\n    featureModules: {\n        productImageZoom: {\n            cmsComponents: string[];\n        };\n    };\n}"
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/root",
    "kind": "Variable",
    "name": "PRODUCT_IMAGE_ZOOM_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/root",
    "kind": "Class",
    "name": "ProductImageZoomRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/image-zoom/root",
    "kind": "Interface",
    "name": "ThumbnailsGroup",
    "members": [
      { "kind": "PropertySignature", "name": "container", "type": "ImageGroup" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/image-zoom",
    "kind": "Class",
    "name": "ProductImageZoomModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants/assets",
    "kind": "Variable",
    "name": "productVariantsTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/product/variants/assets",
    "kind": "Variable",
    "name": "productVariantsTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantColorSelectorComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeColor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "name",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "null"
      },
      {
        "kind": "Method",
        "name": "getVariantOptionValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "qualifiers",
            "type": "VariantOptionQualifier[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!VariantOptionQualifier:interface",
            "shortType": "VariantOptionQualifier",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string | undefined"
      },
      { "kind": "Property", "name": "product", "type": "Product" },
      { "kind": "Property", "name": "variants", "type": "BaseOption" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantColorSelectorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantsComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantsContainerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "product$",
        "type": "Observable<Product | null>"
      },
      {
        "kind": "Property",
        "name": "variants",
        "type": "{\n        [key: string]: BaseOption;\n    }"
      },
      {
        "kind": "Property",
        "name": "variantType",
        "type": "typeof VariantType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantsContainerModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantsGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "findPurchasableProductCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantSizeSelectorComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "null"
      },
      {
        "kind": "Method",
        "name": "getVariantOptionValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "qualifiers",
            "type": "VariantOptionQualifier[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!VariantOptionQualifier:interface",
            "shortType": "VariantOptionQualifier",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string | undefined"
      },
      { "kind": "Property", "name": "product", "type": "Product" },
      { "kind": "Property", "name": "variants", "type": "BaseOption" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantSizeSelectorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantStyleSelectorComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeStyle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "null"
      },
      {
        "kind": "Method",
        "name": "getVariantOptionValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "qualifiers",
            "type": "VariantOptionQualifier[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!VariantOptionQualifier:interface",
            "shortType": "VariantOptionQualifier",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "getVariantThumbnailUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "variantOptionQualifiers",
            "type": "VariantOptionQualifier[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_components!VariantOptionQualifier:interface",
            "shortType": "VariantOptionQualifier",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "variantQualifier",
        "type": "typeof VariantQualifier"
      },
      { "kind": "Property", "name": "variants", "type": "BaseOption" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/variants/components",
    "kind": "Class",
    "name": "ProductVariantStyleSelectorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants/occ",
    "kind": "Class",
    "name": "ProductVariantsOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants/root",
    "kind": "Function",
    "name": "defaultProductVariantsComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/product/variants/root",
    "kind": "Variable",
    "name": "PRODUCT_VARIANTS_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product/variants/root",
    "kind": "Class",
    "name": "ProductVariantsRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants/root",
    "kind": "Class",
    "name": "ProductVariantStyleIconsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_root!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productListItemContext",
            "type": "ProductListItemContext | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/product_variants_root!ProductListItemContext:class",
            "shortType": "ProductListItemContext",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getVariantThumbnailUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "variantOptionQualifiers",
            "type": "VariantOptionQualifier[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product_variants_root!VariantOptionQualifier:interface",
            "shortType": "VariantOptionQualifier",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "productListItemContext",
        "type": "ProductListItemContext | undefined"
      },
      {
        "kind": "Property",
        "name": "ProductListOutlets",
        "type": "typeof ProductListOutlets"
      },
      { "kind": "Property", "name": "subscriptions", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "variantNames",
        "type": "{\n        [key: string]: string;\n    }"
      },
      { "kind": "Property", "name": "variants", "type": "VariantOption[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/product/variants/root",
    "kind": "Class",
    "name": "ProductVariantStyleIconsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product/variants",
    "kind": "Class",
    "name": "ProductVariantsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common/assets",
    "kind": "Variable",
    "name": "configuratorTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/product-configurator/common/assets",
    "kind": "Variable",
    "name": "configuratorTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Namespace",
    "name": "CommonConfigurator"
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Interface",
    "name": "Owner",
    "namespace": "CommonConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "configuratorType",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "key", "type": "string" },
      { "kind": "PropertySignature", "name": "type", "type": "OwnerType" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Enum",
    "name": "OwnerType",
    "namespace": "CommonConfigurator",
    "members": ["CART_ENTRY", "ORDER_ENTRY", "PRODUCT"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Interface",
    "name": "ReadConfigurationFromCartEntryParameters",
    "namespace": "CommonConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cartEntryNumber",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "cartId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "owner",
        "type": "CommonConfigurator.Owner"
      },
      { "kind": "PropertySignature", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Interface",
    "name": "ReadConfigurationFromOrderEntryParameters",
    "namespace": "CommonConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "orderEntryNumber",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "orderId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "owner",
        "type": "CommonConfigurator.Owner"
      },
      { "kind": "PropertySignature", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "CommonConfiguratorComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "CommonConfiguratorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "CommonConfiguratorOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "CommonConfiguratorUtilsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "decomposeOwnerId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ownerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "getCartId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_common!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getComposedOwnerId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "documentId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "entryNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getNumberOfIssues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartItem",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "hasIssues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartItem",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isActiveCartContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartItemContext",
            "type": "CartItemContext | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
            "shortType": "CartItemContext",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isAttributeBasedConfigurator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorType",
            "type": "string | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isBundleBasedConfigurator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorType",
            "type": "string | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setOwnerKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Interface",
    "name": "ConfigurationInfo",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "configurationLabel",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "configurationValue",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "configuratorType",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "status", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Enum",
    "name": "ConfigurationInfoFields",
    "members": ["FORMATTED_PRICE", "KEY", "NAME", "PRICE_VALUE", "QTY"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Enum",
    "name": "ConfigurationInfoSpecialFields",
    "members": ["CURRENCY", "LINE_ITEM", "LINE_ITEM_DELIMITER", "VERSION"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorCartEntryBundleInfoComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configCartEntryBundleInfoService",
            "type": "ConfiguratorCartEntryBundleInfoService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!ConfiguratorCartEntryBundleInfoService:class",
            "shortType": "ConfiguratorCartEntryBundleInfoService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cartItemContext",
            "type": "CartItemContext | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
            "shortType": "CartItemContext",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Property",
        "name": "cartItemContext",
        "type": "CartItemContext | undefined"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Property",
        "name": "configCartEntryBundleInfoService",
        "type": "ConfiguratorCartEntryBundleInfoService"
      },
      { "kind": "Property", "name": "hideItems", "type": "boolean" },
      {
        "kind": "Method",
        "name": "isBundleBasedConfigurator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isDesktop",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "lineItems$",
        "type": "Observable<LineItem[]>"
      },
      {
        "kind": "Property",
        "name": "numberOfLineItems$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "orderEntry$",
        "type": "Observable<OrderEntry>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<FormControl>"
      },
      {
        "kind": "Property",
        "name": "readonly$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "shouldShowButton$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "toggleItems",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorCartEntryBundleInfoModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorCartEntryBundleInfoService",
    "members": [
      {
        "kind": "Method",
        "name": "addLineItemData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lineItemMap",
            "type": "Map<number, LineItem>",
            "isOptional": false,
            "canonicalReference": "!Map:interface",
            "shortType": "Map",
            "importPath": ""
          },
          {
            "name": "configurationInfoSplit",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configurationInfoValue",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getOrCreateLineItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lineItemMap",
            "type": "Map<number, LineItem>",
            "isOptional": false,
            "canonicalReference": "!Map:interface",
            "shortType": "Map",
            "importPath": ""
          },
          {
            "name": "lineItemNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "LineItem"
      },
      {
        "kind": "Method",
        "name": "logWarning",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "text",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "prepareLineItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configurationInfo",
            "type": "ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!ConfigurationInfo:interface",
            "shortType": "ConfigurationInfo",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "LineItem"
      },
      {
        "kind": "Method",
        "name": "processConfigurationInfoEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lineItemMap",
            "type": "Map<number, LineItem>",
            "isOptional": false,
            "canonicalReference": "!Map:interface",
            "shortType": "Map",
            "importPath": ""
          },
          {
            "name": "configurationInfo",
            "type": "ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!ConfigurationInfo:interface",
            "shortType": "ConfigurationInfo",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "processConfigurationInfos",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configurationInfos",
            "type": "ConfigurationInfo[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!ConfigurationInfo:interface",
            "shortType": "ConfigurationInfo",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "LineItem[]"
      },
      {
        "kind": "Method",
        "name": "removeDelimiter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "label",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "retrieveLineItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "LineItem[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorCartEntryInfoComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartItemContext",
            "type": "CartItemContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
            "shortType": "CartItemContext",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartItemContext",
        "type": "CartItemContext"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "hasStatus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isAttributeBasedConfigurator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "orderEntry$",
        "type": "Observable<OrderEntry>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<FormControl>"
      },
      {
        "kind": "Property",
        "name": "readonly$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "shouldShowButton$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorCartEntryInfoModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorIssuesNotificationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "cartItemContext",
            "type": "CartItemContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CartItemContext:class",
            "shortType": "CartItemContext",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartItemContext",
        "type": "CartItemContext"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "getNumberOfIssues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "hasIssues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "orderEntry$",
        "type": "Observable<OrderEntry>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<FormControl>"
      },
      {
        "kind": "Property",
        "name": "readonly$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "shouldShowButton$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorIssuesNotificationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorModelUtils",
    "members": [
      {
        "kind": "Method",
        "name": "createInitialOwner",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "CommonConfigurator.Owner"
      },
      {
        "kind": "Method",
        "name": "createOwner",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ownerType",
            "type": "CommonConfigurator.OwnerType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfigurator.OwnerType:enum",
            "shortType": "CommonConfigurator.OwnerType",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "ownerId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configuratorType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "CommonConfigurator.Owner"
      },
      {
        "kind": "Method",
        "name": "getOwnerKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ownerType",
            "type": "CommonConfigurator.OwnerType",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfigurator.OwnerType:enum",
            "shortType": "CommonConfigurator.OwnerType",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "ownerId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "isInitialOwner",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Enum",
    "name": "ConfiguratorProductScope",
    "members": ["CONFIGURATOR", "CONFIGURATOR_PRODUCT_CARD"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Namespace",
    "name": "ConfiguratorRouter"
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Interface",
    "name": "Data",
    "namespace": "ConfiguratorRouter",
    "members": [
      { "kind": "PropertySignature", "name": "displayOnly", "type": "boolean" },
      { "kind": "PropertySignature", "name": "forceReload", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "isOwnerCartEntry",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "owner",
        "type": "CommonConfigurator.Owner"
      },
      { "kind": "PropertySignature", "name": "pageType", "type": "PageType" },
      {
        "kind": "PropertySignature",
        "name": "resolveIssues",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Enum",
    "name": "PageType",
    "namespace": "ConfiguratorRouter",
    "members": ["CONFIGURATION", "OVERVIEW"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfiguratorRouterExtractorService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "createOwnerFromRouterState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routerState",
            "type": "RouterState",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!RouterState:interface",
            "shortType": "RouterState",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "CommonConfigurator.Owner"
      },
      {
        "kind": "Method",
        "name": "extractRouterData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ConfiguratorRouter.Data>"
      },
      {
        "kind": "Method",
        "name": "getConfiguratorTypeFromSemanticRoute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "semanticRoute",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "ROUTE_FRAGMENT_CONFIGURE", "type": "" },
      { "kind": "Property", "name": "ROUTE_FRAGMENT_OVERVIEW", "type": "" },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Enum",
    "name": "ConfiguratorType",
    "members": ["CPQ", "TEXTFIELD", "VARIANT"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfigureCartEntryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      { "kind": "Property", "name": "cartEntry", "type": "OrderEntry" },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      {
        "kind": "Method",
        "name": "getDisplayOnly",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "getEntityKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getOwnerType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "CommonConfigurator.OwnerType"
      },
      {
        "kind": "Method",
        "name": "getRoute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "hasIssues",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isDisabled",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "msgBanner", "type": "boolean" },
      { "kind": "Property", "name": "readOnly", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfigureCartEntryModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfigureProductComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productListItemContext",
            "type": "ProductListItemContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!ProductListItemContext:class",
            "shortType": "ProductListItemContext",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_common!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      { "kind": "Property", "name": "nonConfigurable", "type": "Product" },
      {
        "kind": "Property",
        "name": "ownerTypeProduct",
        "type": "CommonConfigurator.OwnerType"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "productListItemContext",
        "type": "ProductListItemContext"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Class",
    "name": "ConfigureProductModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Interface",
    "name": "LineItem",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "formattedPrice",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "formattedQuantity",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Enum",
    "name": "OrderEntryStatus",
    "members": ["Error", "Info", "Success", "Warning"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Interface",
    "name": "ProductConfiguratorConfig",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/common",
    "kind": "Interface",
    "name": "StatusSummary",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "numberOfIssues",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "status",
        "type": "OrderEntryStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Variable",
    "name": "CPQ_CONFIGURATOR_ADD_TO_CART_SERIALIZER",
    "type": "InjectionToken<Converter<Configurator.AddToCartParameters, OccCpqConfigurator.AddToCartParameters>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Variable",
    "name": "CPQ_CONFIGURATOR_NORMALIZER",
    "type": "InjectionToken<Converter<Cpq.Configuration, Configurator.Configuration>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Variable",
    "name": "CPQ_CONFIGURATOR_OVERVIEW_NORMALIZER",
    "type": "InjectionToken<Converter<Cpq.Configuration, Configurator.Overview>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Variable",
    "name": "CPQ_CONFIGURATOR_QUANTITY_SERIALIZER",
    "type": "InjectionToken<Converter<Configurator.Configuration, Cpq.UpdateValue>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Variable",
    "name": "CPQ_CONFIGURATOR_SERIALIZER",
    "type": "InjectionToken<Converter<Configurator.Configuration, Cpq.UpdateAttribute>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Variable",
    "name": "CPQ_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER",
    "type": "InjectionToken<Converter<Configurator.AddToCartParameters, OccCpqConfigurator.UpdateConfigurationForCartEntryParameters>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Namespace",
    "name": "Cpq"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "Attribute",
    "namespace": "Cpq",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "dataType",
        "type": "Cpq.DataType"
      },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "displayAs", "type": "number" },
      { "kind": "PropertySignature", "name": "hasConflict", "type": "boolean" },
      { "kind": "PropertySignature", "name": "incomplete", "type": "boolean" },
      { "kind": "PropertySignature", "name": "isEnabled", "type": "boolean" },
      { "kind": "PropertySignature", "name": "isLineItem", "type": "boolean" },
      { "kind": "PropertySignature", "name": "label", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "pA_ID", "type": "number" },
      { "kind": "PropertySignature", "name": "quantity", "type": "string" },
      { "kind": "PropertySignature", "name": "required", "type": "boolean" },
      { "kind": "PropertySignature", "name": "stdAttrCode", "type": "number" },
      { "kind": "PropertySignature", "name": "userInput", "type": "string" },
      { "kind": "PropertySignature", "name": "values", "type": "Value[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "ChangeAttributeValue",
    "namespace": "Cpq",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "attributeValueIds",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      { "kind": "PropertySignature", "name": "userInput", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "Configuration",
    "namespace": "Cpq",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "attributes",
        "type": "Attribute[]"
      },
      { "kind": "PropertySignature", "name": "completed", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "conflictMessages",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "currencyISOCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "currencySign", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "errorMessages",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "failedValidations",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "incompleteAttributes",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "incompleteMessages",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "invalidMessages",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "numberOfConflicts",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "productName", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "productSystemId",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "responder",
        "type": "Cpq.Responder"
      },
      { "kind": "PropertySignature", "name": "tabs", "type": "Tab[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "ConfigurationCreatedResponseData",
    "namespace": "Cpq",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "configurationId",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Enum",
    "name": "DataType",
    "namespace": "Cpq",
    "members": [
      "INPUT_NUMBER",
      "INPUT_STRING",
      "N_A",
      "QTY_ATTRIBUTE_LEVEL",
      "QTY_VALUE_LEVEL"
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Enum",
    "name": "DisplayAs",
    "namespace": "Cpq",
    "members": [
      "AUTO_COMPLETE_CUSTOM",
      "CHECK_BOX",
      "DROPDOWN",
      "INPUT",
      "LIST_BOX",
      "LIST_BOX_MULTI",
      "RADIO_BUTTON",
      "READ_ONLY"
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "Responder",
    "namespace": "Cpq",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "baseProductPrice",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "totalPrice", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "Tab",
    "namespace": "Cpq",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "attributes",
        "type": "Attribute[]"
      },
      { "kind": "PropertySignature", "name": "displayName", "type": "string" },
      { "kind": "PropertySignature", "name": "id", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "isIncomplete",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "isSelected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "UpdateAttribute",
    "namespace": "Cpq",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "changeAttributeValue",
        "type": "ChangeAttributeValue"
      },
      {
        "kind": "PropertySignature",
        "name": "configurationId",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "standardAttributeCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "tabId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "UpdateValue",
    "namespace": "Cpq",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "attributeValueId",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "configurationId",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "standardAttributeCode",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "tabId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "Value",
    "namespace": "Cpq",
    "members": [
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "paV_ID", "type": "number" },
      { "kind": "PropertySignature", "name": "price", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "productSystemId",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "string" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" },
      { "kind": "PropertySignature", "name": "valueCode", "type": "string" },
      { "kind": "PropertySignature", "name": "valueDisplay", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorEndpointConfig",
    "members": [
      {
        "kind": "Property",
        "name": "backend",
        "type": "CpqConfiguratorBackendConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorEndpointService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "CpqConfiguratorEndpointConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CpqConfiguratorEndpointConfig:class",
            "shortType": "CpqConfiguratorEndpointConfig",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "appendQueryParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parameters",
            "type": "[{\n        name: string;\n        value: string;\n    }]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "buildUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "endpointName",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "urlParams",
            "type": "Object",
            "isOptional": true,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          },
          {
            "name": "queryParams",
            "type": "[{\n        name: string;\n        value: string;\n    }]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "config",
        "type": "CpqConfiguratorEndpointConfig"
      },
      {
        "kind": "Property",
        "name": "CPQ_MARKER_HEADER",
        "type": "{\n        headers: HttpHeaders;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cpqConfiguratorNormalizerUtilsService",
            "type": "CpqConfiguratorNormalizerUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CpqConfiguratorNormalizerUtilsService:class",
            "shortType": "CpqConfiguratorNormalizerUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "compileAttributeIncomplete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Cpq.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Configuration:interface",
            "shortType": "Cpq.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "target",
            "type": "Configurator.Configuration",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Configuration"
      },
      {
        "kind": "Method",
        "name": "convertAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sourceAttribute",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "groupId",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "attributeList",
            "type": "Configurator.Attribute[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertAttributeType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sourceAttribute",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "Configurator.UiType"
      },
      {
        "kind": "Method",
        "name": "convertAttributeTypeOld",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "displayAs",
            "type": "Cpq.DisplayAs",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.DisplayAs:enum",
            "shortType": "Cpq.DisplayAs",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "displayAsProduct",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.UiType"
      },
      {
        "kind": "Method",
        "name": "convertGenericGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sourceAttributes",
            "type": "Cpq.Attribute[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "incompleteAttributes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupList",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "flatGroupList",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Cpq.Tab",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Tab:interface",
            "shortType": "Cpq.Tab",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "sourceAttributes",
            "type": "Cpq.Attribute[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupList",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "flatGroupList",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sourceValue",
            "type": "Cpq.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Value:interface",
            "shortType": "Cpq.Value",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "sourceAttribute",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "values",
            "type": "Configurator.Value[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertValueDisplay",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sourceValue",
            "type": "Cpq.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Value:interface",
            "shortType": "Cpq.Value",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "sourceAttribute",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "cpqConfiguratorNormalizerUtilsService",
        "type": "CpqConfiguratorNormalizerUtilsService"
      },
      {
        "kind": "Method",
        "name": "generateErrorMessages",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Cpq.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Configuration:interface",
            "shortType": "Cpq.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "generateTotalNumberOfIssues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Cpq.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Configuration:interface",
            "shortType": "Cpq.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "generateWarningMessages",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Cpq.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Configuration:interface",
            "shortType": "Cpq.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "hasValueToBeIgnored",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "value",
            "type": "Cpq.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Value:interface",
            "shortType": "Cpq.Value",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "setSelectedSingleValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorNormalizerUtilsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "calculateAttributePriceTotal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.PriceDetails"
      },
      {
        "kind": "Method",
        "name": "calculateValuePriceTotal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "valuePrice",
            "type": "Configurator.PriceDetails",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.PriceDetails:interface",
            "shortType": "Configurator.PriceDetails",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.PriceDetails | undefined"
      },
      {
        "kind": "Method",
        "name": "convertAttributeLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "convertDataType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cpqAttribute",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "Configurator.DataType"
      },
      {
        "kind": "Method",
        "name": "convertPriceSummary",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cpqConfiguration",
            "type": "Cpq.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Configuration:interface",
            "shortType": "Cpq.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "Configurator.PriceSummary"
      },
      {
        "kind": "Method",
        "name": "convertQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Cpq.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Value:interface",
            "shortType": "Cpq.Value",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "attribute",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "number | undefined"
      },
      {
        "kind": "Method",
        "name": "convertValuePrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Cpq.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Value:interface",
            "shortType": "Cpq.Value",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.PriceDetails | undefined"
      },
      {
        "kind": "Method",
        "name": "formatPriceForLocale",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "price",
            "type": "Configurator.PriceDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.PriceDetails:interface",
            "shortType": "Configurator.PriceDetails",
            "importPath": ""
          },
          {
            "name": "availableLocale",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getActiveLanguage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLanguage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "hasAnyProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attributeValues",
            "type": "Cpq.Value[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Value:interface",
            "shortType": "Cpq.Value",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      },
      {
        "kind": "Method",
        "name": "reportMissingLocaleData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lang",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorOccService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "getConfigIdForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getConfigIdForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<string>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "updateCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorOverviewNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cpqConfiguratorNormalizerUtilsService",
            "type": "CpqConfiguratorNormalizerUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CpqConfiguratorNormalizerUtilsService:class",
            "shortType": "CpqConfiguratorNormalizerUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "calculateTotalNumberOfIssues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Cpq.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Configuration:interface",
            "shortType": "Cpq.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Cpq.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Configuration:interface",
            "shortType": "Cpq.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "target",
            "type": "Configurator.Overview",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Overview:interface",
            "shortType": "Configurator.Overview",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Overview"
      },
      {
        "kind": "Method",
        "name": "convertAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attr",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.AttributeOverview[]"
      },
      {
        "kind": "Method",
        "name": "convertAttributeValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attr",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.AttributeOverview[]"
      },
      {
        "kind": "Method",
        "name": "convertTab",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tab",
            "type": "Cpq.Tab",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Tab:interface",
            "shortType": "Cpq.Tab",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.GroupOverview"
      },
      {
        "kind": "Property",
        "name": "cpqConfiguratorNormalizerUtilsService",
        "type": "CpqConfiguratorNormalizerUtilsService"
      },
      {
        "kind": "Method",
        "name": "extractValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "valueSelected",
            "type": "Cpq.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Value:interface",
            "shortType": "Cpq.Value",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "attr",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.AttributeOverview"
      },
      {
        "kind": "Method",
        "name": "extractValueUserInput",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attr",
            "type": "Cpq.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Attribute:interface",
            "shortType": "Cpq.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "currency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.AttributeOverview"
      },
      { "kind": "Property", "name": "NO_OPTION_SELECTED", "type": "" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorRestAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cpqRestService",
            "type": "CpqConfiguratorRestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CpqConfiguratorRestService:class",
            "shortType": "CpqConfiguratorRestService",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          },
          {
            "name": "cpqOccService",
            "type": "CpqConfiguratorOccService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CpqConfiguratorOccService:class",
            "shortType": "CpqConfiguratorOccService",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Property",
        "name": "cpqOccService",
        "type": "CpqConfiguratorOccService"
      },
      {
        "kind": "Property",
        "name": "cpqRestService",
        "type": "CpqConfiguratorRestService"
      },
      {
        "kind": "Method",
        "name": "createConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Overview>"
      },
      {
        "kind": "Method",
        "name": "getConfiguratorType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "readConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readPriceSummary",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorRestModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorRestService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "endpointService",
            "type": "CpqConfiguratorEndpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!CpqConfiguratorEndpointService:class",
            "shortType": "CpqConfiguratorEndpointService",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "callConfigurationDisplay",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "tabId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cpq.Configuration>"
      },
      {
        "kind": "Method",
        "name": "callConfigurationInit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productSystemId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cpq.ConfigurationCreatedResponseData>"
      },
      {
        "kind": "Method",
        "name": "callUpdateAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "updateAttribute",
            "type": "Cpq.UpdateAttribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.UpdateAttribute:interface",
            "shortType": "Cpq.UpdateAttribute",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "callUpdateValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "updateValue",
            "type": "Cpq.UpdateValue",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.UpdateValue:interface",
            "shortType": "Cpq.UpdateValue",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "createConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productSystemId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "endpointService",
        "type": "CpqConfiguratorEndpointService"
      },
      {
        "kind": "Method",
        "name": "getConfigurationWithAllTabsAndAttributes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Cpq.Configuration>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "mergeTabResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tabReqResultList",
            "type": "Cpq.Configuration[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Cpq.Configuration:interface",
            "shortType": "Cpq.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "Cpq.Configuration"
      },
      {
        "kind": "Method",
        "name": "readConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "tabId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Overview>"
      },
      {
        "kind": "Method",
        "name": "updateAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateValueQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorSerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Cpq.UpdateAttribute"
      },
      {
        "kind": "Method",
        "name": "convertAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "configurationId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Cpq.UpdateAttribute"
      },
      {
        "kind": "Method",
        "name": "convertQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Cpq.UpdateAttribute"
      },
      {
        "kind": "Method",
        "name": "prepareValueIds",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "processSelectedSingleValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "singleValue",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorUtils",
    "members": [
      {
        "kind": "Method",
        "name": "findFirstChangedAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Attribute"
      },
      {
        "kind": "Method",
        "name": "getUpdateInformation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "CpqUpdateInformation"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "CpqConfiguratorValueSerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Cpq.UpdateValue"
      },
      {
        "kind": "Method",
        "name": "convertAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "configurationId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Cpq.UpdateValue"
      },
      {
        "kind": "Method",
        "name": "findFirstChangedValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Value"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "OccConfiguratorCpqAddToCartSerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "OccCpqConfigurator.AddToCartParameters",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!OccCpqConfigurator.AddToCartParameters:interface",
            "shortType": "OccCpqConfigurator.AddToCartParameters",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "OccCpqConfigurator.AddToCartParameters"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "OccConfiguratorCpqUpdateCartEntrySerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "OccCpqConfigurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased_cpq!OccCpqConfigurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "OccCpqConfigurator.UpdateConfigurationForCartEntryParameters",
            "importPath": "@spartacus/product-configurator/rulebased/cpq"
          }
        ],
        "returnType": "OccCpqConfigurator.UpdateConfigurationForCartEntryParameters"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Namespace",
    "name": "OccCpqConfigurator"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "AddToCartParameters",
    "namespace": "OccCpqConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "cartId", "type": "string" },
      { "kind": "PropertySignature", "name": "configId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "product",
        "type": "AddToCartProductData"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      { "kind": "PropertySignature", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "AddToCartProductData",
    "namespace": "OccCpqConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Interface",
    "name": "UpdateConfigurationForCartEntryParameters",
    "namespace": "OccCpqConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "cartId", "type": "string" },
      { "kind": "PropertySignature", "name": "configId", "type": "string" },
      { "kind": "PropertySignature", "name": "entryNumber", "type": "string" },
      { "kind": "PropertySignature", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/cpq",
    "kind": "Class",
    "name": "RulebasedCpqConfiguratorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Interface",
    "name": "CpqAccessData",
    "members": [
      { "kind": "PropertySignature", "name": "accessToken", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "accessTokenExpirationTime",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "endpoint", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqAccessLoaderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getCpqAccessData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CpqAccessData>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqAccessStorageService",
    "members": [
      {
        "kind": "Property",
        "name": "_cpqAccessData$",
        "type": "BehaviorSubject<CpqAccessData>"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cpqAccessLoaderService",
            "type": "CpqAccessLoaderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!CpqAccessLoaderService:class",
            "shortType": "CpqAccessLoaderService",
            "importPath": "@spartacus/product-configurator/rulebased/root"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "CpqConfiguratorAuthConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!CpqConfiguratorAuthConfig:class",
            "shortType": "CpqConfiguratorAuthConfig",
            "importPath": "@spartacus/product-configurator/rulebased/root"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "config",
        "type": "CpqConfiguratorAuthConfig"
      },
      {
        "kind": "Property",
        "name": "cpqAccessData$",
        "type": "Observable<CpqAccessData>"
      },
      {
        "kind": "Property",
        "name": "cpqAccessLoaderService",
        "type": "CpqAccessLoaderService"
      },
      {
        "kind": "Property",
        "name": "currentAuthServiceSubscription",
        "type": "Subscription"
      },
      {
        "kind": "Property",
        "name": "currentCpqAccessSubscription",
        "type": "Subscription"
      },
      { "kind": "Property", "name": "EXPIRED_TOKEN", "type": "CpqAccessData" },
      {
        "kind": "Method",
        "name": "fetchNextTokenIn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "CpqAccessData",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!CpqAccessData:interface",
            "shortType": "CpqAccessData",
            "importPath": "@spartacus/product-configurator/rulebased/root"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getCpqAccessData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CpqAccessData>"
      },
      {
        "kind": "Method",
        "name": "initCpqAccessData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isTokenExpired",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tokenData",
            "type": "CpqAccessData",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!CpqAccessData:interface",
            "shortType": "CpqAccessData",
            "importPath": "@spartacus/product-configurator/rulebased/root"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "renewCpqAccessData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "startAutoFetchingCpqAccessData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "stopAutoFetchingCpqAccessData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqConfiguratorAuthConfig",
    "members": [
      {
        "kind": "Property",
        "name": "productConfigurator",
        "type": "ProductConfiguratorCpqAuthConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqConfiguratorInteractiveModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqConfiguratorInterceptorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqConfiguratorLayoutModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqConfiguratorOverviewModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqConfiguratorRestInterceptor",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cpqAccessStorageService",
            "type": "CpqAccessStorageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!CpqAccessStorageService:class",
            "shortType": "CpqAccessStorageService",
            "importPath": "@spartacus/product-configurator/rulebased/root"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cpqAccessStorageService",
        "type": "CpqAccessStorageService"
      },
      { "kind": "Property", "name": "cpqSessionId", "type": "string | null" },
      {
        "kind": "Method",
        "name": "enrichHeaders",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "cpqData",
            "type": "CpqAccessData",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased_root!CpqAccessData:interface",
            "shortType": "CpqAccessData",
            "importPath": "@spartacus/product-configurator/rulebased/root"
          }
        ],
        "returnType": "HttpRequest<any>"
      },
      {
        "kind": "Method",
        "name": "extractCpqSessionId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "HttpEvent<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpEvent:type",
            "shortType": "HttpEvent",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errorResponse",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          },
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      },
      { "kind": "Property", "name": "HEADER_ATTR_CPQ_NO_COOKIES", "type": "" },
      { "kind": "Property", "name": "HEADER_ATTR_CPQ_SESSION_ID", "type": "" },
      {
        "kind": "Method",
        "name": "intercept",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "HttpRequest<any>",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpRequest:class",
            "shortType": "HttpRequest",
            "importPath": "@angular/common/http"
          },
          {
            "name": "next",
            "type": "HttpHandler",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpHandler:class",
            "shortType": "HttpHandler",
            "importPath": "@angular/common/http"
          }
        ],
        "returnType": "Observable<HttpEvent<any>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "CpqConfiguratorRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Function",
    "name": "defaultProductConfiguratorRulebasedComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Variable",
    "name": "MARKER_HEADER_CPQ_CONFIGURATOR",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Variable",
    "name": "PRODUCT_CONFIGURATOR_RULEBASED_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Interface",
    "name": "ProductConfiguratorCpqAuthConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cpq",
        "type": "{\n        authentication: {\n            tokenExpirationBuffer: number;\n            tokenMaxValidity: number;\n            tokenMinValidity: number;\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "RulebasedConfiguratorRootFeatureModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "RulebasedConfiguratorRootModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<RulebasedConfiguratorRootModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "RulebasedConfiguratorRoutingModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<RulebasedConfiguratorRoutingModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "VariantConfiguratorInteractiveLayoutModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "VariantConfiguratorInteractiveModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "VariantConfiguratorOverviewLayoutModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased/root",
    "kind": "Class",
    "name": "VariantConfiguratorOverviewModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfigFormUpdateEvent",
    "members": [
      {
        "kind": "Property",
        "name": "changedAttribute",
        "type": "Configurator.Attribute"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "updateType",
        "type": "Configurator.UpdateType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "CONFIGURATOR_DATA",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "CONFIGURATOR_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Namespace",
    "name": "ConfiguratorActions"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "ADD_NEXT_OWNER",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "ADD_TO_CART",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "AddNextOwner",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string;\n        cartEntryNo: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string;\n        cartEntryNo: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "AddToCart",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.AddToCartParameters"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "CHANGE_GROUP_FINALIZE",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "CHANGE_GROUP",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ChangeGroup",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        configuration: Configurator.Configuration;\n        groupId: string;\n        parentGroupId?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        configuration: Configurator.Configuration;\n        groupId: string;\n        parentGroupId?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ChangeGroupFinalize",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "TypeAlias",
    "name": "ConfiguratorAction",
    "namespace": "ConfiguratorActions",
    "members": [
      "CreateConfiguration",
      " | ",
      "CreateConfigurationFail",
      " | ",
      "CreateConfigurationSuccess",
      " | ",
      "ReadConfiguration",
      " | ",
      "ReadConfigurationFail",
      " | ",
      "ReadConfigurationSuccess",
      " | ",
      "UpdateConfiguration",
      " | ",
      "UpdateConfigurationFail",
      " | ",
      "UpdateConfigurationSuccess",
      " | ",
      "UpdateConfigurationFinalizeFail",
      " | ",
      "UpdateConfigurationFinalizeSuccess",
      " | ",
      "UpdatePriceSummary",
      " | ",
      "UpdatePriceSummaryFail",
      " | ",
      "UpdatePriceSummarySuccess",
      " | ",
      "ChangeGroup",
      " | ",
      "ChangeGroupFinalize",
      " | ",
      "GetConfigurationOverview",
      " | ",
      "GetConfigurationOverviewFail",
      " | ",
      "GetConfigurationOverviewSuccess",
      " | ",
      "RemoveConfiguration",
      " | ",
      "SetInteractionState",
      " | ",
      "SetMenuParentGroup",
      " | ",
      "SetCurrentGroup",
      " | ",
      "SetGroupsVisited"
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "TypeAlias",
    "name": "ConfiguratorCartAction",
    "namespace": "ConfiguratorActions",
    "members": [
      "AddNextOwner",
      " | ",
      "SetNextOwnerCartEntry",
      " | ",
      "ReadCartEntryConfiguration",
      " | ",
      "ReadCartEntryConfigurationSuccess",
      " | ",
      "ReadCartEntryConfigurationFail",
      " | ",
      "ReadOrderEntryConfiguration",
      " | ",
      "ReadOrderEntryConfigurationSuccess",
      " | ",
      "ReadOrderEntryConfigurationFail",
      " | ",
      "RemoveCartBoundConfigurations",
      " | ",
      "UpdateCartEntry"
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "CREATE_CONFIGURATION_FAIL",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "CREATE_CONFIGURATION_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "CREATE_CONFIGURATION",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "CreateConfiguration",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CommonConfigurator.Owner"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "CreateConfigurationFail",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "CreateConfigurationSuccess",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "GET_CONFIGURATION_OVERVIEW_FAIL",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "GET_CONFIGURATION_OVERVIEW_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "GET_CONFIGURATION_OVERVIEW",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "GetConfigurationOverview",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "GetConfigurationOverviewFail",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "GetConfigurationOverviewSuccess",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string;\n        overview: Configurator.Overview;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string;\n        overview: Configurator.Overview;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_CART_ENTRY_CONFIGURATION_FAIL",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_CART_ENTRY_CONFIGURATION_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_CART_ENTRY_CONFIGURATION",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_CONFIGURATION_FAIL",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_CONFIGURATION_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_CONFIGURATION",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_ORDER_ENTRY_CONFIGURATION_FAIL",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_ORDER_ENTRY_CONFIGURATION_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "READ_ORDER_ENTRY_CONFIGURATION",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadCartEntryConfiguration",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadCartEntryConfigurationFail",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadCartEntryConfigurationSuccess",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadConfiguration",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        configuration: Configurator.Configuration;\n        groupId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        configuration: Configurator.Configuration;\n        groupId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadConfigurationFail",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadConfigurationSuccess",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadOrderEntryConfiguration",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadOrderEntryConfigurationFail",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ReadOrderEntryConfigurationSuccess",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "REMOVE_CART_BOUND_CONFIGURATIONS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "REMOVE_CONFIGURATION",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RemoveCartBoundConfigurations",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RemoveConfiguration",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string | string[];\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string | string[];\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "SET_CURRENT_GROUP",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "SET_GROUPS_VISITED",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "SET_INTERACTION_STATE",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "SET_MENU_PARENT_GROUP",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "SET_NEXT_OWNER_CART_ENTRY",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "SetCurrentGroup",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        entityKey: string | string[];\n        currentGroup: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        entityKey: string | string[];\n        currentGroup: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "SetGroupsVisited",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        entityKey: string;\n        visitedGroups: string[];\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        entityKey: string;\n        visitedGroups: string[];\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "SetInteractionState",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        entityKey: string | string[];\n        interactionState: Configurator.InteractionState;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        entityKey: string | string[];\n        interactionState: Configurator.InteractionState;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "SetMenuParentGroup",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        entityKey: string | string[];\n        menuParentGroup?: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        entityKey: string | string[];\n        menuParentGroup?: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "SetNextOwnerCartEntry",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        configuration: Configurator.Configuration;\n        cartEntryNo: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        configuration: Configurator.Configuration;\n        cartEntryNo: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_CART_ENTRY_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_CART_ENTRY",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_CONFIGURATION_FAIL",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_CONFIGURATION_FINALIZE_FAIL",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_CONFIGURATION_FINALIZE_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_CONFIGURATION_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_CONFIGURATION",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_PRICE_SUMMARY_FAIL",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_PRICE_SUMMARY_SUCCESS",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "UPDATE_PRICE_SUMMARY",
    "namespace": "ConfiguratorActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdateCartEntry",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.UpdateConfigurationForCartEntryParameters"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdateConfiguration",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdateConfigurationFail",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        configuration: Configurator.Configuration;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        configuration: Configurator.Configuration;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdateConfigurationFinalizeFail",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdateConfigurationFinalizeSuccess",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdateConfigurationSuccess",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdatePriceSummary",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdatePriceSummaryFail",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        ownerKey: string;\n        error: any;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        ownerKey: string;\n        error: any;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "UpdatePriceSummarySuccess",
    "namespace": "ConfiguratorActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "Configurator.Configuration"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAddToCartButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorCartService",
            "type": "ConfiguratorCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
            "shortType": "ConfiguratorCartService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCartService",
        "type": "ConfiguratorCartService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "container$",
        "type": "Observable<{\n        routerData: ConfiguratorRouter.Data;\n        configuration: Configurator.Configuration;\n        hasPendingChanges: boolean;\n    }>"
      },
      {
        "kind": "Method",
        "name": "displayConfirmationMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getButtonResourceKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routerData",
            "type": "ConfiguratorRouter.Data",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouter.Data:interface",
            "shortType": "ConfiguratorRouter.Data",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "navigateToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "navigateToOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onAddToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          },
          {
            "name": "routerData",
            "type": "ConfiguratorRouter.Data",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouter.Data:interface",
            "shortType": "ConfiguratorRouter.Data",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "performNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "isAdd",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "isOverview",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "showMessage",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAddToCartButtonModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeBaseComponent",
    "members": [
      {
        "kind": "Method",
        "name": "createAriaLabelledBy",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "prefix",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "attributeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "valueId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "hasQuantity",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "createAttributeIdForConfigurator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentAttribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "createAttributeUiKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "prefix",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "attributeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "createAttributeValueIdForConfigurator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentAttribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "createFocusId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attributeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "valueCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "createValueUiKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "prefix",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "attributeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "valueId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getAttributeCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getUiType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeCheckBoxComponent",
    "members": [
      {
        "kind": "Method",
        "name": "assembleSingleValue",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Configurator.Value[]"
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "attributeCheckBoxForm",
        "type": "FormControl"
      },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeCheckBoxListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtilsService",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "allowZeroValueQuantity",
        "type": "boolean"
      },
      {
        "kind": "Property",
        "name": "attributeCheckBoxForms",
        "type": "FormControl[]"
      },
      {
        "kind": "Property",
        "name": "configUtilsService",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeValueQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "valueCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "formIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeCheckboxListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeCheckboxModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeDropDownComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeDropDownForm",
        "type": "FormControl"
      },
      {
        "kind": "Method",
        "name": "getSelectedValue",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Configurator.Value | undefined"
      },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeDropDownModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeFooterComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      { "kind": "Property", "name": "groupId", "type": "string" },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isUserInputEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "input",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "needsUserInputMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "owner",
        "type": "CommonConfigurator.Owner"
      },
      {
        "kind": "Property",
        "name": "showRequiredMessageForUserInput$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeFooterModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeHeaderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "getConflictMessageKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRequiredMessageKey",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "groupId", "type": "string" },
      {
        "kind": "Property",
        "name": "groupType",
        "type": "Configurator.GroupType"
      },
      { "kind": "Property", "name": "hasImage", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "image",
        "type": "Configurator.Image | undefined"
      },
      {
        "kind": "Method",
        "name": "isAttributeGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isMultiSelection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRequiredAttributeWithDomain",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSingleSelection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "owner",
        "type": "CommonConfigurator.Owner"
      },
      {
        "kind": "Property",
        "name": "showRequiredMessageForDomainAttribute$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeHeaderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeInputFieldComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "ConfiguratorUISettingsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
            "shortType": "ConfiguratorUISettingsConfig",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "attributeInputForm",
        "type": "FormControl"
      },
      {
        "kind": "Property",
        "name": "config",
        "type": "ConfiguratorUISettingsConfig"
      },
      { "kind": "Property", "name": "FALLBACK_DEBOUNCE_TIME", "type": "" },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Property",
        "name": "inputChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "ownerType",
        "type": "CommonConfigurator.OwnerType"
      },
      { "kind": "Property", "name": "sub", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeInputFieldModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeMultiSelectionBaseComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "disableQuantityActions",
        "type": "boolean"
      },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractQuantityParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "initialQuantity",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "allowZero",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorAttributeQuantityComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "onHandleAttributeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      },
      { "kind": "Property", "name": "withQuantity", "type": "boolean" },
      {
        "kind": "Property",
        "name": "withQuantityOnAttributeLevel",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeMultiSelectionBundleComponent",
    "members": [
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractProductCardParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "disableAllButtons",
            "type": "boolean | null",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "hideRemoveButton",
            "type": "boolean | null",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorAttributeProductCardComponentOptions"
      },
      {
        "kind": "Property",
        "name": "multipleSelectionValues",
        "type": "SelectionValue[]"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeAttributeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeValueQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventValue",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onDeselect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventValue",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onDeselectAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventValue",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "preventAction$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "updateMultipleSelectionValues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "valueCode",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "state",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ConfigFormUpdateEvent"
      },
      {
        "kind": "Method",
        "name": "updateMultipleSelectionValuesQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventValue",
            "type": "{\n        valueCode: string;\n        quantity: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ConfigFormUpdateEvent | undefined"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeMultiSelectionBundleModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeMultiSelectionImageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configUtilsService",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "attributeCheckBoxForms",
        "type": "FormControl[]"
      },
      {
        "kind": "Property",
        "name": "configUtilsService",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeMultiSelectionImageModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeNumericInputFieldComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configAttributeNumericInputFieldService",
            "type": "ConfiguratorAttributeNumericInputFieldService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeNumericInputFieldService:class",
            "shortType": "ConfiguratorAttributeNumericInputFieldService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "config",
            "type": "ConfiguratorUISettingsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
            "shortType": "ConfiguratorUISettingsConfig",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "config",
        "type": "ConfiguratorUISettingsConfig"
      },
      {
        "kind": "Property",
        "name": "configAttributeNumericInputFieldService",
        "type": "ConfiguratorAttributeNumericInputFieldService"
      },
      {
        "kind": "Method",
        "name": "getDefaultSettings",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "DefaultSettings"
      },
      {
        "kind": "Method",
        "name": "getInstalledLocale",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "locale",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "language", "type": "string" },
      { "kind": "Property", "name": "locale", "type": "string" },
      {
        "kind": "Method",
        "name": "mustDisplayValidationMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "numericFormatPattern", "type": "string" },
      {
        "kind": "Method",
        "name": "reportMissingLocaleData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "lang",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeNumericInputFieldModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeNumericInputFieldService",
    "members": [
      {
        "kind": "Method",
        "name": "createValidationError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isError",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "{\n        [key: string]: any;\n    } | null"
      },
      {
        "kind": "Method",
        "name": "getNumberFormatValidator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "locale",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "numberDecimalPlaces",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "numberTotalPlaces",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "negativeAllowed",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ValidatorFn"
      },
      {
        "kind": "Method",
        "name": "getPatternForValidationMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "decimalPlaces",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "totalLength",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "negativeAllowed",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "locale",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "performValidationAccordingToMetaData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "input",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupingSeparator",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "decimalSeparator",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "numberTotalPlaces",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "numberDecimalPlaces",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeProductCardComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "keyBoardFocus",
            "type": "KeyboardFocusService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!KeyboardFocusService:class",
            "shortType": "KeyboardFocusService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractQuantityParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorAttributeQuantityComponentOptions"
      },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Property",
        "name": "handleDeselect",
        "type": "EventEmitter<string>"
      },
      {
        "kind": "Property",
        "name": "handleQuantity",
        "type": "EventEmitter<QuantityUpdateEvent>"
      },
      {
        "kind": "Property",
        "name": "handleSelect",
        "type": "EventEmitter<string>"
      },
      {
        "kind": "Method",
        "name": "hasPriceDisplay",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isProductCardSelected",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isValueCodeDefined",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "valueCode",
            "type": "string | null | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "keyBoardFocus",
        "type": "KeyboardFocusService"
      },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onHandleDeselect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onHandleQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onHandleSelect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "productCardOptions",
        "type": "ConfiguratorAttributeProductCardComponentOptions"
      },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      {
        "kind": "Property",
        "name": "showDeselectionNotPossible",
        "type": "boolean"
      },
      {
        "kind": "Method",
        "name": "showDeselectionNotPossibleMessage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "showQuantity", "type": "boolean" },
      {
        "kind": "Method",
        "name": "transformToProductType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value | undefined",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "Product"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "ConfiguratorAttributeProductCardComponentOptions",
    "members": [
      { "kind": "PropertySignature", "name": "attributeId", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "disableAllButtons",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "fallbackFocusId",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "hideRemoveButton",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "loading$",
        "type": "Observable<boolean>"
      },
      { "kind": "PropertySignature", "name": "multiSelect", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "productBoundValue",
        "type": "Configurator.Value"
      },
      {
        "kind": "PropertySignature",
        "name": "singleDropdown",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "withQuantity", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeProductCardModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeQuantityComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "ConfiguratorUISettingsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUISettingsConfig:class",
            "shortType": "ConfiguratorUISettingsConfig",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "changeQuantity",
        "type": "EventEmitter<number>"
      },
      {
        "kind": "Property",
        "name": "config",
        "type": "ConfiguratorUISettingsConfig"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onChangeQuantity",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "optionsChangeSub",
        "type": "Subscription"
      },
      { "kind": "Property", "name": "quantity", "type": "FormControl" },
      {
        "kind": "Property",
        "name": "quantityChangeSub",
        "type": "Subscription"
      },
      {
        "kind": "Property",
        "name": "quantityOptions",
        "type": "ConfiguratorAttributeQuantityComponentOptions"
      },
      {
        "kind": "Method",
        "name": "subscribeToQuantityChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Subscription"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "ConfiguratorAttributeQuantityComponentOptions",
    "members": [
      { "kind": "PropertySignature", "name": "allowZero", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "disableQuantityActions$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "PropertySignature",
        "name": "initialQuantity",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeQuantityModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeQuantityService",
    "members": [
      {
        "kind": "Method",
        "name": "allowZeroValueQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "disableQuantityActions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "disableQuantityActionsMultiSelection",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "withQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "dataType",
            "type": "Configurator.DataType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.DataType:enum",
            "shortType": "Configurator.DataType",
            "importPath": ""
          },
          {
            "name": "uiType",
            "type": "Configurator.UiType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UiType:enum",
            "shortType": "Configurator.UiType",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "withQuantityOnAttributeLevel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeRadioButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeRadioButtonForm",
        "type": "FormControl"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeRadioButtonModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeReadOnlyComponent",
    "members": [
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      { "kind": "Property", "name": "group", "type": "String" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeReadOnlyModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionBaseComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantityService",
            "type": "ConfiguratorAttributeQuantityService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorAttributeQuantityService:class",
            "shortType": "ConfiguratorAttributeQuantityService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "disableQuantityActions",
        "type": "boolean"
      },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractQuantityParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormControl",
            "isOptional": true,
            "canonicalReference": "@angular/forms!FormControl:class",
            "shortType": "FormControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "ConfiguratorAttributeQuantityComponentOptions"
      },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      {
        "kind": "Method",
        "name": "getInitialQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormControl",
            "isOptional": true,
            "canonicalReference": "@angular/forms!FormControl:class",
            "shortType": "FormControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getSelectedValuePrice",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Configurator.PriceDetails | undefined"
      },
      {
        "kind": "Property",
        "name": "loading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "onChangeQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventObject",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "form",
            "type": "FormControl",
            "isOptional": true,
            "canonicalReference": "@angular/forms!FormControl:class",
            "shortType": "FormControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onHandleQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "quantity",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSelect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "quantityService",
        "type": "ConfiguratorAttributeQuantityService"
      },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      },
      { "kind": "Property", "name": "withQuantity", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionBundleComponent",
    "members": [
      {
        "kind": "Method",
        "name": "extractProductCardParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorAttributeProductCardComponentOptions"
      },
      {
        "kind": "Method",
        "name": "getFocusIdOfNearestValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentValue",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionBundleDropdownComponent",
    "members": [
      {
        "kind": "Property",
        "name": "attributeDropDownForm",
        "type": "FormControl"
      },
      {
        "kind": "Method",
        "name": "extractProductCardParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorAttributeProductCardComponentOptions"
      },
      { "kind": "Property", "name": "group", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectionValue",
        "type": "Configurator.Value"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionBundleDropdownModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionBundleModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionImageComponent",
    "members": [
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "attributeRadioButtonForm",
        "type": "FormControl"
      },
      {
        "kind": "Method",
        "name": "extractValuePriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorPriceComponentOptions | undefined"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ownerKey", "type": "string" },
      {
        "kind": "Property",
        "name": "selectionChange",
        "type": "EventEmitter<ConfigFormUpdateEvent>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorAttributeSingleSelectionImageModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorCartService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithConfigurator>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "checkoutFacade",
            "type": "CheckoutFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CheckoutFacade:class",
            "shortType": "CheckoutFacade",
            "importPath": "@spartacus/checkout/root"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configuratorUtilsService",
            "type": "ConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
            "shortType": "ConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "activeCartHasIssues",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "checkoutFacade",
        "type": "CheckoutFacade"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "configurationNeedsReading",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configurationState",
            "type": "StateUtils.LoaderState<Configurator.Configuration>",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "configuratorUtilsService",
        "type": "ConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "isConfigurationCreated",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "removeCartBoundConfigurations",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithConfigurator>"
      },
      {
        "kind": "Method",
        "name": "updateCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorCommonsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithConfigurator>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configuratorCartService",
            "type": "ConfiguratorCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
            "shortType": "ConfiguratorCartService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configuratorUtils",
            "type": "ConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
            "shortType": "ConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Property",
        "name": "configuratorCartService",
        "type": "ConfiguratorCartService"
      },
      {
        "kind": "Property",
        "name": "configuratorUtils",
        "type": "ConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "getConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getConfigurationWithOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getOrCreateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getOrCreateConfigurationForProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "hasConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "hasConflicts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "hasPendingChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isConfigurationLoading",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "removeConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeObsoleteProductBoundConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithConfigurator>"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ownerKey",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "changedAttribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "updateType",
            "type": "Configurator.UpdateType",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateType:enum",
            "shortType": "Configurator.UpdateType",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorConflictAndErrorMessagesComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "showErrors", "type": "boolean" },
      { "kind": "Property", "name": "showWarnings", "type": "boolean" },
      {
        "kind": "Method",
        "name": "toggleErrors",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleWarnings",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorConflictAndErrorMessagesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorConflictDescriptionComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Property",
        "name": "currentGroup",
        "type": "Configurator.Group"
      },
      {
        "kind": "Method",
        "name": "displayConflictDescription",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "groupType",
        "type": "typeof Configurator.GroupType"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "tabindex", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorConflictDescriptionModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorConflictSuggestionComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "Configurator.Attribute"
      },
      {
        "kind": "Property",
        "name": "currentGroup",
        "type": "Configurator.Group"
      },
      {
        "kind": "Method",
        "name": "displayConflictSuggestion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "groupType",
        "type": "typeof Configurator.GroupType"
      },
      { "kind": "Property", "name": "suggestionNumber", "type": "number" },
      { "kind": "Property", "name": "tabindex", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorConflictSuggestionModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorExitButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "windowRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Method",
        "name": "exitConfiguration",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isDesktop",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isMobile",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "windowRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorExitButtonModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeLanguage$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "createGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "currentGroup$",
        "type": "Observable<Configurator.Group>"
      },
      {
        "kind": "Method",
        "name": "isConflictGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "uiType",
        "type": "typeof Configurator.UiType"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "ConfigFormUpdateEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfigFormUpdateEvent:class",
            "shortType": "ConfigFormUpdateEvent",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupMenuComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configGroupMenuService",
            "type": "ConfiguratorGroupMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupMenuService:class",
            "shortType": "ConfiguratorGroupMenuService",
            "importPath": ""
          },
          {
            "name": "directionService",
            "type": "DirectionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!DirectionService:class",
            "shortType": "DirectionService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "click",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "COMPLETE", "type": "string" },
      {
        "kind": "Method",
        "name": "condenseGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group[]"
      },
      {
        "kind": "Property",
        "name": "configCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configGroupMenuService",
        "type": "ConfiguratorGroupMenuService"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "containsSelectedGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "createAriaControls",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "currentGroup$",
        "type": "Observable<Configurator.Group>"
      },
      {
        "kind": "Property",
        "name": "directionService",
        "type": "DirectionService"
      },
      {
        "kind": "Property",
        "name": "displayedGroups$",
        "type": "Observable<Configurator.Group[]>"
      },
      {
        "kind": "Property",
        "name": "displayedParentGroup$",
        "type": "Observable<Configurator.Group | undefined>"
      },
      { "kind": "Property", "name": "ERROR", "type": "string" },
      {
        "kind": "Method",
        "name": "getCondensedParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parentGroup",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Group | undefined>"
      },
      {
        "kind": "Method",
        "name": "getConflictNumber",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getGroupStatusStyles",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Group | undefined>"
      },
      {
        "kind": "Method",
        "name": "getTabIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "groups",
        "type": "QueryList<ElementRef<HTMLElement>>"
      },
      {
        "kind": "Property",
        "name": "hamburgerMenuService",
        "type": "HamburgerMenuService"
      },
      {
        "kind": "Method",
        "name": "hasSubGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isBackNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConflictGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isForwardsNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGroupSelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGroupVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLTRDirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRTLDirection",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "navigateUp",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routerData$",
        "type": "Observable<ConfiguratorRouter.Data>"
      },
      {
        "kind": "Method",
        "name": "setFocusForMainMenu",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFocusForSubGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "currentGroupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "switchGroupOnArrowPress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          },
          {
            "name": "groupIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "targetGroup",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "currentGroup",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "WARNING", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupMenuModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithConfigurator>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorUtilsService",
            "type": "ConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
            "shortType": "ConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupStatusService",
            "type": "ConfiguratorGroupStatusService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupStatusService:class",
            "shortType": "ConfiguratorGroupStatusService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupStatusService",
        "type": "ConfiguratorGroupStatusService"
      },
      {
        "kind": "Property",
        "name": "configuratorUtilsService",
        "type": "ConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "getCurrentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Group>"
      },
      {
        "kind": "Method",
        "name": "getCurrentGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getFirstConflictGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group | undefined"
      },
      {
        "kind": "Method",
        "name": "getMenuParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Group | undefined>"
      },
      {
        "kind": "Method",
        "name": "getNeighboringGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "neighboringIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "getNextGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "getParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group | undefined"
      },
      {
        "kind": "Method",
        "name": "getPreviousGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<string | undefined>"
      },
      {
        "kind": "Method",
        "name": "hasSubGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConflictGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isGroupVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "navigateToConflictSolver",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "navigateToFirstIncompleteGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "navigateToGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "setStatus",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setGroupStatusVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setMenuParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithConfigurator>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupStatusService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithConfigurator>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "configuratorUtilsService",
            "type": "ConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorUtilsService:class",
            "shortType": "ConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "areGroupsVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "groupIds",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "configuratorUtilsService",
        "type": "ConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "getFirstIncompleteGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group | undefined"
      },
      {
        "kind": "Method",
        "name": "getParentGroupStatusVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parentGroup",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "visitedGroupIds",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isGroupVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "setGroupStatusVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithConfigurator>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupTitleComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "displayedGroup$",
        "type": "Observable<Configurator.Group>"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorGroupTitleModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorMessageConfig",
    "members": [
      {
        "kind": "Property",
        "name": "productConfigurator",
        "type": "ProductConfiguratorMessageConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewAttributeComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeOverview",
        "type": "Configurator.AttributeOverview"
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "isDesktop",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewAttributeModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewBundleAttributeComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeOverview",
        "type": "Configurator.AttributeOverview"
      },
      {
        "kind": "Method",
        "name": "displayPrice",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayQuantity",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "extractPriceFormulaParameters",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "getProductPrimaryImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ImageGroup | ImageGroup[] | undefined"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      { "kind": "Property", "name": "productService", "type": "ProductService" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewBundleAttributeModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "attributeOverviewType",
        "type": "typeof Configurator.AttributeOverviewType"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Method",
        "name": "getStyleClasses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attributes",
            "type": "Configurator.AttributeOverview[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AttributeOverview:interface",
            "shortType": "Configurator.AttributeOverview",
            "importPath": ""
          },
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "hasAttributes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isSameAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attributes",
            "type": "Configurator.AttributeOverview[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AttributeOverview:interface",
            "shortType": "Configurator.AttributeOverview",
            "importPath": ""
          },
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewNotificationBannerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "commonConfigUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "commonConfigUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Method",
        "name": "countIssuesInGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "numberOfIssues$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "routerData$",
        "type": "Observable<ConfiguratorRouter.Data>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorOverviewNotificationBannerModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorPreviousNextButtonsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "configUtils",
            "type": "ConfiguratorStorefrontUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorStorefrontUtilsService:class",
            "shortType": "ConfiguratorStorefrontUtilsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Property",
        "name": "configUtils",
        "type": "ConfiguratorStorefrontUtilsService"
      },
      {
        "kind": "Method",
        "name": "focusFirstAttribute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isFirstGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isLastGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onNext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onPrevious",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorPreviousNextButtonsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorPriceComponent",
    "members": [
      {
        "kind": "Method",
        "name": "displayFormula",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayPriceOnly",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "displayQuantityAndPrice",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "formula",
        "type": "ConfiguratorPriceComponentOptions"
      },
      {
        "kind": "Method",
        "name": "isPriceLightedUp",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "price", "type": "string" },
      { "kind": "Property", "name": "priceTotal", "type": "string" },
      {
        "kind": "Method",
        "name": "quantityWithPrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formattedQuantity",
            "type": "string | null",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "styleClass", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "ConfiguratorPriceComponentOptions",
    "members": [
      { "kind": "PropertySignature", "name": "isLightedUp", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "price",
        "type": "Configurator.PriceDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "priceTotal",
        "type": "Configurator.PriceDetails"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorPriceModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorPriceSummaryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorPriceSummaryModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorProductTitleComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      { "kind": "Property", "name": "showMore", "type": "boolean" },
      {
        "kind": "Method",
        "name": "triggerDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorProductTitleModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Namespace",
    "name": "ConfiguratorSelectors"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "areGroupsVisited",
    "namespace": "ConfiguratorSelectors",
    "type": "(ownerKey: string, groupIds: string[]) => MemoizedSelector<StateWithConfigurator, boolean>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "getConfigurationFactory",
    "namespace": "ConfiguratorSelectors",
    "type": "(code: string) => MemoizedSelector<StateWithConfigurator, Configurator.Configuration>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "getConfigurationProcessLoaderStateFactory",
    "namespace": "ConfiguratorSelectors",
    "type": "(code: string) => MemoizedSelector<StateWithConfigurator, StateUtils.ProcessesLoaderState<Configurator.Configuration>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "getConfigurationsState",
    "namespace": "ConfiguratorSelectors",
    "type": "MemoizedSelector<StateWithConfigurator, ConfiguratorState>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "getConfigurationState",
    "namespace": "ConfiguratorSelectors",
    "type": "MemoizedSelector<StateWithConfigurator, StateUtils.EntityLoaderState<Configurator.Configuration>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "getCurrentGroup",
    "namespace": "ConfiguratorSelectors",
    "type": "(ownerKey: string) => MemoizedSelector<StateWithConfigurator, string | undefined>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "hasPendingChanges",
    "namespace": "ConfiguratorSelectors",
    "type": "(code: string) => MemoizedSelector<StateWithConfigurator, boolean>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "isGroupVisited",
    "namespace": "ConfiguratorSelectors",
    "type": "(ownerKey: string, groupId: string) => MemoizedSelector<StateWithConfigurator, boolean>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorShowMoreComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "cdRef", "type": "ChangeDetectorRef" },
      {
        "kind": "Method",
        "name": "ngAfterViewInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "normalize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "text",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "showHiddenText", "type": "boolean" },
      { "kind": "Property", "name": "showMore", "type": "boolean" },
      { "kind": "Property", "name": "text", "type": "string" },
      { "kind": "Property", "name": "textNormalized", "type": "string" },
      { "kind": "Property", "name": "textSize", "type": "number" },
      { "kind": "Property", "name": "textToShow", "type": "string" },
      {
        "kind": "Method",
        "name": "toggleShowMore",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorShowMoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "ConfiguratorState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "configurations",
        "type": "StateUtils.EntityProcessesLoaderState<Configurator.Configuration>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorStorefrontUtilsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorGroupsService",
            "type": "ConfiguratorGroupsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorGroupsService:class",
            "shortType": "ConfiguratorGroupsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "windowRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "keyboardFocusService",
            "type": "KeyboardFocusService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!KeyboardFocusService:class",
            "shortType": "KeyboardFocusService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "assembleValuesForMultiSelectAttributes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "controlArray",
            "type": "FormControl[]",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormControl:class",
            "shortType": "FormControl",
            "importPath": "@angular/forms"
          },
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Value[]"
      },
      {
        "kind": "Property",
        "name": "configuratorGroupsService",
        "type": "ConfiguratorGroupsService"
      },
      {
        "kind": "Method",
        "name": "createGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "focusFirstAttribute",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isCartEntryOrGroupVisited",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isInViewport",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "Element",
            "isOptional": false,
            "canonicalReference": "!Element:interface",
            "shortType": "Element",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "keyboardFocusService",
        "type": "KeyboardFocusService"
      },
      {
        "kind": "Method",
        "name": "scroll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "Element | HTMLElement",
            "isOptional": false,
            "canonicalReference": "!Element:interface",
            "shortType": "Element",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollToConfigurationElement",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "selector",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setFocus",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "group",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "windowRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorTabBarComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "isOverviewPage$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "routerData$",
        "type": "Observable<ConfiguratorRouter.Data>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorTabBarModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorUISettingsConfig",
    "members": [
      {
        "kind": "Property",
        "name": "productConfigurator",
        "type": "ProductConfiguratorUISettingsConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorUpdateMessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCommonsService",
            "type": "ConfiguratorCommonsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCommonsService:class",
            "shortType": "ConfiguratorCommonsService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          },
          {
            "name": "config",
            "type": "ConfiguratorMessageConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorMessageConfig:class",
            "shortType": "ConfiguratorMessageConfig",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "config",
        "type": "ConfiguratorMessageConfig"
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuratorCommonsService",
        "type": "ConfiguratorCommonsService"
      },
      {
        "kind": "Property",
        "name": "hasPendingChanges$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorUpdateMessageModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "ConfiguratorUtilsService",
    "members": [
      {
        "kind": "Method",
        "name": "buildGroupForExtract",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group"
      },
      {
        "kind": "Method",
        "name": "buildGroupPath",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupList",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "groupPath",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "createConfigurationExtract",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "changedAttribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          },
          {
            "name": "updateType",
            "type": "Configurator.UpdateType",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateType:enum",
            "shortType": "Configurator.UpdateType",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Configuration"
      },
      {
        "kind": "Method",
        "name": "getConfigurationFromState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configurationState",
            "type": "StateUtils.ProcessesLoaderState<Configurator.Configuration>",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Configuration"
      },
      {
        "kind": "Method",
        "name": "getGroupById",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group"
      },
      {
        "kind": "Method",
        "name": "getGroupByIdIfPresent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group | undefined"
      },
      {
        "kind": "Method",
        "name": "getGroupFromSubGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group | undefined"
      },
      {
        "kind": "Method",
        "name": "getOptionalGroupById",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group | undefined"
      },
      {
        "kind": "Method",
        "name": "getParentGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groups",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "parentGroup",
            "type": "Configurator.Group",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Group | undefined"
      },
      {
        "kind": "Method",
        "name": "hasSubGroups",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isConfigurationCreated",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Namespace",
    "name": "OccConfigurator"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "AddToCartParameters",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "cartId", "type": "string" },
      { "kind": "PropertySignature", "name": "configId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "product",
        "type": "AddToCartProductData"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      { "kind": "PropertySignature", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "AddToCartProductData",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "Attribute",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "conflicts", "type": "string[]" },
      {
        "kind": "PropertySignature",
        "name": "domainValues",
        "type": "Value[]"
      },
      {
        "kind": "PropertySignature",
        "name": "formattedValue",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "images", "type": "Image[]" },
      { "kind": "PropertySignature", "name": "key", "type": "string" },
      { "kind": "PropertySignature", "name": "langDepName", "type": "string" },
      { "kind": "PropertySignature", "name": "maxlength", "type": "number" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "negativeAllowed",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "numberScale", "type": "number" },
      { "kind": "PropertySignature", "name": "required", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "retractTriggered",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "type", "type": "UiType" },
      { "kind": "PropertySignature", "name": "typeLength", "type": "number" },
      { "kind": "PropertySignature", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "CharacteristicOverview",
    "namespace": "OccConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "characteristic",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "characteristicId",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "value", "type": "string" },
      { "kind": "PropertySignature", "name": "valueId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "Configuration",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "complete", "type": "boolean" },
      { "kind": "PropertySignature", "name": "configId", "type": "string" },
      { "kind": "PropertySignature", "name": "consistent", "type": "boolean" },
      { "kind": "PropertySignature", "name": "groups", "type": "Group[]" },
      { "kind": "PropertySignature", "name": "rootProduct", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "totalNumberOfIssues",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "ConfigurationInfo",
    "namespace": "OccConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "configuratorType",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "Group",
    "namespace": "OccConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "attributes",
        "type": "Attribute[]"
      },
      { "kind": "PropertySignature", "name": "complete", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "configurable",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "consistent", "type": "boolean" },
      { "kind": "PropertySignature", "name": "description", "type": "string" },
      { "kind": "PropertySignature", "name": "groupType", "type": "GroupType" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "subGroups", "type": "Group[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "GroupOverview",
    "namespace": "OccConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "characteristicValues",
        "type": "CharacteristicOverview[]"
      },
      {
        "kind": "PropertySignature",
        "name": "groupDescription",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "subGroups",
        "type": "GroupOverview[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Enum",
    "name": "GroupType",
    "namespace": "OccConfigurator",
    "members": ["CONFLICT", "CONFLICT_HEADER", "CSTIC_GROUP", "INSTANCE"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "Image",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "altText", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "format",
        "type": "ImageFormatType"
      },
      { "kind": "PropertySignature", "name": "galleryIndex", "type": "number" },
      { "kind": "PropertySignature", "name": "imageType", "type": "ImageType" },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Enum",
    "name": "ImageFormatType",
    "namespace": "OccConfigurator",
    "members": ["CSTIC_IMAGE", "VALUE_IMAGE"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Enum",
    "name": "ImageType",
    "namespace": "OccConfigurator",
    "members": ["GALLERY", "PRIMARY"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "Overview",
    "namespace": "OccConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "groups",
        "type": "GroupOverview[]"
      },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "pricing",
        "type": "PriceSummary"
      },
      { "kind": "PropertySignature", "name": "productCode", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "totalNumberOfIssues",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "PriceDetails",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "currencyIso", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "formattedValue",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "value", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "Prices",
    "namespace": "OccConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "attributes",
        "type": "Supplements[]"
      },
      { "kind": "PropertySignature", "name": "configId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "priceSummary",
        "type": "PriceSummary"
      },
      {
        "kind": "PropertySignature",
        "name": "pricingError",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "showDeltaPrices",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "PriceSavingDetails",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "maxQuantity", "type": "number" },
      { "kind": "PropertySignature", "name": "minQuantity", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "PriceSummary",
    "namespace": "OccConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "basePrice",
        "type": "PriceDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "currentTotal",
        "type": "PriceDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "currentTotalSavings",
        "type": "PriceSavingDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "selectedOptions",
        "type": "PriceDetails"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Enum",
    "name": "PriceType",
    "namespace": "OccConfigurator",
    "members": ["BUY"]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "Supplements",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "csticUiKey", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "priceSupplements",
        "type": "ValueSupplements[]"
      },
      {
        "kind": "PropertySignature",
        "name": "selectedValues",
        "type": "string[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Enum",
    "name": "UiType",
    "namespace": "OccConfigurator",
    "members": [
      "CHECK_BOX",
      "CHECK_BOX_LIST",
      "DROPDOWN",
      "DROPDOWN_ADDITIONAL_INPUT",
      "MULTI_SELECTION_IMAGE",
      "NOT_IMPLEMENTED",
      "NUMERIC",
      "RADIO_BUTTON",
      "RADIO_BUTTON_ADDITIONAL_INPUT",
      "READ_ONLY",
      "SINGLE_SELECTION_IMAGE",
      "STRING"
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "UpdateConfigurationForCartEntryParameters",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "cartId", "type": "string" },
      { "kind": "PropertySignature", "name": "configId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "configurationInfos",
        "type": "ConfigurationInfo[]"
      },
      { "kind": "PropertySignature", "name": "entryNumber", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "product",
        "type": "AddToCartProductData"
      },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      { "kind": "PropertySignature", "name": "userId", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "Value",
    "namespace": "OccConfigurator",
    "members": [
      { "kind": "PropertySignature", "name": "images", "type": "Image[]" },
      { "kind": "PropertySignature", "name": "key", "type": "string" },
      { "kind": "PropertySignature", "name": "langDepName", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "readonly", "type": "boolean" },
      { "kind": "PropertySignature", "name": "selected", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "ValueSupplements",
    "namespace": "OccConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "attributeValueKey",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "obsoletePriceValue",
        "type": "PriceDetails"
      },
      {
        "kind": "PropertySignature",
        "name": "priceValue",
        "type": "PriceDetails"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "OccConfiguratorVariantAddToCartSerializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "OccConfigurator.AddToCartParameters",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.AddToCartParameters:interface",
            "shortType": "OccConfigurator.AddToCartParameters",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "OccConfigurator.AddToCartParameters"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "OccConfiguratorVariantNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OccConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfig:class",
            "shortType": "OccConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "compileAttributeIncomplete",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "OccConfig" },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "OccConfigurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Configuration:interface",
            "shortType": "OccConfigurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "target",
            "type": "Configurator.Configuration",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Configuration"
      },
      {
        "kind": "Method",
        "name": "convertAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sourceAttribute",
            "type": "OccConfigurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Attribute:interface",
            "shortType": "OccConfigurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "attributeList",
            "type": "Configurator.Attribute[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertAttributeType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "OccConfigurator.UiType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.UiType:enum",
            "shortType": "OccConfigurator.UiType",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Configurator.UiType"
      },
      {
        "kind": "Method",
        "name": "convertGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "OccConfigurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Group:interface",
            "shortType": "OccConfigurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "groupList",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "flatGroupList",
            "type": "Configurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "OccConfigurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.GroupType:enum",
            "shortType": "OccConfigurator.GroupType",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Configurator.GroupType"
      },
      {
        "kind": "Method",
        "name": "convertImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "occImage",
            "type": "OccConfigurator.Image",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Image:interface",
            "shortType": "OccConfigurator.Image",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "images",
            "type": "Configurator.Image[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Image:interface",
            "shortType": "Configurator.Image",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertImageFormatType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formatType",
            "type": "OccConfigurator.ImageFormatType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.ImageFormatType:enum",
            "shortType": "OccConfigurator.ImageFormatType",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Configurator.ImageFormatType"
      },
      {
        "kind": "Method",
        "name": "convertImageType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "imageType",
            "type": "OccConfigurator.ImageType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.ImageType:enum",
            "shortType": "OccConfigurator.ImageType",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Configurator.ImageType"
      },
      {
        "kind": "Method",
        "name": "convertValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "occValue",
            "type": "OccConfigurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Value:interface",
            "shortType": "OccConfigurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "values",
            "type": "Configurator.Value[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getGroupId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "name",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "setGroupDescription",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setSelectedSingleValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "OccConfiguratorVariantOverviewNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "OccConfigurator.Overview",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Overview:interface",
            "shortType": "OccConfigurator.Overview",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "target",
            "type": "Configurator.Overview",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Overview:interface",
            "shortType": "Configurator.Overview",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.Overview"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "convertGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "OccConfigurator.GroupOverview",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.GroupOverview:interface",
            "shortType": "OccConfigurator.GroupOverview",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "Configurator.GroupOverview[]"
      },
      {
        "kind": "Method",
        "name": "setGeneralDescription",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "group",
            "type": "Configurator.GroupOverview",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupOverview:interface",
            "shortType": "Configurator.GroupOverview",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "OccConfiguratorVariantPriceSummaryNormalizer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "OccConfigurator.Prices",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Prices:interface",
            "shortType": "OccConfigurator.Prices",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "target",
            "type": "Configurator.PriceSummary",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.PriceSummary:interface",
            "shortType": "Configurator.PriceSummary",
            "importPath": ""
          }
        ],
        "returnType": "Configurator.PriceSummary"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "OccConfiguratorVariantSerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "OccConfigurator.Configuration",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Configuration:interface",
            "shortType": "OccConfigurator.Configuration",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "OccConfigurator.Configuration"
      },
      {
        "kind": "Method",
        "name": "convertAttribute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "Configurator.Attribute",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Attribute:interface",
            "shortType": "Configurator.Attribute",
            "importPath": ""
          },
          {
            "name": "occAttributes",
            "type": "OccConfigurator.Attribute[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Attribute:interface",
            "shortType": "OccConfigurator.Attribute",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertCharacteristicType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "Configurator.UiType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UiType:enum",
            "shortType": "Configurator.UiType",
            "importPath": ""
          }
        ],
        "returnType": "OccConfigurator.UiType"
      },
      {
        "kind": "Method",
        "name": "convertGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.Group",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Group:interface",
            "shortType": "Configurator.Group",
            "importPath": ""
          },
          {
            "name": "occGroups",
            "type": "OccConfigurator.Group[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Group:interface",
            "shortType": "OccConfigurator.Group",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "convertGroupType",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "groupType",
            "type": "Configurator.GroupType",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.GroupType:enum",
            "shortType": "Configurator.GroupType",
            "importPath": ""
          }
        ],
        "returnType": "OccConfigurator.GroupType"
      },
      {
        "kind": "Method",
        "name": "convertValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "Configurator.Value",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Value:interface",
            "shortType": "Configurator.Value",
            "importPath": ""
          },
          {
            "name": "values",
            "type": "OccConfigurator.Value[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.Value:interface",
            "shortType": "OccConfigurator.Value",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "OccConfiguratorVariantUpdateCartEntrySerializer",
    "members": [
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "OccConfigurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccConfigurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "OccConfigurator.UpdateConfigurationForCartEntryParameters",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ],
        "returnType": "OccConfigurator.UpdateConfigurationForCartEntryParameters"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "QuantityUpdateEvent",
    "members": [
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      { "kind": "PropertySignature", "name": "valueCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Method",
        "name": "createConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Overview>"
      },
      {
        "kind": "Method",
        "name": "getConfiguratorType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "readConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configurationOwner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readPriceSummary",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapters",
            "type": "RulebasedConfiguratorAdapter[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!RulebasedConfiguratorAdapter:class",
            "shortType": "RulebasedConfiguratorAdapter",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "configUtilsService",
            "type": "CommonConfiguratorUtilsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfiguratorUtilsService:class",
            "shortType": "CommonConfiguratorUtilsService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "adapters",
        "type": "RulebasedConfiguratorAdapter[]"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Property",
        "name": "CONFIGURATOR_ADAPTER_LIST",
        "type": "InjectionToken<RulebasedConfiguratorAdapter[]>"
      },
      {
        "kind": "Property",
        "name": "configUtilsService",
        "type": "CommonConfiguratorUtilsService"
      },
      {
        "kind": "Method",
        "name": "createConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getAdapter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "RulebasedConfiguratorAdapter"
      },
      {
        "kind": "Method",
        "name": "getConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Overview>"
      },
      {
        "kind": "Method",
        "name": "readConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configurationOwner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readPriceSummary",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorEventListener",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorCartService",
            "type": "ConfiguratorCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConfiguratorCartService:class",
            "shortType": "ConfiguratorCartService",
            "importPath": "@spartacus/product-configurator/rulebased"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configuratorCartService",
        "type": "ConfiguratorCartService"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onPlaceOrder",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_configuratorEventListener",
            "type": "RulebasedConfiguratorEventListener",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!RulebasedConfiguratorEventListener:class",
            "shortType": "RulebasedConfiguratorEventListener",
            "importPath": "@spartacus/product-configurator/rulebased"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "RulebasedConfiguratorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Interface",
    "name": "StateWithConfigurator",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "productConfigurator",
        "type": "ConfiguratorState"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "VARIANT_CONFIGURATOR_ADD_TO_CART_SERIALIZER",
    "type": "InjectionToken<Converter<Configurator.AddToCartParameters, OccConfigurator.AddToCartParameters>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "VARIANT_CONFIGURATOR_NORMALIZER",
    "type": "InjectionToken<Converter<OccConfigurator.Configuration, Configurator.Configuration>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "VARIANT_CONFIGURATOR_OVERVIEW_NORMALIZER",
    "type": "InjectionToken<Converter<OccConfigurator.Overview, Configurator.Overview>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "VARIANT_CONFIGURATOR_PRICE_NORMALIZER",
    "type": "InjectionToken<Converter<OccConfigurator.PriceSummary, Configurator.Configuration>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "VARIANT_CONFIGURATOR_PRICE_SUMMARY_NORMALIZER",
    "type": "InjectionToken<Converter<OccConfigurator.PriceSummary, Configurator.PriceSummary>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "VARIANT_CONFIGURATOR_SERIALIZER",
    "type": "InjectionToken<Converter<Configurator.Configuration, OccConfigurator.Configuration>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Variable",
    "name": "VARIANT_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER",
    "type": "InjectionToken<Converter<Configurator.UpdateConfigurationForCartEntryParameters, OccConfigurator.UpdateConfigurationForCartEntryParameters>>"
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "VariantConfiguratorOccAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.AddToCartParameters:interface",
            "shortType": "Configurator.AddToCartParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "createConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "getConfigurationOverview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Overview>"
      },
      {
        "kind": "Method",
        "name": "getConfiguratorType",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "readConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "groupId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configurationOwner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readPriceSummary",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuration",
            "type": "Configurator.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.Configuration:interface",
            "shortType": "Configurator.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Configurator.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "Configurator.UpdateConfigurationForCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_rulebased!Configurator.UpdateConfigurationForCartEntryParameters:interface",
            "shortType": "Configurator.UpdateConfigurationForCartEntryParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/rulebased",
    "kind": "Class",
    "name": "VariantConfiguratorOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield/root",
    "kind": "Function",
    "name": "defaultProductConfiguratorTextfieldComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield/root",
    "kind": "Variable",
    "name": "PRODUCT_CONFIGURATOR_TEXTFIELD_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield/root",
    "kind": "Class",
    "name": "TextfieldConfiguratorRootFeatureModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield/root",
    "kind": "Class",
    "name": "TextfieldConfiguratorRootModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<TextfieldConfiguratorRootModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield/root",
    "kind": "Class",
    "name": "TextfieldConfiguratorRoutingModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<TextfieldConfiguratorRoutingModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Variable",
    "name": "CONFIGURATOR_TYPE_TEXTFIELD",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "ConfiguratorTextfieldAddToCartButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorTextfieldService",
            "type": "ConfiguratorTextfieldService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfieldService:class",
            "shortType": "ConfiguratorTextfieldService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configuration",
        "type": "ConfiguratorTextfield.Configuration"
      },
      {
        "kind": "Property",
        "name": "configuratorTextfieldService",
        "type": "ConfiguratorTextfieldService"
      },
      {
        "kind": "Method",
        "name": "getButtonText",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "onAddToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "productCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "ConfiguratorTextfieldFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configuratorTextfieldService",
            "type": "ConfiguratorTextfieldService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfieldService:class",
            "shortType": "ConfiguratorTextfieldService",
            "importPath": ""
          },
          {
            "name": "configRouterExtractorService",
            "type": "ConfiguratorRouterExtractorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorRouterExtractorService:class",
            "shortType": "ConfiguratorRouterExtractorService",
            "importPath": "@spartacus/product-configurator/common"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configRouterExtractorService",
        "type": "ConfiguratorRouterExtractorService"
      },
      {
        "kind": "Property",
        "name": "configuration$",
        "type": "Observable<ConfiguratorTextfield.Configuration>"
      },
      {
        "kind": "Property",
        "name": "configuratorTextfieldService",
        "type": "ConfiguratorTextfieldService"
      },
      {
        "kind": "Property",
        "name": "isEditable$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "updateConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "ConfiguratorTextfield.ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.ConfigurationInfo:interface",
            "shortType": "ConfiguratorTextfield.ConfigurationInfo",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "ConfiguratorTextfieldInputFieldComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Property",
        "name": "attribute",
        "type": "ConfiguratorTextfield.ConfigurationInfo"
      },
      {
        "kind": "Property",
        "name": "attributeInputForm",
        "type": "FormControl"
      },
      {
        "kind": "Method",
        "name": "getId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "ConfiguratorTextfield.ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.ConfigurationInfo:interface",
            "shortType": "ConfiguratorTextfield.ConfigurationInfo",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getIdLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "ConfiguratorTextfield.ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.ConfigurationInfo:interface",
            "shortType": "ConfiguratorTextfield.ConfigurationInfo",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLabelForIdGeneration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "ConfiguratorTextfield.ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.ConfigurationInfo:interface",
            "shortType": "ConfiguratorTextfield.ConfigurationInfo",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "inputChange",
        "type": "EventEmitter<ConfiguratorTextfield.ConfigurationInfo>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onInputChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "PREFIX_TEXTFIELD", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "ConfiguratorTextfieldInputFieldReadonlyComponent",
    "members": [
      {
        "kind": "Property",
        "name": "attribute",
        "type": "ConfiguratorTextfield.ConfigurationInfo"
      },
      {
        "kind": "Method",
        "name": "getIdLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "ConfiguratorTextfield.ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.ConfigurationInfo:interface",
            "shortType": "ConfiguratorTextfield.ConfigurationInfo",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLabelForIdGeneration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "attribute",
            "type": "ConfiguratorTextfield.ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.ConfigurationInfo:interface",
            "shortType": "ConfiguratorTextfield.ConfigurationInfo",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "PREFIX_TEXTFIELD", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "OccConfiguratorTextfieldAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "ConfiguratorTextfield.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.AddToCartParameters:interface",
            "shortType": "ConfiguratorTextfield.AddToCartParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      {
        "kind": "Method",
        "name": "createConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "owner",
            "type": "CommonConfigurator.Owner",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!CommonConfigurator.Owner:interface",
            "shortType": "CommonConfigurator.Owner",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<ConfiguratorTextfield.Configuration>"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!CommonConfigurator.ReadConfigurationFromCartEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromCartEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<ConfiguratorTextfield.Configuration>"
      },
      {
        "kind": "Method",
        "name": "readConfigurationForOrderEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!CommonConfigurator.ReadConfigurationFromOrderEntryParameters:interface",
            "shortType": "CommonConfigurator.ReadConfigurationFromOrderEntryParameters",
            "importPath": "@spartacus/product-configurator/common"
          }
        ],
        "returnType": "Observable<ConfiguratorTextfield.Configuration>"
      },
      {
        "kind": "Method",
        "name": "updateConfigurationForCartEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "parameters",
            "type": "ConfiguratorTextfield.UpdateCartEntryParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.UpdateCartEntryParameters:interface",
            "shortType": "ConfiguratorTextfield.UpdateCartEntryParameters",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CartModification>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "OccConfiguratorTextfieldAddToCartSerializer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "ConfiguratorTextfield.AddToCartParameters",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.AddToCartParameters:interface",
            "shortType": "ConfiguratorTextfield.AddToCartParameters",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "OccConfiguratorTextfield.AddToCartParameters",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_textfield!OccConfiguratorTextfield.AddToCartParameters:interface",
            "shortType": "OccConfiguratorTextfield.AddToCartParameters",
            "importPath": ""
          }
        ],
        "returnType": "OccConfiguratorTextfield.AddToCartParameters"
      },
      {
        "kind": "Method",
        "name": "convertInfo",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "ConfiguratorTextfield.ConfigurationInfo",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.ConfigurationInfo:interface",
            "shortType": "ConfiguratorTextfield.ConfigurationInfo",
            "importPath": ""
          },
          {
            "name": "occConfigurationInfos",
            "type": "OccConfiguratorTextfield.ConfigurationInfo[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!OccConfiguratorTextfield.ConfigurationInfo:interface",
            "shortType": "OccConfiguratorTextfield.ConfigurationInfo",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "OccConfiguratorTextfieldNormalizer",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "OccConfiguratorTextfield.Configuration",
            "isOptional": false,
            "canonicalReference": "@spartacus/product-configurator_textfield!OccConfiguratorTextfield.Configuration:interface",
            "shortType": "OccConfiguratorTextfield.Configuration",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "ConfiguratorTextfield.Configuration",
            "isOptional": true,
            "canonicalReference": "@spartacus/product-configurator_textfield!ConfiguratorTextfield.Configuration:interface",
            "shortType": "ConfiguratorTextfield.Configuration",
            "importPath": ""
          }
        ],
        "returnType": "ConfiguratorTextfield.Configuration"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "TextfieldConfiguratorComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "TextfieldConfiguratorCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "TextfieldConfiguratorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/product-configurator/textfield",
    "kind": "Class",
    "name": "TextfieldConfiguratorOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/qualtrics/components",
    "kind": "Variable",
    "name": "QUALTRICS_EVENT_NAME",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/qualtrics/components",
    "kind": "Class",
    "name": "QualtricsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "qualtricsLoader",
            "type": "QualtricsLoaderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/qualtrics_components!QualtricsLoaderService:class",
            "shortType": "QualtricsLoaderService",
            "importPath": "@spartacus/qualtrics/components"
          },
          {
            "name": "config",
            "type": "QualtricsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/qualtrics_components!QualtricsConfig:class",
            "shortType": "QualtricsConfig",
            "importPath": "@spartacus/qualtrics/components"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "QualtricsConfig" },
      {
        "kind": "Property",
        "name": "qualtricsLoader",
        "type": "QualtricsLoaderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/qualtrics/components",
    "kind": "Class",
    "name": "QualtricsComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/qualtrics/components",
    "kind": "Class",
    "name": "QualtricsConfig",
    "members": [
      {
        "kind": "Property",
        "name": "qualtrics",
        "type": "{\n        scriptSource?: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/qualtrics/components",
    "kind": "Class",
    "name": "QualtricsEmbeddedFeedbackComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/qualtrics/components",
    "kind": "Class",
    "name": "QualtricsLoaderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/qualtrics_components!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platformId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "scriptLoader",
            "type": "ScriptLoader",
            "isOptional": false,
            "canonicalReference": "@spartacus/qualtrics_components!ScriptLoader:class",
            "shortType": "ScriptLoader",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addScript",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scriptSource",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hasScript",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "source",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isDataLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "platformId", "type": "any" },
      { "kind": "Property", "name": "qsi$", "type": "Observable<any>" },
      { "kind": "Property", "name": "qsiApi", "type": "any" },
      {
        "kind": "Method",
        "name": "run",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reload",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "scriptLoader", "type": "ScriptLoader" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "window",
        "type": "QualtricsWindow | undefined"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/qualtrics/root",
    "kind": "Function",
    "name": "defaultQualtricsComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/qualtrics/root",
    "kind": "Variable",
    "name": "QUALTRICS_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/qualtrics/root",
    "kind": "Class",
    "name": "QualtricsRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/qualtrics",
    "kind": "Class",
    "name": "QualtricsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "Variable",
    "name": "getDefaultRenderKey",
    "type": "typeof getRequestUrl"
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "Function",
    "name": "getServerRequestProviders",
    "parameters": [],
    "returnType": "StaticProvider[]"
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "Class",
    "name": "NgExpressEngineDecorator",
    "members": [
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ngExpressEngine",
            "type": "NgExpressEngine",
            "isOptional": false,
            "canonicalReference": "@spartacus/setup_ssr!NgExpressEngine:type",
            "shortType": "NgExpressEngine",
            "importPath": ""
          },
          {
            "name": "optimizationOptions",
            "type": "SsrOptimizationOptions | null",
            "isOptional": true,
            "canonicalReference": "@spartacus/setup_ssr!SsrOptimizationOptions:interface",
            "shortType": "SsrOptimizationOptions",
            "importPath": "@spartacus/setup/ssr"
          }
        ],
        "returnType": "NgExpressEngine"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "Class",
    "name": "OptimizedSsrEngine",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "expressEngine",
            "type": "NgExpressEngineInstance",
            "isOptional": false,
            "canonicalReference": "@spartacus/setup_ssr!NgExpressEngineInstance:type",
            "shortType": "NgExpressEngineInstance",
            "importPath": ""
          },
          {
            "name": "ssrOptions",
            "type": "SsrOptimizationOptions | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/setup_ssr!SsrOptimizationOptions:interface",
            "shortType": "SsrOptimizationOptions",
            "importPath": "@spartacus/setup/ssr"
          }
        ]
      },
      { "kind": "Property", "name": "currentConcurrency", "type": "number" },
      {
        "kind": "Property",
        "name": "engineInstance",
        "type": "NgExpressEngineInstance"
      },
      {
        "kind": "Property",
        "name": "expressEngine",
        "type": "NgExpressEngineInstance"
      },
      {
        "kind": "Method",
        "name": "fallbackToCsr",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "response",
            "type": "Response",
            "isOptional": false,
            "canonicalReference": "@types/express!~e.Response:interface",
            "shortType": "Response",
            "importPath": "@types/express"
          },
          {
            "name": "filePath",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "callback",
            "type": "SsrCallbackFn",
            "isOptional": false,
            "canonicalReference": "@spartacus/setup_ssr!SsrCallbackFn:type",
            "shortType": "SsrCallbackFn",
            "importPath": "@spartacus/setup/ssr"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getDocument",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "filePath",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRenderingKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "Request",
            "isOptional": false,
            "canonicalReference": "@types/express!~e.Request:interface",
            "shortType": "Request",
            "importPath": "@types/express"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getRenderingStrategy",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "Request",
            "isOptional": false,
            "canonicalReference": "@types/express!~e.Request:interface",
            "shortType": "Request",
            "importPath": "@types/express"
          }
        ],
        "returnType": "RenderingStrategy"
      },
      {
        "kind": "Method",
        "name": "getTimeout",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "Request",
            "isOptional": false,
            "canonicalReference": "@types/express!~e.Request:interface",
            "shortType": "Request",
            "importPath": "@types/express"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "log",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "debug",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "renderingCache",
        "type": "RenderingCache"
      },
      {
        "kind": "Method",
        "name": "renderResponse",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "filePath",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "callback",
            "type": "SsrCallbackFn",
            "isOptional": false,
            "canonicalReference": "@spartacus/setup_ssr!SsrCallbackFn:type",
            "shortType": "SsrCallbackFn",
            "importPath": "@spartacus/setup/ssr"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "returnCachedRender",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "Request",
            "isOptional": false,
            "canonicalReference": "@types/express!~e.Request:interface",
            "shortType": "Request",
            "importPath": "@types/express"
          },
          {
            "name": "callback",
            "type": "SsrCallbackFn",
            "isOptional": false,
            "canonicalReference": "@spartacus/setup_ssr!SsrCallbackFn:type",
            "shortType": "SsrCallbackFn",
            "importPath": "@spartacus/setup/ssr"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "shouldRender",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "Request",
            "isOptional": false,
            "canonicalReference": "@types/express!~e.Request:interface",
            "shortType": "Request",
            "importPath": "@types/express"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "shouldTimeout",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "request",
            "type": "Request",
            "isOptional": false,
            "canonicalReference": "@types/express!~e.Request:interface",
            "shortType": "Request",
            "importPath": "@types/express"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "ssrOptions",
        "type": "SsrOptimizationOptions | undefined"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "Class",
    "name": "RenderingCache",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "SsrOptimizationOptions | undefined",
            "isOptional": true,
            "canonicalReference": "@spartacus/setup_ssr!SsrOptimizationOptions:interface",
            "shortType": "SsrOptimizationOptions",
            "importPath": "@spartacus/setup/ssr"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "RenderingEntry | undefined"
      },
      {
        "kind": "Method",
        "name": "isFresh",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isReady",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isRendering",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "renders",
        "type": "Map<string, RenderingEntry>"
      },
      {
        "kind": "Method",
        "name": "setAsRendering",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "store",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "err",
            "type": "Error | null",
            "isOptional": true,
            "canonicalReference": "!Error:interface",
            "shortType": "Error",
            "importPath": ""
          },
          {
            "name": "html",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "Interface",
    "name": "RenderingEntry",
    "members": [
      { "kind": "PropertySignature", "name": "err", "type": "any" },
      { "kind": "PropertySignature", "name": "html", "type": "any" },
      { "kind": "PropertySignature", "name": "rendering", "type": "boolean" },
      { "kind": "PropertySignature", "name": "time", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "Enum",
    "name": "RenderingStrategy",
    "members": ["ALWAYS_CSR", "ALWAYS_SSR", "DEFAULT"]
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "TypeAlias",
    "name": "SsrCallbackFn",
    "members": [
      "(\nerr?: ",
      "Error",
      " | null | undefined, \nhtml?: string | undefined) => void"
    ]
  },
  {
    "entryPoint": "@spartacus/setup/ssr",
    "kind": "Interface",
    "name": "SsrOptimizationOptions",
    "members": [
      { "kind": "PropertySignature", "name": "cache", "type": "boolean" },
      { "kind": "PropertySignature", "name": "cacheSize", "type": "number" },
      { "kind": "PropertySignature", "name": "concurrency", "type": "number" },
      { "kind": "PropertySignature", "name": "debug", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "forcedSsrTimeout",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "maxRenderTime",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "renderingStrategyResolver",
        "type": "(req: Request) => RenderingStrategy"
      },
      {
        "kind": "PropertySignature",
        "name": "renderKeyResolver",
        "type": "(req: Request) => string"
      },
      {
        "kind": "PropertySignature",
        "name": "reuseCurrentRendering",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "timeout", "type": "number" },
      { "kind": "PropertySignature", "name": "ttl", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/setup",
    "kind": "Variable",
    "name": "defaultB2bCheckoutConfig",
    "type": "CheckoutConfig"
  },
  {
    "entryPoint": "@spartacus/setup",
    "kind": "Variable",
    "name": "defaultB2bOccConfig",
    "type": "OccConfig"
  },
  {
    "entryPoint": "@spartacus/smartedit/core",
    "kind": "Class",
    "name": "SmartEditCoreModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "smartEditService",
            "type": "SmartEditService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!SmartEditService:class",
            "shortType": "SmartEditService",
            "importPath": "@spartacus/smartedit/core"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/smartedit/core",
    "kind": "Class",
    "name": "SmartEditService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "baseSiteService",
            "type": "BaseSiteService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!BaseSiteService:class",
            "shortType": "BaseSiteService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "zone",
            "type": "NgZone",
            "isOptional": false,
            "canonicalReference": "@angular/core!NgZone:class",
            "shortType": "NgZone",
            "importPath": "@angular/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          },
          {
            "name": "config",
            "type": "SmartEditConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!SmartEditConfig:class",
            "shortType": "SmartEditConfig",
            "importPath": "@spartacus/smartedit/root"
          },
          {
            "name": "scriptLoader",
            "type": "ScriptLoader",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!ScriptLoader:class",
            "shortType": "ScriptLoader",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addPageContract",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsPage",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addSmartEditContract",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "Element",
            "isOptional": false,
            "canonicalReference": "!Element:interface",
            "shortType": "Element",
            "importPath": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "properties",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "baseSiteService",
        "type": "BaseSiteService"
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      { "kind": "Property", "name": "config", "type": "SmartEditConfig" },
      {
        "kind": "Method",
        "name": "goToPreviewPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsPage",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_core!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "loadScript",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "processCmsPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "renderComponent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "componentType",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parentId",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      },
      {
        "kind": "Method",
        "name": "reprocessPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "scriptLoader", "type": "ScriptLoader" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" },
      { "kind": "Property", "name": "zone", "type": "NgZone" }
    ]
  },
  {
    "entryPoint": "@spartacus/smartedit/root",
    "kind": "Variable",
    "name": "SMART_EDIT_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/smartedit/root",
    "kind": "Class",
    "name": "SmartEditConfig",
    "members": [
      {
        "kind": "Property",
        "name": "smartEdit",
        "type": "{\n        storefrontPreviewRoute?: string;\n        allowOrigin?: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/smartedit/root",
    "kind": "Function",
    "name": "smartEditFactory",
    "parameters": [
      {
        "name": "smartEditLauncherService",
        "type": "SmartEditLauncherService",
        "isOptional": false,
        "canonicalReference": "@spartacus/smartedit_root!SmartEditLauncherService:class",
        "shortType": "SmartEditLauncherService",
        "importPath": "@spartacus/smartedit/root"
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/smartedit/root",
    "kind": "Class",
    "name": "SmartEditLauncherService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SmartEditConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_root!SmartEditConfig:class",
            "shortType": "SmartEditConfig",
            "importPath": "@spartacus/smartedit/root"
          },
          {
            "name": "location",
            "type": "Location",
            "isOptional": false,
            "canonicalReference": "@angular/common!Location:class",
            "shortType": "Location",
            "importPath": "@angular/common"
          },
          {
            "name": "featureModules",
            "type": "FeatureModulesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/smartedit_root!FeatureModulesService:class",
            "shortType": "FeatureModulesService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsTicketId",
        "type": "string | undefined"
      },
      { "kind": "Property", "name": "config", "type": "SmartEditConfig" },
      {
        "kind": "Property",
        "name": "featureModules",
        "type": "FeatureModulesService"
      },
      {
        "kind": "Method",
        "name": "isLaunchedInSmartEdit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "location", "type": "Location" }
    ]
  },
  {
    "entryPoint": "@spartacus/smartedit/root",
    "kind": "Class",
    "name": "SmartEditRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/smartedit",
    "kind": "Class",
    "name": "SmartEditModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefinder/assets",
    "kind": "Variable",
    "name": "storeFinderTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/storefinder/assets",
    "kind": "Variable",
    "name": "storeFinderTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "AbstractStoreItemComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getDirections",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "location",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getFormattedStoreAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressParts",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "location", "type": "any" },
      {
        "kind": "Property",
        "name": "storeFinderService",
        "type": "StoreFinderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "ScheduleComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "location", "type": "PointOfService" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "weekDays", "type": "WeekdayOpeningDay[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderGridComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          },
          {
            "name": "route",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ]
      },
      { "kind": "Property", "name": "country", "type": "string" },
      { "kind": "Property", "name": "defaultLocation", "type": "GeoPoint" },
      {
        "kind": "Method",
        "name": "findStores",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "locations$", "type": "any" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "region", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderHeaderComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          },
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "centerStoreOnMapByIndex",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "location",
            "type": "PointOfService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!PointOfService:interface",
            "shortType": "PointOfService",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "hideStoreDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isDetailsModeVisible", "type": "boolean" },
      { "kind": "Property", "name": "locations", "type": "any" },
      { "kind": "Property", "name": "selectedStore", "type": "PointOfService" },
      { "kind": "Property", "name": "selectedStoreIndex", "type": "number" },
      {
        "kind": "Method",
        "name": "selectStoreItemList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "showStoreDetails",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "location",
            "type": "PointOfService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!PointOfService:interface",
            "shortType": "PointOfService",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "storeDetails", "type": "PointOfService" },
      {
        "kind": "Property",
        "name": "storeMap",
        "type": "StoreFinderMapComponent"
      },
      { "kind": "Property", "name": "useMylocation", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderListItemComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          }
        ]
      },
      { "kind": "Property", "name": "displayDistance", "type": "boolean" },
      {
        "kind": "Method",
        "name": "handleStoreItemClick",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "listOrderLabel", "type": "any" },
      { "kind": "Property", "name": "locationIndex", "type": "number | null" },
      {
        "kind": "Method",
        "name": "onKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "storeFinderService",
        "type": "StoreFinderService"
      },
      {
        "kind": "Property",
        "name": "storeItemClick",
        "type": "EventEmitter<number>"
      },
      { "kind": "Property", "name": "useClickEvent", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderMapComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "googleMapRendererService",
            "type": "GoogleMapRendererService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!GoogleMapRendererService:class",
            "shortType": "GoogleMapRendererService",
            "importPath": "@spartacus/storefinder/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "centerMap",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "latitude",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "longitude",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "locations", "type": "any[]" },
      { "kind": "Property", "name": "mapElement", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "changes",
            "type": "SimpleChanges",
            "isOptional": false,
            "canonicalReference": "@angular/core!SimpleChanges:interface",
            "shortType": "SimpleChanges",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "renderMap",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedStoreItem",
        "type": "EventEmitter<number>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderPaginationDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      {
        "kind": "Method",
        "name": "getResultsPerPage",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "pagination", "type": "PaginationModel" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderSearchComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "findStores",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "onKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "searchBox", "type": "FormControl" },
      {
        "kind": "Method",
        "name": "viewStoresWithMyLoc",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderSearchResultComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          },
          {
            "name": "route",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          },
          {
            "name": "config",
            "type": "StoreFinderConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderConfig:class",
            "shortType": "StoreFinderConfig",
            "importPath": "@spartacus/storefinder/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "StoreFinderConfig" },
      { "kind": "Property", "name": "countryCode", "type": "string" },
      { "kind": "Property", "name": "geolocation", "type": "GeoPoint" },
      { "kind": "Property", "name": "isLoading$", "type": "Observable<any>" },
      { "kind": "Property", "name": "locations", "type": "any" },
      { "kind": "Property", "name": "locations$", "type": "Observable<any>" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "radius", "type": "number" },
      { "kind": "Property", "name": "searchConfig", "type": "SearchConfig" },
      {
        "kind": "Property",
        "name": "searchQuery",
        "type": "StoreFinderSearchQuery"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "useMyLocation", "type": "boolean" },
      {
        "kind": "Method",
        "name": "viewPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderStoreComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          },
          {
            "name": "route",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "disableMap", "type": "boolean" },
      {
        "kind": "Method",
        "name": "goBack",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isLoading$", "type": "Observable<any>" },
      { "kind": "Property", "name": "location", "type": "PointOfService" },
      { "kind": "Property", "name": "location$", "type": "Observable<any>" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requestStoresData",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderStoreDescriptionComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          }
        ]
      },
      { "kind": "Property", "name": "disableMap", "type": "boolean" },
      { "kind": "Property", "name": "location", "type": "PointOfService" },
      {
        "kind": "Property",
        "name": "storeFinderService",
        "type": "StoreFinderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/components",
    "kind": "Class",
    "name": "StoreFinderStoresCountComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_components!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "locations$", "type": "Observable<any>" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Interface",
    "name": "FindStoresState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "findStoreEntityById",
        "type": "StoreEntities"
      },
      {
        "kind": "PropertySignature",
        "name": "findStoresEntities",
        "type": "StoreEntities"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "GoogleMapRendererService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "StoreFinderConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!StoreFinderConfig:class",
            "shortType": "StoreFinderConfig",
            "importPath": "@spartacus/storefinder/core"
          },
          {
            "name": "storeFinderService",
            "type": "StoreFinderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!StoreFinderService:class",
            "shortType": "StoreFinderService",
            "importPath": "@spartacus/storefinder/core"
          },
          {
            "name": "scriptLoader",
            "type": "ScriptLoader",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!ScriptLoader:class",
            "shortType": "ScriptLoader",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "centerMap",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "latitute",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "longitude",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "StoreFinderConfig" },
      {
        "kind": "Method",
        "name": "renderMap",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mapElement",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "locations",
            "type": "any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "selectMarkerHandler",
            "type": "Function",
            "isOptional": true,
            "canonicalReference": "!Function:interface",
            "shortType": "Function",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "scriptLoader", "type": "ScriptLoader" },
      {
        "kind": "Property",
        "name": "storeFinderService",
        "type": "StoreFinderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Interface",
    "name": "StateWithStoreFinder",
    "members": [
      { "kind": "PropertySignature", "name": "stores", "type": "StoresState" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "STORE_COUNT_NORMALIZER",
    "type": "InjectionToken<Converter<any, StoreCount>>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "STORE_FINDER_DATA",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "STORE_FINDER_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "STORE_FINDER_SEARCH_PAGE_NORMALIZER",
    "type": "InjectionToken<Converter<any, StoreFinderSearchPage>>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Interface",
    "name": "StoreCount",
    "members": [
      { "kind": "PropertySignature", "name": "count", "type": "number" },
      { "kind": "PropertySignature", "name": "isoCode", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Interface",
    "name": "StoreEntities",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "pointOfServices",
        "type": "Array<PointOfService>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Namespace",
    "name": "StoreFinderActions"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "CLEAR_STORE_FINDER_DATA",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "ClearStoreFinderData",
    "namespace": "StoreFinderActions",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "FIND_STORE_BY_ID_FAIL",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "FIND_STORE_BY_ID_SUCCESS",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "FIND_STORE_BY_ID",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "FIND_STORES_FAIL",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "FIND_STORES_ON_HOLD",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "FIND_STORES_SUCCESS",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "FIND_STORES",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "FindStoreById",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        storeId: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        storeId: string;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "FindStoreByIdFail",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "FindStoreByIdSuccess",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "FindStores",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "{\n        queryText: string;\n        searchConfig?: SearchConfig;\n        longitudeLatitude?: GeoPoint;\n        useMyLocation?: boolean;\n        countryIsoCode?: string;\n        radius?: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "payload",
        "type": "{\n        queryText: string;\n        searchConfig?: SearchConfig;\n        longitudeLatitude?: GeoPoint;\n        useMyLocation?: boolean;\n        countryIsoCode?: string;\n        radius?: number;\n    }"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "TypeAlias",
    "name": "FindStoresAction",
    "namespace": "StoreFinderActions",
    "members": [
      "FindStoresOnHold",
      " | ",
      "FindStores",
      " | ",
      "FindStoresFail",
      " | ",
      "FindStoresSuccess",
      " | ",
      "FindStoreById",
      " | ",
      "FindStoreByIdFail",
      " | ",
      "FindStoreByIdSuccess"
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "FindStoresFail",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "FindStoresOnHold",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "FindStoresSuccess",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "VIEW_ALL_STORES_FAIL",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "VIEW_ALL_STORES_SUCCESS",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "VIEW_ALL_STORES",
    "namespace": "StoreFinderActions",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "ViewAllStores",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "TypeAlias",
    "name": "ViewAllStoresAction",
    "namespace": "StoreFinderActions",
    "members": [
      "ViewAllStores",
      " | ",
      "ViewAllStoresFail",
      " | ",
      "ViewAllStoresSuccess",
      " | ",
      "ClearStoreFinderData"
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "ViewAllStoresFail",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "ViewAllStoresSuccess",
    "namespace": "StoreFinderActions",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "payload", "type": "any" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "StoreFinderAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PointOfService>"
      },
      {
        "kind": "Method",
        "name": "loadCounts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StoreCount[]>"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "longitudeLatitude",
            "type": "GeoPoint",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefinder_core!GeoPoint:interface",
            "shortType": "GeoPoint",
            "importPath": "@spartacus/core"
          },
          {
            "name": "radius",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<StoreFinderSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "StoreFinderConfig",
    "members": [
      {
        "kind": "Property",
        "name": "googleMaps",
        "type": "{\n        apiUrl?: string;\n        apiKey?: string;\n        scale?: number;\n        selectedMarkerScale?: number;\n        radius?: number;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "StoreFinderConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "StoreFinderAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!StoreFinderAdapter:class",
            "shortType": "StoreFinderAdapter",
            "importPath": "@spartacus/storefinder/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "StoreFinderAdapter" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PointOfService>"
      },
      {
        "kind": "Method",
        "name": "getCounts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StoreCount[]>"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "longitudeLatitude",
            "type": "GeoPoint",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefinder_core!GeoPoint:interface",
            "shortType": "GeoPoint",
            "importPath": "@spartacus/core"
          },
          {
            "name": "radius",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<StoreFinderSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "StoreFinderCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Interface",
    "name": "StoreFinderSearchPage",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "boundEastLongitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundNorthLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundSouthLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "boundWestLongitude",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "locationText", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "SortModel[]" },
      {
        "kind": "PropertySignature",
        "name": "sourceLatitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "sourceLongitude",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "stores",
        "type": "PointOfService[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Interface",
    "name": "StoreFinderSearchQuery",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "longitudeLatitude",
        "type": "GeoPoint"
      },
      { "kind": "PropertySignature", "name": "queryText", "type": "string" },
      { "kind": "PropertySignature", "name": "radius", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "useMyLocation",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Namespace",
    "name": "StoreFinderSelectors"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "getFindStoresEntities",
    "namespace": "StoreFinderSelectors",
    "type": "MemoizedSelector<StateWithStoreFinder, FindStoresState>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "getFindStoresState",
    "namespace": "StoreFinderSelectors",
    "type": "MemoizedSelector<StateWithStoreFinder, StateUtils.LoaderState<FindStoresState>>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "getStoresLoading",
    "namespace": "StoreFinderSelectors",
    "type": "MemoizedSelector<StateWithStoreFinder, boolean>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "getStoresSuccess",
    "namespace": "StoreFinderSelectors",
    "type": "MemoizedSelector<StateWithStoreFinder, boolean>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "getViewAllStoresEntities",
    "namespace": "StoreFinderSelectors",
    "type": "MemoizedSelector<StateWithStoreFinder, ViewAllStoresState>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "getViewAllStoresLoading",
    "namespace": "StoreFinderSelectors",
    "type": "MemoizedSelector<StateWithStoreFinder, boolean>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Variable",
    "name": "getViewAllStoresState",
    "namespace": "StoreFinderSelectors",
    "type": "MemoizedSelector<StateWithStoreFinder, StateUtils.LoaderState<ViewAllStoresState>>"
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Class",
    "name": "StoreFinderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Store<StateWithStoreFinder>",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platformId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "callFindStoresAction",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routeParams",
            "type": "{\n        [key: string]: string;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "findStoresAction",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "queryText",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefinder_core!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "longitudeLatitude",
            "type": "GeoPoint",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefinder_core!GeoPoint:interface",
            "shortType": "GeoPoint",
            "importPath": "@spartacus/core"
          },
          {
            "name": "countryIsoCode",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "useMyLocation",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "radius",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getFindStoreEntityById",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StoreEntities>"
      },
      {
        "kind": "Method",
        "name": "getFindStoresEntities",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StoreEntities>"
      },
      {
        "kind": "Method",
        "name": "getStoreLatitude",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "location",
            "type": "PointOfService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!PointOfService:interface",
            "shortType": "PointOfService",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number | undefined"
      },
      {
        "kind": "Method",
        "name": "getStoreLongitude",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "location",
            "type": "PointOfService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_core!PointOfService:interface",
            "shortType": "PointOfService",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number | undefined"
      },
      {
        "kind": "Method",
        "name": "getStoresLoaded",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getStoresLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "getViewAllStoresEntities",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StoreEntities>"
      },
      {
        "kind": "Method",
        "name": "getViewAllStoresLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "platformId", "type": "any" },
      {
        "kind": "Method",
        "name": "reloadStoreEntitiesOnContextChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "store",
        "type": "Store<StateWithStoreFinder>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "viewAllStores",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "viewStoreById",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Interface",
    "name": "StoresState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "findStores",
        "type": "StateUtils.LoaderState<FindStoresState>"
      },
      {
        "kind": "PropertySignature",
        "name": "viewAllStores",
        "type": "StateUtils.LoaderState<ViewAllStoresState>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/core",
    "kind": "Interface",
    "name": "ViewAllStoresState",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "viewAllStoresEntities",
        "type": "StoreEntities"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/occ",
    "kind": "Class",
    "name": "OccStoreFinderAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpointsService",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converterService",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "callOccFindStores",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "longitudeLatitude",
            "type": "GeoPoint",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefinder_occ!GeoPoint:interface",
            "shortType": "GeoPoint",
            "importPath": "@spartacus/core"
          },
          {
            "name": "radius",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Occ.StoreFinderSearchPage>"
      },
      {
        "kind": "Property",
        "name": "converterService",
        "type": "ConverterService"
      },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "storeId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<PointOfService>"
      },
      {
        "kind": "Method",
        "name": "loadCounts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<StoreCount[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpointsService",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "searchConfig",
            "type": "SearchConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefinder_occ!SearchConfig:interface",
            "shortType": "SearchConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "longitudeLatitude",
            "type": "GeoPoint",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefinder_occ!GeoPoint:interface",
            "shortType": "GeoPoint",
            "importPath": "@spartacus/core"
          },
          {
            "name": "radius",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<StoreFinderSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefinder/occ",
    "kind": "Class",
    "name": "StoreFinderOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefinder/root",
    "kind": "Function",
    "name": "defaultStoreFinderComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/storefinder/root",
    "kind": "Variable",
    "name": "defaultStoreFinderLayoutConfig",
    "type": "LayoutConfig"
  },
  {
    "entryPoint": "@spartacus/storefinder/root",
    "kind": "Variable",
    "name": "STORE_FINDER_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefinder/root",
    "kind": "Class",
    "name": "StoreFinderRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefinder",
    "kind": "Class",
    "name": "StoreFinderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ActiveCartOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "mapProductsToOrderEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "OrderEntry[]"
      },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ActiveFacetsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facetService",
            "type": "FacetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FacetService:class",
            "shortType": "FacetService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "closeIcon", "type": "ICON_TYPE" },
      {
        "kind": "Property",
        "name": "facetList$",
        "type": "Observable<FacetList>"
      },
      { "kind": "Property", "name": "facetService", "type": "FacetService" },
      {
        "kind": "Method",
        "name": "getFocusKey",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facetList",
            "type": "FacetList",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FacetList:interface",
            "shortType": "FacetList",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "facet",
            "type": "Breadcrumb",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Breadcrumb:interface",
            "shortType": "Breadcrumb",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getLinkParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Breadcrumb",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Breadcrumb:interface",
            "shortType": "Breadcrumb",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        [key: string]: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ActiveFacetsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddedToCartDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "addedEntryWasMerged$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "dialog", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "dismissModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "entry$",
        "type": "Observable<OrderEntry>"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getQuantityControl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<FormControl>"
      },
      {
        "kind": "Method",
        "name": "getQuantityFormControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormControl"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "loaded$", "type": "Observable<boolean>" },
      { "kind": "Property", "name": "modalIsOpen", "type": "boolean" },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "numberOfEntriesBeforeAdd",
        "type": "number"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      { "kind": "Property", "name": "quantity", "type": "number" },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<FormControl>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "AddOrderEntriesContext",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "savedCartInfo",
            "type": "{\n        name: string;\n        description: string;\n    }",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "PropertySignature",
        "name": "type",
        "type": "OrderEntriesSource"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddressBookComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "AddressBookComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AddressBookComponentService:class",
            "shortType": "AddressBookComponentService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addAddressButtonHandle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addAddressCancel",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addAddressSubmit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "addresses$",
        "type": "Observable<Address[]>"
      },
      {
        "kind": "Property",
        "name": "addressesStateLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "cancelCard",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cards$", "type": "Observable<Card[]>" },
      { "kind": "Property", "name": "currentAddress", "type": "Address" },
      {
        "kind": "Method",
        "name": "deleteAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressButtonHandle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressCancel",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "editAddressSubmit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "editCard", "type": "string" },
      {
        "kind": "Method",
        "name": "getCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<{\n        textBold: string;\n        text: string[];\n        actions: {\n            name: string;\n            event: string;\n        }[];\n        header: string;\n        deleteMsg: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "AddressBookComponentService"
      },
      {
        "kind": "Method",
        "name": "setAddressAsDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setEdit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "showAddAddressForm", "type": "boolean" },
      { "kind": "Property", "name": "showEditAddressForm", "type": "boolean" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddressBookComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addUserAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deleteUserAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getAddresses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Address[]>"
      },
      {
        "kind": "Method",
        "name": "getAddressesStateLoading",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "loadAddresses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setAddressAsDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateUserAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addressId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "address",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddressBookModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddressFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "userService",
            "type": "UserService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserService:class",
            "shortType": "UserService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userAddressService",
            "type": "UserAddressService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserAddressService:class",
            "shortType": "UserAddressService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "actionBtnLabel", "type": "string" },
      { "kind": "Property", "name": "addressData", "type": "Address" },
      {
        "kind": "Property",
        "name": "addresses$",
        "type": "Observable<Address[]>"
      },
      { "kind": "Property", "name": "addressForm", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "addressVerifySub",
        "type": "Subscription"
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "backToAddress",
        "type": "EventEmitter<any>"
      },
      { "kind": "Property", "name": "cancelBtnLabel", "type": "string" },
      {
        "kind": "Property",
        "name": "countries$",
        "type": "Observable<Country[]>"
      },
      {
        "kind": "Method",
        "name": "countrySelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "country",
            "type": "Country",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Country:interface",
            "shortType": "Country",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleAddressVerificationResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "AddressValidation",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AddressValidation:interface",
            "shortType": "AddressValidation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openSuggestedAddress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "AddressValidation",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AddressValidation:interface",
            "shortType": "AddressValidation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "regions$",
        "type": "Observable<Region[]>"
      },
      {
        "kind": "Method",
        "name": "regionSelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "region",
            "type": "Region",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Region:interface",
            "shortType": "Region",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "regionsSub", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "selectedCountry$",
        "type": "BehaviorSubject<string>"
      },
      { "kind": "Property", "name": "setAsDefaultField", "type": "boolean" },
      { "kind": "Property", "name": "showCancelBtn", "type": "boolean" },
      { "kind": "Property", "name": "showTitleCode", "type": "boolean" },
      {
        "kind": "Property",
        "name": "submitAddress",
        "type": "EventEmitter<any>"
      },
      {
        "kind": "Property",
        "name": "suggestedAddressModalRef",
        "type": "ModalRef"
      },
      { "kind": "Property", "name": "titles$", "type": "Observable<Title[]>" },
      {
        "kind": "Method",
        "name": "toggleDefaultAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userAddressService",
        "type": "UserAddressService"
      },
      { "kind": "Property", "name": "userService", "type": "UserService" },
      {
        "kind": "Method",
        "name": "verifyAddress",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddressFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToCartComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "component",
            "type": "CmsComponentData<CmsAddToCartComponent>",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "addToCart",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "addToCartForm", "type": "FormGroup" },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsAddToCartComponent>"
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Method",
        "name": "getInventory",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      { "kind": "Property", "name": "hasStock", "type": "boolean" },
      { "kind": "Property", "name": "inventoryThreshold", "type": "boolean" },
      { "kind": "Property", "name": "maxQuantity", "type": "number" },
      { "kind": "Property", "name": "modalRef", "type": "ModalRef" },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "numberOfEntriesBeforeAdd",
        "type": "number"
      },
      {
        "kind": "Method",
        "name": "openModal",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product", "type": "Product" },
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "quantity", "type": "number" },
      {
        "kind": "Method",
        "name": "setStockInfo",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "showInventory$",
        "type": "Observable<boolean | undefined> | undefined"
      },
      { "kind": "Property", "name": "showQuantity", "type": "boolean" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "updateCount",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToCartModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToHomeScreenBannerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addToHomeScreenService",
            "type": "AddToHomeScreenService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AddToHomeScreenService:class",
            "shortType": "AddToHomeScreenService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "addToHomeScreenService",
        "type": "AddToHomeScreenService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToHomeScreenBtnComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addToHomeScreenService",
            "type": "AddToHomeScreenService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AddToHomeScreenService:class",
            "shortType": "AddToHomeScreenService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "addToHomeScreenService",
        "type": "AddToHomeScreenService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToHomeScreenComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "addToHomeScreenService",
            "type": "AddToHomeScreenService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AddToHomeScreenService:class",
            "shortType": "AddToHomeScreenService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "addToHomeScreenService",
        "type": "AddToHomeScreenService"
      },
      {
        "kind": "Property",
        "name": "canPrompt$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "prompt",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToHomeScreenService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "PWAModuleConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PWAModuleConfig:class",
            "shortType": "PWAModuleConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "canPrompt",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Property",
        "name": "canPrompt$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "config", "type": "PWAModuleConfig" },
      { "kind": "Property", "name": "deferredEvent", "type": "any" },
      {
        "kind": "Method",
        "name": "disableAddToHomeScreen",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "enableAddToHomeScreen",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "firePrompt",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToWishListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "wishListService",
            "type": "WishListService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WishListService:class",
            "shortType": "WishListService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Method",
        "name": "getProductInWishList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "entries",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderEntry"
      },
      { "kind": "Property", "name": "hasStock", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "loading$", "type": "Observable<boolean>" },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setStockInfo",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userLoggedIn$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "wishListEntries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "wishListService",
        "type": "WishListService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AddToWishListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AmendOrderActionsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendOrderForm", "type": "FormGroup" },
      { "kind": "Property", "name": "backRoute", "type": "string" },
      {
        "kind": "Method",
        "name": "continue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "forwardRoute", "type": "string" },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "styles", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AmendOrderActionsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AmendOrderItemsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "AmendOrderType",
    "members": ["CANCEL", "RETURN"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AnonymousConsentDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "AnonymousConsentsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AnonymousConsentsConfig:class",
            "shortType": "AnonymousConsentsConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "anonymousConsentsService",
            "type": "AnonymousConsentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AnonymousConsentsService:class",
            "shortType": "AnonymousConsentsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "allowAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsService",
        "type": "AnonymousConsentsService"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "config",
        "type": "AnonymousConsentsConfig"
      },
      {
        "kind": "Property",
        "name": "consents$",
        "type": "Observable<AnonymousConsent[]>"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Method",
        "name": "getCorrespondingConsent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "template",
            "type": "ConsentTemplate",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          },
          {
            "name": "consents",
            "type": "AnonymousConsent[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "AnonymousConsent"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      { "kind": "Property", "name": "loading$", "type": "Observable<boolean>" },
      { "kind": "Property", "name": "modal", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onConsentChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ given, template, }",
            "type": "{\n        given: boolean;\n        template: ConsentTemplate;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "rejectAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "requiredConsents", "type": "string[]" },
      { "kind": "Property", "name": "role", "type": "string" },
      { "kind": "Property", "name": "showLegalDescription", "type": "boolean" },
      {
        "kind": "Property",
        "name": "templates$",
        "type": "Observable<ConsentTemplate[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AnonymousConsentManagementBannerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "anonymousConsentsService",
            "type": "AnonymousConsentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AnonymousConsentsService:class",
            "shortType": "AnonymousConsentsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "allowAll",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsService",
        "type": "AnonymousConsentsService"
      },
      {
        "kind": "Property",
        "name": "bannerVisible$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "hideBanner",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" },
      {
        "kind": "Method",
        "name": "viewDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AnonymousConsentManagementBannerModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AnonymousConsentOpenDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "openElement", "type": "ElementRef" },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AnonymousConsentsDialogModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AppliedCouponsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartVoucherService",
            "type": "CartVoucherService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartVoucherService:class",
            "shortType": "CartVoucherService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "cartIsLoading", "type": "boolean" },
      {
        "kind": "Property",
        "name": "cartVoucherService",
        "type": "CartVoucherService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isReadOnly", "type": "boolean" },
      {
        "kind": "Method",
        "name": "removeVoucher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "voucherId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "sortedVouchers", "type": "Voucher[]" },
      { "kind": "Property", "name": "vouchers", "type": "Voucher[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "AppRoutingModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "AVOID_STACKED_OUTLETS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BannerCarouselComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<model>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getItems",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Observable<ContentSlotComponentData>[]>"
      },
      { "kind": "Property", "name": "theme", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BannerCarouselModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BannerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "CmsComponentData<CmsBannerComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsBannerComponent>"
      },
      {
        "kind": "Property",
        "name": "data$",
        "type": "Observable<CmsBannerComponent>"
      },
      {
        "kind": "Method",
        "name": "getImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "CmsBannerComponent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsBannerComponent:interface",
            "shortType": "CmsBannerComponent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Image | ImageGroup | undefined"
      },
      {
        "kind": "Method",
        "name": "getTarget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "CmsBannerComponent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsBannerComponent:interface",
            "shortType": "CmsBannerComponent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string | null"
      },
      {
        "kind": "Property",
        "name": "styleClasses",
        "type": "string | undefined"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BannerModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BaseStorefrontModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BreadcrumbComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "CmsComponentData<CmsBreadcrumbsComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "pageMetaService",
            "type": "PageMetaService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageMetaService:class",
            "shortType": "PageMetaService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsBreadcrumbsComponent>"
      },
      { "kind": "Property", "name": "crumbs$", "type": "Observable<any[]>" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "pageMetaService",
        "type": "PageMetaService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BreadcrumbModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BreadcrumbSchemaBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageMetaService",
            "type": "PageMetaService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageMetaService:class",
            "shortType": "PageMetaService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "collect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageMeta",
            "type": "PageMeta",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageMeta:interface",
            "shortType": "PageMeta",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Property",
        "name": "pageMetaService",
        "type": "PageMetaService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "BREAKPOINT",
    "members": ["lg", "md", "sm", "xl", "xs"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "BreakPoint",
    "members": [
      { "kind": "PropertySignature", "name": "max", "type": "number" },
      { "kind": "PropertySignature", "name": "min", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "BreakpointService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "layoutConfig",
            "type": "LayoutConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LayoutConfig:class",
            "shortType": "LayoutConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "platform",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpoint$",
        "type": "Observable<BREAKPOINT>"
      },
      { "kind": "Property", "name": "breakpoints", "type": "BREAKPOINT[]" },
      { "kind": "Property", "name": "config", "type": "LayoutBreakPoints" },
      {
        "kind": "Property",
        "name": "fallbackBreakpoint",
        "type": "BREAKPOINT"
      },
      {
        "kind": "Method",
        "name": "getBreakpoint",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "windowWidth",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "BREAKPOINT"
      },
      {
        "kind": "Method",
        "name": "getMaxSize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getMinSize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getSize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isDown",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isEqual",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "isUp",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "layoutConfig", "type": "LayoutConfig" },
      { "kind": "Property", "name": "platform", "type": "any" },
      {
        "kind": "Method",
        "name": "resolveBreakpointsFromConfig",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "BREAKPOINT[]"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrderConfirmationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Method",
        "name": "submit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrderConfirmationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CancelOrReturnItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "entries", "type": "OrderEntry[]" },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Method",
        "name": "getControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormControl"
      },
      {
        "kind": "Method",
        "name": "getItemPrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Price"
      },
      {
        "kind": "Method",
        "name": "getMaxAmendQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "isCancellation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "isConfirmation", "type": "boolean" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      {
        "kind": "Method",
        "name": "setAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "Card",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "actions",
        "type": "Array<CardAction | CardLinkAction>"
      },
      { "kind": "PropertySignature", "name": "deleteMsg", "type": "string" },
      { "kind": "PropertySignature", "name": "header", "type": "string" },
      { "kind": "PropertySignature", "name": "img", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "paragraphs",
        "type": "Array<{\n        title?: string;\n        text?: Array<string>;\n    }>"
      },
      { "kind": "PropertySignature", "name": "text", "type": "Array<string>" },
      { "kind": "PropertySignature", "name": "textBold", "type": "string" },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "CardAction",
    "members": [
      { "kind": "PropertySignature", "name": "event", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CardComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "border", "type": "boolean" },
      {
        "kind": "Property",
        "name": "cancelCard",
        "type": "EventEmitter<number>"
      },
      {
        "kind": "Method",
        "name": "cancelEdit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "charactersLimit", "type": "number" },
      { "kind": "Property", "name": "content", "type": "Card" },
      {
        "kind": "Method",
        "name": "delete",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "deleteCard",
        "type": "EventEmitter<number>"
      },
      {
        "kind": "Method",
        "name": "edit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "editCard",
        "type": "EventEmitter<number>"
      },
      { "kind": "Property", "name": "editMode", "type": "boolean" },
      { "kind": "Property", "name": "fitToContainer", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isDefault", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "send",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "sendCard",
        "type": "EventEmitter<number>"
      },
      {
        "kind": "Method",
        "name": "setDefault",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "setDefaultCard",
        "type": "EventEmitter<number>"
      },
      {
        "kind": "Method",
        "name": "setEditMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "truncateText", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "CardLinkAction",
    "members": [
      { "kind": "PropertySignature", "name": "link", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CardModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CarouselComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "service",
            "type": "CarouselService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CarouselService:class",
            "shortType": "CarouselService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "activeSlide", "type": "number" },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "getSlideNumber",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "size",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentIndex",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      { "kind": "Property", "name": "hideIndicators", "type": "boolean" },
      { "kind": "Property", "name": "indicatorIcon", "type": "ICON_TYPE" },
      { "kind": "Property", "name": "items", "type": "Observable<any>[]" },
      { "kind": "Property", "name": "itemWidth", "type": "string" },
      { "kind": "Property", "name": "nextIcon", "type": "ICON_TYPE" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "previousIcon", "type": "ICON_TYPE" },
      { "kind": "Property", "name": "service", "type": "CarouselService" },
      { "kind": "Property", "name": "size$", "type": "Observable<number>" },
      { "kind": "Property", "name": "template", "type": "TemplateRef<any>" },
      { "kind": "Property", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CarouselModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CarouselService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getItemsPerSlide",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "nativeElement",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "itemWidth",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<number>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartComponentModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartCouponComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartVoucherService",
            "type": "CartVoucherService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartVoucherService:class",
            "shortType": "CartVoucherService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "customerCouponService",
            "type": "CustomerCouponService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CustomerCouponService:class",
            "shortType": "CustomerCouponService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Property",
        "name": "applicableCoupons",
        "type": "CustomerCoupon[]"
      },
      {
        "kind": "Method",
        "name": "applyCustomerCoupon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "couponId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "applyVoucher",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      { "kind": "Property", "name": "cartId", "type": "string" },
      {
        "kind": "Property",
        "name": "cartIsLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "cartVoucherService",
        "type": "CartVoucherService"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "couponBoxIsActive", "type": "boolean" },
      { "kind": "Property", "name": "couponForm", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "customerCouponService",
        "type": "CustomerCouponService"
      },
      {
        "kind": "Method",
        "name": "disableClose",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "formBuilder", "type": "FormBuilder" },
      {
        "kind": "Method",
        "name": "getApplicableCustomerCoupons",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cart",
            "type": "Cart",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Cart:interface",
            "shortType": "Cart",
            "importPath": "@spartacus/core"
          },
          {
            "name": "coupons",
            "type": "CustomerCoupon[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CustomerCoupon:interface",
            "shortType": "CustomerCoupon",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ignoreCloseEvent", "type": "boolean" },
      {
        "kind": "Property",
        "name": "MAX_CUSTOMER_COUPON_PAGE",
        "type": "number"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "error",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "success",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartCouponModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartDetailsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selectiveCartService",
            "type": "SelectiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
            "shortType": "SelectiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "loggedIn", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "saveForLater",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "selectiveCartEnabled", "type": "boolean" },
      {
        "kind": "Property",
        "name": "selectiveCartService",
        "type": "SelectiveCartService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartItemComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartItemContextSource",
            "type": "CartItemContextSource",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartItemContextSource:class",
            "shortType": "CartItemContextSource",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartItemContextSource",
        "type": "CartItemContextSource"
      },
      {
        "kind": "Property",
        "name": "CartOutlets",
        "type": "typeof CartOutlets"
      },
      { "kind": "Property", "name": "compact", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isProductOutOfStock",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "item", "type": "OrderEntry" },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "changes",
            "type": "SimpleChanges",
            "isOptional": true,
            "canonicalReference": "@angular/core!SimpleChanges:interface",
            "shortType": "SimpleChanges",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "options",
        "type": "CartItemComponentOptions"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      { "kind": "Property", "name": "quantityControl", "type": "FormControl" },
      { "kind": "Property", "name": "readonly", "type": "boolean" },
      {
        "kind": "Method",
        "name": "removeItem",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "CartItemComponentOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "isSaveForLater",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "optionalBtn", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartItemContext",
    "members": [
      { "kind": "Property", "name": "compact$", "type": "Observable<boolean>" },
      { "kind": "Property", "name": "item$", "type": "Observable<OrderEntry>" },
      {
        "kind": "Property",
        "name": "location$",
        "type": "Observable<PromotionLocation>"
      },
      {
        "kind": "Property",
        "name": "options$",
        "type": "Observable<CartItemComponentOptions>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "Observable<FormControl>"
      },
      { "kind": "Property", "name": "readonly$", "type": "Observable<boolean>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartItemContextSource",
    "members": [
      {
        "kind": "Property",
        "name": "compact$",
        "type": "ReplaySubject<boolean>"
      },
      {
        "kind": "Property",
        "name": "item$",
        "type": "ReplaySubject<OrderEntry>"
      },
      {
        "kind": "Property",
        "name": "location$",
        "type": "ReplaySubject<PromotionLocation>"
      },
      {
        "kind": "Property",
        "name": "options$",
        "type": "ReplaySubject<CartItemComponentOptions>"
      },
      {
        "kind": "Property",
        "name": "quantityControl$",
        "type": "ReplaySubject<FormControl>"
      },
      {
        "kind": "Property",
        "name": "readonly$",
        "type": "ReplaySubject<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartItemListComponent",
    "members": [
      { "kind": "Property", "name": "_items", "type": "OrderEntry[]" },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selectiveCartService",
            "type": "SelectiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
            "shortType": "SelectiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "multiCartService",
            "type": "MultiCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!MultiCartService:class",
            "shortType": "MultiCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cartId", "type": "string" },
      {
        "kind": "Method",
        "name": "createForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<FormGroup>"
      },
      {
        "kind": "Method",
        "name": "getControlName",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "hasHeader", "type": "boolean" },
      { "kind": "Property", "name": "items", "type": "OrderEntry[]" },
      {
        "kind": "Property",
        "name": "multiCartService",
        "type": "MultiCartService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "options",
        "type": "CartItemComponentOptions"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      },
      { "kind": "Property", "name": "readonly", "type": "boolean" },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resolveItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "items",
            "type": "OrderEntry[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectiveCartService",
        "type": "SelectiveCartService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "userId", "type": "string" },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartOrderEntriesContext",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actionsSubject",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "actionsSubject",
        "type": "ActionsSubject"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "addEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "products",
            "type": "ProductData[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductData:type",
            "shortType": "ProductData",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Method",
        "name": "getResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductImportInfo>"
      },
      {
        "kind": "Method",
        "name": "mapMessages",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "action",
            "type": "CartActions.CartAddEntrySuccess | CartActions.CartAddEntryFail",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ProductImportInfo"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "CartOutlets",
    "members": ["ITEM", "ITEM_BUNDLE_DETAILS", "ITEM_DETAILS"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartPageEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartPageEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildCartPageEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CartPageEvent>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartPageEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_cartPageEventBuilder",
            "type": "CartPageEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartPageEventBuilder:class",
            "shortType": "CartPageEventBuilder",
            "importPath": "@spartacus/storefront"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartPageLayoutHandler",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selectiveCartService",
            "type": "SelectiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
            "shortType": "SelectiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "handle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "slots$",
            "type": "Observable<string[]>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          },
          {
            "name": "pageTemplate",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "section",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Property",
        "name": "selectiveCartService",
        "type": "SelectiveCartService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartSharedModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartValidationInProgress",
        "type": "boolean"
      },
      {
        "kind": "Method",
        "name": "disableButtonWhileNavigation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartTotalsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartValidationService",
            "type": "CartValidationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartValidationService:class",
            "shortType": "CartValidationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartValidationStateService",
            "type": "CartValidationStateService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartValidationStateService:class",
            "shortType": "CartValidationStateService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cartConfigService",
            "type": "CartConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartConfigService:class",
            "shortType": "CartConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "cartConfigService",
        "type": "CartConfigService"
      },
      {
        "kind": "Property",
        "name": "cartValidationService",
        "type": "CartValidationService"
      },
      {
        "kind": "Property",
        "name": "cartValidationStateService",
        "type": "CartValidationStateService"
      },
      {
        "kind": "Property",
        "name": "GLOBAL_MESSAGE_TIMEOUT",
        "type": "number"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationStateService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartValidationResult$",
        "type": "Observable<CartModification[]>"
      },
      {
        "kind": "Property",
        "name": "checkForValidationResultClear$",
        "type": "Observable<[import(\"@spartacus/core\").RouterState, CartModification[]]>"
      },
      { "kind": "Property", "name": "NAVIGATION_SKIPS", "type": "number" },
      { "kind": "Property", "name": "navigationIdCount", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "setInitialState",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setNavigationIdStep",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "updateValidationResultAndRoutingId",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartModification",
            "type": "CartModification[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartModification:interface",
            "shortType": "CartModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationWarningsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartValidationStateService",
            "type": "CartValidationStateService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartValidationStateService:class",
            "shortType": "CartValidationStateService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cartModifications$",
        "type": "import(\"rxjs\").Observable<CartModification[]>"
      },
      {
        "kind": "Property",
        "name": "cartValidationStateService",
        "type": "CartValidationStateService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "removeMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cartModification",
            "type": "CartModification",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CartModification:interface",
            "shortType": "CartModification",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "visibleWarnings",
        "type": "Record<string, boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CartValidationWarningsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CategoryNavigationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<CmsNavigationComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "service",
            "type": "NavigationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!NavigationService:class",
            "shortType": "NavigationService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CmsNavigationComponent>"
      },
      {
        "kind": "Property",
        "name": "data$",
        "type": "Observable<CmsNavigationComponent>"
      },
      {
        "kind": "Property",
        "name": "node$",
        "type": "Observable<NavigationNode>"
      },
      { "kind": "Property", "name": "service", "type": "NavigationService" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CategoryNavigationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CategoryPageResultsEvent",
    "members": [
      { "kind": "Property", "name": "categoryCode", "type": "string" },
      { "kind": "Property", "name": "categoryName", "type": "string" },
      { "kind": "Property", "name": "numberOfResults", "type": "Number" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsComponentData",
    "members": [
      { "kind": "Property", "name": "data$", "type": "Observable<T>" },
      { "kind": "Property", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsComponentsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "CmsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsConfig:class",
            "shortType": "CmsConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "platformId",
            "type": "Object",
            "isOptional": false,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          },
          {
            "name": "featureModules",
            "type": "CmsFeaturesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsFeaturesService:class",
            "shortType": "CmsFeaturesService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "configInitializer",
            "type": "ConfigInitializerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ConfigInitializerService:class",
            "shortType": "ConfigInitializerService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "CmsConfig" },
      {
        "kind": "Property",
        "name": "configInitializer",
        "type": "ConfigInitializerService"
      },
      {
        "kind": "Method",
        "name": "determineMappings",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentTypes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string[]>"
      },
      {
        "kind": "Property",
        "name": "featureModules",
        "type": "CmsFeaturesService"
      },
      {
        "kind": "Method",
        "name": "getChildRoutes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentTypes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "CmsComponentChildRoutesConfig"
      },
      {
        "kind": "Method",
        "name": "getDeferLoadingStrategy",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "DeferLoadingStrategy | undefined"
      },
      {
        "kind": "Method",
        "name": "getGuards",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentTypes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any[]"
      },
      {
        "kind": "Method",
        "name": "getI18nKeys",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentTypes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[]"
      },
      {
        "kind": "Method",
        "name": "getMapping",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "CmsComponentMapping"
      },
      {
        "kind": "Method",
        "name": "getModule",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "NgModuleRef<any> | undefined"
      },
      {
        "kind": "Method",
        "name": "getStaticData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "T | undefined"
      },
      {
        "kind": "Property",
        "name": "mappingResolvers",
        "type": "Map<string, Observable<CmsComponentMapping>>"
      },
      {
        "kind": "Property",
        "name": "mappings",
        "type": "{\n        [componentType: string]: CmsComponentMapping;\n    }"
      },
      { "kind": "Property", "name": "missingComponents", "type": "string[]" },
      { "kind": "Property", "name": "platformId", "type": "Object" },
      {
        "kind": "Method",
        "name": "shouldRender",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "standardizeChildRoutes",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "childRoutesConfigs",
            "type": "(Route[] | CmsComponentChildRoutesConfig)[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "CmsComponentChildRoutesConfig"
      },
      {
        "kind": "Property",
        "name": "staticCmsConfig",
        "type": "CMSComponentConfig | undefined"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsFeaturesService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configInitializer",
            "type": "ConfigInitializerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ConfigInitializerService:class",
            "shortType": "ConfigInitializerService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "featureModules",
            "type": "FeatureModulesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FeatureModulesService:class",
            "shortType": "FeatureModulesService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "configInitializer",
        "type": "ConfigInitializerService"
      },
      {
        "kind": "Property",
        "name": "featureModules",
        "type": "FeatureModulesService"
      },
      {
        "kind": "Method",
        "name": "getCmsMapping",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CmsComponentMapping | undefined>"
      },
      {
        "kind": "Method",
        "name": "getModule",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "NgModuleRef<any> | undefined"
      },
      {
        "kind": "Method",
        "name": "hasFeatureFor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsGuardsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsComponentsService",
            "type": "CmsComponentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
            "shortType": "CmsComponentsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsComponentsService",
        "type": "CmsComponentsService"
      },
      {
        "kind": "Method",
        "name": "cmsPageCanActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentTypes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "route",
            "type": "CmsActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsActivatedRouteSnapshot:interface",
            "shortType": "CmsActivatedRouteSnapshot",
            "importPath": "@spartacus/core"
          },
          {
            "name": "state",
            "type": "RouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsI18nService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsComponentsService",
            "type": "CmsComponentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
            "shortType": "CmsComponentsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationChunk",
            "type": "TranslationChunkService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationChunkService:class",
            "shortType": "TranslationChunkService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsComponentsService",
        "type": "CmsComponentsService"
      },
      {
        "kind": "Method",
        "name": "loadForComponents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentTypes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "translationChunk",
        "type": "TranslationChunkService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsInjectorService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsComponentsService",
            "type": "CmsComponentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
            "shortType": "CmsComponentsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsComponentsService",
        "type": "CmsComponentsService"
      },
      {
        "kind": "Method",
        "name": "getInjector",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "uid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "parentInjector",
            "type": "Injector",
            "isOptional": true,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Injector"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsPageGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "protectedRoutesGuard",
            "type": "ProtectedRoutesGuard",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProtectedRoutesGuard:class",
            "shortType": "ProtectedRoutesGuard",
            "importPath": "@spartacus/core"
          },
          {
            "name": "service",
            "type": "CmsPageGuardService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsPageGuardService:class",
            "shortType": "CmsPageGuardService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "routingConfig",
            "type": "RoutingConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingConfigService:class",
            "shortType": "RoutingConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "CmsActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsActivatedRouteSnapshot:interface",
            "shortType": "CmsActivatedRouteSnapshot",
            "importPath": "@spartacus/core"
          },
          {
            "name": "state",
            "type": "RouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      { "kind": "Property", "name": "guardName", "type": "string" },
      {
        "kind": "Property",
        "name": "protectedRoutesGuard",
        "type": "ProtectedRoutesGuard"
      },
      {
        "kind": "Property",
        "name": "routingConfig",
        "type": "RoutingConfigService"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "service", "type": "CmsPageGuardService" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsPageGuardService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cmsRoutes",
            "type": "CmsRoutesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsRoutesService:class",
            "shortType": "CmsRoutesService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cmsI18n",
            "type": "CmsI18nService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsI18nService:class",
            "shortType": "CmsI18nService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cmsGuards",
            "type": "CmsGuardsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsGuardsService:class",
            "shortType": "CmsGuardsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cmsComponentsService",
            "type": "CmsComponentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
            "shortType": "CmsComponentsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivateNotFoundPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "route",
            "type": "CmsActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsActivatedRouteSnapshot:interface",
            "shortType": "CmsActivatedRouteSnapshot",
            "importPath": "@spartacus/core"
          },
          {
            "name": "state",
            "type": "RouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Method",
        "name": "canActivatePage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "pageData",
            "type": "Page",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Page:interface",
            "shortType": "Page",
            "importPath": "@spartacus/core"
          },
          {
            "name": "route",
            "type": "CmsActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsActivatedRouteSnapshot:interface",
            "shortType": "CmsActivatedRouteSnapshot",
            "importPath": "@spartacus/core"
          },
          {
            "name": "state",
            "type": "RouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "cmsComponentsService",
        "type": "CmsComponentsService"
      },
      { "kind": "Property", "name": "cmsGuards", "type": "CmsGuardsService" },
      { "kind": "Property", "name": "cmsI18n", "type": "CmsI18nService" },
      { "kind": "Property", "name": "cmsRoutes", "type": "CmsRoutesService" },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsParagraphModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsRouteModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CmsRoutesService",
    "members": [
      {
        "kind": "Method",
        "name": "handleCmsRoutesInGuard",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageContext",
            "type": "PageContext",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageContext:class",
            "shortType": "PageContext",
            "importPath": "@spartacus/core"
          },
          {
            "name": "componentTypes",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentUrl",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPageLabel",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "CmsStructureOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "breakpoint",
        "type": "BREAKPOINT"
      },
      { "kind": "PropertySignature", "name": "componentId", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "pageSlotPosition",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "pageTemplate", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "section",
        "type": "PageSection | string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ComponentCreateEvent",
    "members": [
      { "kind": "Property", "name": "host", "type": "HTMLElement" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ComponentDestroyEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ComponentEvent",
    "members": [
      { "kind": "Property", "name": "id", "type": "string" },
      { "kind": "Property", "name": "typeCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ComponentHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentMapping",
            "type": "CmsComponentMapping",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentMapping:interface",
            "shortType": "CmsComponentMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "launcher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentMapping",
            "type": "CmsComponentMapping",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentMapping:interface",
            "shortType": "CmsComponentMapping",
            "importPath": "@spartacus/core"
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "elementInjector",
            "type": "Injector",
            "isOptional": true,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "module",
            "type": "NgModuleRef<any>",
            "isOptional": true,
            "canonicalReference": "@angular/core!NgModuleRef:class",
            "shortType": "NgModuleRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<{\n        elementRef: ElementRef;\n        componentRef?: ComponentRef<any>;\n    }>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ComponentHandlerService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "handlers",
            "type": "ComponentHandler[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ComponentHandler:class",
            "shortType": "ComponentHandler",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getLauncher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentMapping",
            "type": "CmsComponentMapping",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentMapping:interface",
            "shortType": "CmsComponentMapping",
            "importPath": "@spartacus/core"
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "elementInjector",
            "type": "Injector",
            "isOptional": true,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "module",
            "type": "NgModuleRef<any>",
            "isOptional": true,
            "canonicalReference": "@angular/core!NgModuleRef:class",
            "shortType": "NgModuleRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<{\n        elementRef: ElementRef;\n        componentRef?: ComponentRef<any>;\n    }>"
      },
      { "kind": "Property", "name": "handlers", "type": "ComponentHandler[]" },
      {
        "kind": "Property",
        "name": "invalidMappings",
        "type": "Set<CmsComponentMapping<any>>"
      },
      {
        "kind": "Method",
        "name": "resolve",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentMapping",
            "type": "CmsComponentMapping",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentMapping:interface",
            "shortType": "CmsComponentMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "ComponentHandler"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ComponentWrapperDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "cmsComponentsService",
            "type": "CmsComponentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
            "shortType": "CmsComponentsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "dynamicAttributeService",
            "type": "DynamicAttributeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DynamicAttributeService:class",
            "shortType": "DynamicAttributeService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "componentHandler",
            "type": "ComponentHandlerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ComponentHandlerService:class",
            "shortType": "ComponentHandlerService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cmsInjector",
            "type": "CmsInjectorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsInjectorService:class",
            "shortType": "CmsInjectorService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "cmpRef", "type": "ComponentRef<any>" },
      {
        "kind": "Property",
        "name": "cmsComponentsService",
        "type": "CmsComponentsService"
      },
      {
        "kind": "Property",
        "name": "cmsInjector",
        "type": "CmsInjectorService"
      },
      {
        "kind": "Property",
        "name": "componentHandler",
        "type": "ComponentHandlerService"
      },
      {
        "kind": "Property",
        "name": "cxComponentRef",
        "type": "EventEmitter<ComponentRef<any>>"
      },
      {
        "kind": "Property",
        "name": "cxComponentWrapper",
        "type": "ContentSlotComponentData"
      },
      {
        "kind": "Method",
        "name": "dispatchEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Type<ComponentEvent>",
            "isOptional": false,
            "canonicalReference": "@angular/core!Type:interface",
            "shortType": "Type",
            "importPath": "@angular/core"
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": true,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "dynamicAttributeService",
        "type": "DynamicAttributeService"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ConsentManagementComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userConsentService",
            "type": "UserConsentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserConsentService:class",
            "shortType": "UserConsentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "anonymousConsentsConfig",
            "type": "AnonymousConsentsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AnonymousConsentsConfig:class",
            "shortType": "AnonymousConsentsConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "anonymousConsentsService",
            "type": "AnonymousConsentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AnonymousConsentsService:class",
            "shortType": "AnonymousConsentsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "allowAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templates",
            "type": "ConsentTemplate[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsConfig",
        "type": "AnonymousConsentsConfig"
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsService",
        "type": "AnonymousConsentsService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "loading$", "type": "Observable<boolean>" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onConsentChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ given, template, }",
            "type": "{\n        given: boolean;\n        template: ConsentTemplate;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "rejectAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templates",
            "type": "ConsentTemplate[]",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!ConsentTemplate:interface",
            "shortType": "ConsentTemplate",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "requiredConsents", "type": "string[]" },
      {
        "kind": "Property",
        "name": "templateList$",
        "type": "Observable<ConsentTemplate[]>"
      },
      {
        "kind": "Property",
        "name": "userConsentService",
        "type": "UserConsentService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ConsentManagementFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "consent", "type": "AnonymousConsent" },
      {
        "kind": "Property",
        "name": "consentChanged",
        "type": "EventEmitter<{\n        given: boolean;\n        template: ConsentTemplate;\n    }>"
      },
      { "kind": "Property", "name": "consentGiven", "type": "boolean" },
      {
        "kind": "Property",
        "name": "consentTemplate",
        "type": "ConsentTemplate"
      },
      {
        "kind": "Method",
        "name": "isRequired",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onConsentChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "requiredConsents", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ConsentManagementModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ConsignmentTrackingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "consignment", "type": "Consignment" },
      { "kind": "Property", "name": "consignmentStatus", "type": "string[]" },
      {
        "kind": "Property",
        "name": "consignmentTracking$",
        "type": "Observable<ConsignmentTracking>"
      },
      { "kind": "Property", "name": "modalRef", "type": "ModalRef" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openTrackingDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consignment",
            "type": "Consignment",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Consignment:interface",
            "shortType": "Consignment",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ContextService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingContextService",
            "type": "RoutingContextService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingContextService:class",
            "shortType": "RoutingContextService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "contextToken",
            "type": "ContextToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ContextToken:type",
            "shortType": "ContextToken",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T | undefined>"
      },
      {
        "kind": "Method",
        "name": "resolveContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "contextToken",
            "type": "ContextToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ContextToken:type",
            "shortType": "ContextToken",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T | undefined>"
      },
      {
        "kind": "Property",
        "name": "routingContextService",
        "type": "RoutingContextService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "controlsMustMatch",
    "parameters": [
      {
        "name": "formGroup",
        "type": "FormGroup",
        "isOptional": false,
        "canonicalReference": "@angular/forms!FormGroup:class",
        "shortType": "FormGroup",
        "importPath": "@angular/forms"
      },
      {
        "name": "firstControlName",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "secondControlName",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      },
      {
        "name": "errorName",
        "type": "string",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "void"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CouponCardComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "myCouponsComponentService",
            "type": "MyCouponsComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!MyCouponsComponentService:class",
            "shortType": "MyCouponsComponentService",
            "importPath": ""
          }
        ]
      },
      { "kind": "Property", "name": "coupon", "type": "CustomerCoupon" },
      {
        "kind": "Property",
        "name": "couponSubscriptionLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "findProducts",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "modalRef", "type": "ModalRef" },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Property",
        "name": "myCouponsComponentService",
        "type": "MyCouponsComponentService"
      },
      {
        "kind": "Property",
        "name": "notificationChanged",
        "type": "EventEmitter<{\n        couponId: string;\n        notification: boolean;\n    }>"
      },
      {
        "kind": "Method",
        "name": "onSubscriptionChange",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "readMore",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CouponClaimComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "couponService",
            "type": "CustomerCouponService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CustomerCouponService:class",
            "shortType": "CustomerCouponService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "messageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "couponService",
        "type": "CustomerCouponService"
      },
      {
        "kind": "Property",
        "name": "messageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CouponDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "coupon", "type": "CustomerCoupon" },
      { "kind": "Property", "name": "dialog", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "dismissModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "modalService", "type": "ModalService" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "CsvFileValidationErrors",
    "members": [
      { "kind": "PropertySignature", "name": "empty", "type": "boolean" },
      { "kind": "PropertySignature", "name": "notParsable", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "tooLarge",
        "type": "{\n        maxSize: number;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "tooManyEntries",
        "type": "{\n        maxEntries: number;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CurrentProductService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "DEFAULT_PRODUCT_SCOPE", "type": "" },
      {
        "kind": "Method",
        "name": "getCode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scopes",
            "type": "(ProductScope | string)[] | ProductScope | string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Product | null>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "CustomFormValidators",
    "members": [
      {
        "kind": "Method",
        "name": "dateRange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "startDateKey",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "endDateKey",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "getDate",
            "type": "(value: string) => Date",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "(FormGroup: any) => any"
      },
      {
        "kind": "Method",
        "name": "emailsMustMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "email",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "emailConfirmation",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "emailValidator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "control",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "ValidationErrors | null"
      },
      {
        "kind": "Method",
        "name": "mustBePositive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "control",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "ValidationErrors | null"
      },
      {
        "kind": "Method",
        "name": "noSpecialCharacters",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "control",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "ValidationErrors | null"
      },
      {
        "kind": "Method",
        "name": "passwordsMustMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "passwordConfirmation",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "passwordValidator",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "control",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "ValidationErrors | null"
      },
      {
        "kind": "Method",
        "name": "patternValidation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isValidFormat",
            "type": "(date: string) => boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ValidatorFn"
      },
      {
        "kind": "Method",
        "name": "starRatingEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "control",
            "type": "AbstractControl",
            "isOptional": false,
            "canonicalReference": "@angular/forms!AbstractControl:class",
            "shortType": "AbstractControl",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "ValidationErrors | null"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "DatePickerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "DatePickerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DatePickerService:class",
            "shortType": "DatePickerService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "change",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "control", "type": "FormControl" },
      {
        "kind": "Method",
        "name": "getDate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "max", "type": "string" },
      { "kind": "Property", "name": "min", "type": "string" },
      { "kind": "Property", "name": "pattern", "type": "string" },
      { "kind": "Property", "name": "placeholder", "type": "string" },
      { "kind": "Property", "name": "service", "type": "DatePickerService" },
      { "kind": "Property", "name": "update", "type": "EventEmitter<void>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "DatePickerModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "DatePickerService",
    "members": [
      {
        "kind": "Method",
        "name": "getDate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Date"
      },
      {
        "kind": "Method",
        "name": "isValidFormat",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "date",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "pattern",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "pattern", "type": "string" },
      { "kind": "Property", "name": "placeholder", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultCmsContentProviders",
    "type": "ValueProvider[]"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "DefaultComponentHandler",
    "members": [
      {
        "kind": "Method",
        "name": "getComponentFactory",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "component",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentMapping",
            "type": "CmsComponentMapping",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentMapping:interface",
            "shortType": "CmsComponentMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "launcher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentMapping",
            "type": "CmsComponentMapping",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentMapping:interface",
            "shortType": "CmsComponentMapping",
            "importPath": "@spartacus/core"
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "elementInjector",
            "type": "Injector",
            "isOptional": true,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "module",
            "type": "NgModuleRef<any>",
            "isOptional": true,
            "canonicalReference": "@angular/core!NgModuleRef:class",
            "shortType": "NgModuleRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<{\n        elementRef: ElementRef;\n        componentRef?: ComponentRef<any>;\n    }>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultKeyboardFocusConfig",
    "type": "KeyboardFocusConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultLayoutConfig",
    "type": "LayoutConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultOnNavigateConfig",
    "type": "OnNavigateConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultPaginationConfig",
    "type": "PaginationConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultPWAModuleConfig",
    "type": "PWAModuleConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultReplenishmentOrderCancellationLayoutConfig",
    "type": "LayoutConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultSkipLinkConfig",
    "type": "SkipLinkConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultTableConfig",
    "type": "TableConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "defaultViewConfig",
    "type": "ViewConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "DeferLoaderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "platformId",
            "type": "Object",
            "isOptional": false,
            "canonicalReference": "!Object:interface",
            "shortType": "Object",
            "importPath": ""
          },
          {
            "name": "config",
            "type": "LayoutConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LayoutConfig:class",
            "shortType": "LayoutConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "intersectionService",
            "type": "IntersectionService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!IntersectionService:class",
            "shortType": "IntersectionService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "LayoutConfig" },
      {
        "kind": "Property",
        "name": "globalLoadStrategy",
        "type": "DeferLoadingStrategy"
      },
      {
        "kind": "Property",
        "name": "intersectionService",
        "type": "IntersectionService"
      },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "IntersectionOptions",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!IntersectionOptions:interface",
            "shortType": "IntersectionOptions",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "DIALOG_TYPE",
    "members": [
      "DIALOG",
      "POPOVER",
      "POPOVER_CENTER",
      "POPOVER_CENTER_BACKDROP",
      "SIDEBAR_END",
      "SIDEBAR_START"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "Direction",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "default",
        "type": "DirectionMode"
      },
      { "kind": "PropertySignature", "name": "detect", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "ltrLanguages",
        "type": "string[]"
      },
      {
        "kind": "PropertySignature",
        "name": "rtlLanguages",
        "type": "string[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "DirectionConfig",
    "members": [
      { "kind": "Property", "name": "direction", "type": "Direction" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "DirectionMode",
    "members": ["LTR", "RTL"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "DirectionModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "DirectionService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "configInit",
            "type": "ConfigInitializerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ConfigInitializerService:class",
            "shortType": "ConfigInitializerService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "Direction" },
      {
        "kind": "Property",
        "name": "configInit",
        "type": "ConfigInitializerService"
      },
      {
        "kind": "Method",
        "name": "detect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getDirection",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "language",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "DirectionMode"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<any>"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDirection",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "el",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "direction",
            "type": "DirectionMode",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DirectionMode:enum",
            "shortType": "DirectionMode",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "startsDetecting", "type": "boolean" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ExportCsvFileService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fileDownloadService",
            "type": "FileDownloadService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FileDownloadService:class",
            "shortType": "FileDownloadService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "convert",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "objectsArray",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "separator",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "download",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "objectsArray",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "separator",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "fileOptions",
            "type": "ExportFileOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ExportFileOptions:interface",
            "shortType": "ExportFileOptions",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "fileDownloadService",
        "type": "FileDownloadService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ExportFileOptions",
    "members": [
      { "kind": "PropertySignature", "name": "extension", "type": "string" },
      { "kind": "PropertySignature", "name": "fileName", "type": "string" },
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "FacetCollapseState",
    "members": [
      { "kind": "PropertySignature", "name": "maxVisible", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "toggled",
        "type": "FacetGroupCollapsedState"
      },
      { "kind": "PropertySignature", "name": "topVisible", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FacetComponent",
    "members": [
      { "kind": "Property", "name": "_facet", "type": "Facet" },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facetService",
            "type": "FacetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FacetService:class",
            "shortType": "FacetService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "elementRef",
            "type": "ElementRef<HTMLElement>",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      { "kind": "Property", "name": "collapseIcon", "type": "ICON_TYPE" },
      {
        "kind": "Method",
        "name": "decreaseVisibleValues",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "elementRef",
        "type": "ElementRef<HTMLElement>"
      },
      { "kind": "Property", "name": "expandIcon", "type": "ICON_TYPE" },
      { "kind": "Property", "name": "facet", "type": "Facet" },
      { "kind": "Property", "name": "facetService", "type": "FacetService" },
      {
        "kind": "Method",
        "name": "getLinkParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "FacetValue",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FacetValue:interface",
            "shortType": "FacetValue",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        [key: string]: string;\n    }"
      },
      {
        "kind": "Method",
        "name": "increaseVisibleValues",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "isExpanded", "type": "boolean" },
      { "kind": "Property", "name": "isMultiSelect", "type": "boolean" },
      { "kind": "Property", "name": "keyboardFocus", "type": "FocusDirective" },
      {
        "kind": "Method",
        "name": "openLink",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "state$",
        "type": "Observable<FacetCollapseState>"
      },
      {
        "kind": "Method",
        "name": "toggleGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "values",
        "type": "QueryList<ElementRef<HTMLElement>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "FacetGroupCollapsedState",
    "members": ["COLLAPSED", "EXPANDED"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "FacetList",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "activeFacets",
        "type": "Breadcrumb[]"
      },
      { "kind": "PropertySignature", "name": "facets", "type": "Facet[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FacetListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facetService",
            "type": "FacetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FacetService:class",
            "shortType": "FacetService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "block",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": true,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "closeList", "type": "EventEmitter<any>" },
      {
        "kind": "Property",
        "name": "dialogFocusConfig",
        "type": "FocusConfig"
      },
      { "kind": "Property", "name": "elementRef", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "expandFacetGroup",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          },
          {
            "name": "ref",
            "type": "FacetComponent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FacetComponent:class",
            "shortType": "FacetComponent",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "facetList$",
        "type": "Observable<FacetList>"
      },
      { "kind": "Property", "name": "facetService", "type": "FacetService" },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "isCollapsed",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "isDialog", "type": "boolean" },
      {
        "kind": "Method",
        "name": "isExpanded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FacetListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FacetModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FacetService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productFacetService",
            "type": "ProductFacetService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductFacetService:class",
            "shortType": "ProductFacetService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "decreaseVisibleValues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "facetList$",
        "type": "Observable<FacetList>"
      },
      {
        "kind": "Property",
        "name": "facetState",
        "type": "Map<string, BehaviorSubject<FacetCollapseState>>"
      },
      {
        "kind": "Method",
        "name": "getLinkParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "{\n        [key: string]: string;\n    }"
      },
      {
        "kind": "Method",
        "name": "getState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<FacetCollapseState>"
      },
      {
        "kind": "Method",
        "name": "getStateSnapshot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FacetCollapseState"
      },
      {
        "kind": "Method",
        "name": "hasState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "increaseVisibleValues",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "initialize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "productFacetService",
        "type": "ProductFacetService"
      },
      {
        "kind": "Method",
        "name": "toggle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          },
          {
            "name": "isExpanded",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "facet",
            "type": "Facet",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Facet:interface",
            "shortType": "Facet",
            "importPath": "@spartacus/core"
          },
          {
            "name": "property",
            "type": "FacetCollapseState",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FacetCollapseState:interface",
            "shortType": "FacetCollapseState",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FileDownloadService",
    "members": [
      {
        "kind": "Method",
        "name": "download",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "fileName",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FileReaderService",
    "members": [
      {
        "kind": "Method",
        "name": "loadTextFile",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "file",
            "type": "File",
            "isOptional": false,
            "canonicalReference": "!File:interface",
            "shortType": "File",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string | ProgressEvent<FileReader>>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FilesFormValidators",
    "members": [
      {
        "kind": "Method",
        "name": "maxSize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "maxSize",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ValidatorFn"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FileUploadComponent",
    "members": [
      { "kind": "Property", "name": "accept", "type": "string | string[]" },
      {
        "kind": "Property",
        "name": "fileInput",
        "type": "ElementRef<HTMLInputElement>"
      },
      { "kind": "Property", "name": "multiple", "type": "boolean" },
      { "kind": "Property", "name": "onChangeCallback", "type": "Function" },
      { "kind": "Property", "name": "onTouchedCallback", "type": "Function" },
      {
        "kind": "Method",
        "name": "registerOnChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "callback",
            "type": "Function",
            "isOptional": false,
            "canonicalReference": "!Function:interface",
            "shortType": "Function",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "registerOnTouched",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "callback",
            "type": "Function",
            "isOptional": false,
            "canonicalReference": "!Function:interface",
            "shortType": "Function",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "selectedFiles",
        "type": "File[] | undefined"
      },
      {
        "kind": "Method",
        "name": "selectFile",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "$event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setDisabledState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "disabled",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "update",
        "type": "EventEmitter<FileList>"
      },
      {
        "kind": "Method",
        "name": "writeValue",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FileUploadModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "FocusConfig",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FocusDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "service",
            "type": "KeyboardFocusService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!KeyboardFocusService:class",
            "shortType": "KeyboardFocusService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "FocusConfig" },
      { "kind": "Property", "name": "defaultConfig", "type": "FocusConfig" },
      { "kind": "Property", "name": "elementRef", "type": "ElementRef" },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      { "kind": "Property", "name": "service", "type": "KeyboardFocusService" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "fontawesomeIconConfig",
    "type": "IconConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FooterNavigationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<CmsNavigationComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "service",
            "type": "NavigationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!NavigationService:class",
            "shortType": "NavigationService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CmsNavigationComponent>"
      },
      {
        "kind": "Property",
        "name": "node$",
        "type": "Observable<NavigationNode>"
      },
      { "kind": "Property", "name": "service", "type": "NavigationService" },
      {
        "kind": "Property",
        "name": "styleClass$",
        "type": "Observable<string>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FooterNavigationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FormErrorsComponent",
    "members": [
      { "kind": "Property", "name": "_control", "type": "FormControl" },
      { "kind": "Property", "name": "control", "type": "FormControl" },
      { "kind": "Property", "name": "dirty", "type": "boolean" },
      { "kind": "Property", "name": "errors$", "type": "Observable<string[]>" },
      {
        "kind": "Property",
        "name": "errorsDetails$",
        "type": "Observable<Array<[string, string]>>"
      },
      {
        "kind": "Method",
        "name": "getTranslationParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "errorDetails",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "object"
      },
      { "kind": "Property", "name": "invalid", "type": "boolean" },
      { "kind": "Property", "name": "prefix", "type": "string" },
      { "kind": "Property", "name": "touched", "type": "boolean" },
      {
        "kind": "Property",
        "name": "translationParams",
        "type": "{\n        [key: string]: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "FormErrorsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Namespace",
    "name": "FormUtils"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "deepUpdateValueAndValidity",
    "namespace": "FormUtils",
    "parameters": [
      {
        "name": "control",
        "type": "AbstractControl",
        "isOptional": false,
        "canonicalReference": "@angular/forms!AbstractControl:class",
        "shortType": "AbstractControl",
        "importPath": "@angular/forms"
      },
      {
        "name": "options",
        "type": "{\n        emitEvent?: boolean;\n    }",
        "isOptional": true,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "void"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "GenericLinkComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      { "kind": "Property", "name": "class", "type": "string" },
      { "kind": "Property", "name": "fragment", "type": "string" },
      { "kind": "Property", "name": "id", "type": "string" },
      {
        "kind": "Method",
        "name": "isExternalUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "MAILTO_PROTOCOL_REGEX", "type": "RegExp" },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "changes",
            "type": "SimpleChanges",
            "isOptional": false,
            "canonicalReference": "@angular/core!SimpleChanges:interface",
            "shortType": "SimpleChanges",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "queryParams", "type": "Params" },
      { "kind": "Property", "name": "rel", "type": "string" },
      { "kind": "Property", "name": "router", "type": "Router" },
      { "kind": "Property", "name": "routerUrl", "type": "any[]" },
      {
        "kind": "Property",
        "name": "service",
        "type": "GenericLinkComponentService"
      },
      { "kind": "Property", "name": "style", "type": "string" },
      { "kind": "Property", "name": "target", "type": "string | null" },
      { "kind": "Property", "name": "TEL_PROTOCOL_REGEX", "type": "RegExp" },
      { "kind": "Property", "name": "title", "type": "string" },
      { "kind": "Property", "name": "url", "type": "string | any[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "GenericLinkComponentService",
    "members": [
      { "kind": "Property", "name": "HTTP_PROTOCOL_REGEX", "type": "RegExp" },
      {
        "kind": "Method",
        "name": "isExternalUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string | any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "MAILTO_PROTOCOL_REGEX", "type": "RegExp" },
      { "kind": "Property", "name": "TEL_PROTOCOL_REGEX", "type": "RegExp" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "GenericLinkModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "GetOrderEntriesContext",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "getSuffixUrlMatcher",
    "parameters": [
      {
        "name": "{ marker, paramName, precedingParamName, }",
        "type": "{\n    marker: string;\n    paramName: string;\n    precedingParamName?: string;\n}",
        "isOptional": false,
        "canonicalReference": "",
        "shortType": "",
        "importPath": ""
      }
    ],
    "returnType": "{\n    (segments: UrlSegment[]): UrlMatchResult | null;\n    _suffixRouteConfig: {\n        marker: string;\n        paramName: string;\n        precedingParamName: string;\n    };\n}"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "GlobalMessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "GlobalMessageType",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageType:enum",
            "shortType": "GlobalMessageType",
            "importPath": "@spartacus/core"
          },
          {
            "name": "index",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "messages$",
        "type": "Observable<GlobalMessageEntities>"
      },
      {
        "kind": "Property",
        "name": "messageType",
        "type": "typeof GlobalMessageType"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "GlobalMessageComponentModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "HamburgerMenuComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isExpanded",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "toggle",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "HamburgerMenuModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "HamburgerMenuService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isExpanded",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "toggle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "forceCollapse",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "HighlightPipe",
    "members": [
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "text",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "match",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "HomePageEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "HomePageEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildHomePageEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<HomePageEvent>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "HomePageEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_homePageEventBuilder",
            "type": "HomePageEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!HomePageEventBuilder:class",
            "shortType": "HomePageEventBuilder",
            "importPath": "@spartacus/storefront"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "ICON_TYPE",
    "members": [
      "ACTIVE",
      "AMEX",
      "CARET_DOWN",
      "CARET_LEFT",
      "CARET_RIGHT",
      "CARET_UP",
      "CART",
      "CIRCLE",
      "CLOCK",
      "CLOSE",
      "COLLAPSE",
      "CREDIT_CARD",
      "DINERS_CLUB",
      "EMPTY_HEART",
      "ERROR",
      "EXPAND",
      "EXPAND_ARROWS",
      "FILTER",
      "GRID",
      "HEART",
      "INFO",
      "LINK_OUT",
      "LIST",
      "MASTER_CARD",
      "OFF",
      "ON",
      "PENCIL",
      "RESET",
      "SEARCH",
      "SORT",
      "SORT_DOWN",
      "STAR",
      "SUCCESS",
      "TRASH",
      "VISA",
      "WARNING"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "IconComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "iconLoader",
            "type": "IconLoaderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!IconLoaderService:class",
            "shortType": "IconLoaderService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "elementRef",
            "type": "ElementRef<HTMLElement>",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addStyleClasses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "ICON_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!~ICON_TYPE:type",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "elementRef",
        "type": "ElementRef<HTMLElement>"
      },
      { "kind": "Property", "name": "flipAtLtr", "type": "boolean" },
      { "kind": "Property", "name": "flipAtRtl", "type": "boolean" },
      {
        "kind": "Method",
        "name": "flipIcon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "ICON_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!~ICON_TYPE:type",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "host", "type": "HTMLElement" },
      { "kind": "Property", "name": "icon", "type": "SafeHtml" },
      { "kind": "Property", "name": "iconLoader", "type": "IconLoaderService" },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      {
        "kind": "Method",
        "name": "setIcon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "ICON_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!~ICON_TYPE:type",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "styleClasses", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "IconConfig",
    "members": [{ "kind": "Property", "name": "icon", "type": "IconOptions" }]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "IconConfigResource",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "type",
        "type": "IconResourceType | string"
      },
      {
        "kind": "PropertySignature",
        "name": "types",
        "type": "(ICON_TYPE | string)[]"
      },
      { "kind": "PropertySignature", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "IconLoaderService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "iconConfig",
            "type": "IconConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!IconConfig:class",
            "shortType": "IconConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "sanitizer",
            "type": "DomSanitizer",
            "isOptional": false,
            "canonicalReference": "@angular/platform-browser!DomSanitizer:class",
            "shortType": "DomSanitizer",
            "importPath": "@angular/platform-browser"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addLinkResource",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "iconType",
            "type": "ICON_TYPE | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ICON_TYPE:enum",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getFlipDirection",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "ICON_TYPE | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ICON_TYPE:enum",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "DirectionMode"
      },
      {
        "kind": "Method",
        "name": "getHtml",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "ICON_TYPE | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ICON_TYPE:enum",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "SafeHtml"
      },
      {
        "kind": "Method",
        "name": "getStyleClasses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "iconType",
            "type": "ICON_TYPE | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ICON_TYPE:enum",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getSymbol",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "iconType",
            "type": "ICON_TYPE | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ICON_TYPE:enum",
            "shortType": "ICON_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "iconConfig", "type": "IconConfig" },
      { "kind": "Property", "name": "sanitizer", "type": "DomSanitizer" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "IconModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "IconOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "flipDirection",
        "type": "{\n        [ICON_TYPE: string]: DirectionMode;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "resources",
        "type": "IconConfigResource[]"
      },
      {
        "kind": "PropertySignature",
        "name": "symbols",
        "type": "{\n        [ICON_TYPE: string]: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "IconResourceType",
    "members": ["LINK", "SVG", "TEXT"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "IconTestingModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "ImageLoadingStrategy",
    "members": ["EAGER", "LAZY"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ImportCsvFileService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "fileReaderService",
            "type": "FileReaderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FileReaderService:class",
            "shortType": "FileReaderService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "fileReaderService",
        "type": "FileReaderService"
      },
      {
        "kind": "Method",
        "name": "loadFile",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "file",
            "type": "File",
            "isOptional": false,
            "canonicalReference": "!File:interface",
            "shortType": "File",
            "importPath": ""
          },
          {
            "name": "separator",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string[][]>"
      },
      {
        "kind": "Method",
        "name": "parse",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "csvString",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "separator",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "ignoreHeader",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string[][]"
      },
      {
        "kind": "Method",
        "name": "validateEmpty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "errors",
            "type": "ValidationErrors",
            "isOptional": false,
            "canonicalReference": "@angular/forms!ValidationErrors:type",
            "shortType": "ValidationErrors",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "validateFile",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "file",
            "type": "File",
            "isOptional": false,
            "canonicalReference": "!File:interface",
            "shortType": "File",
            "importPath": ""
          },
          {
            "name": "{ separator, isDataParsable, maxEntries, }",
            "type": "{\n        separator: string;\n        isDataParsable?: (data: string[][]) => boolean;\n        maxEntries?: number;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<CsvFileValidationErrors | null>"
      },
      {
        "kind": "Method",
        "name": "validateNotParsable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "errors",
            "type": "ValidationErrors",
            "isOptional": false,
            "canonicalReference": "@angular/forms!ValidationErrors:type",
            "shortType": "ValidationErrors",
            "importPath": "@angular/forms"
          },
          {
            "name": "isDataParsable",
            "type": "(data: string[][]) => boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "validateTooManyEntries",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "string[][]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "errors",
            "type": "ValidationErrors",
            "isOptional": false,
            "canonicalReference": "@angular/forms!ValidationErrors:type",
            "shortType": "ValidationErrors",
            "importPath": "@angular/forms"
          },
          {
            "name": "maxEntries",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "initSeoService",
    "parameters": [
      {
        "name": "injector",
        "type": "Injector",
        "isOptional": false,
        "canonicalReference": "@angular/core!Injector:class",
        "shortType": "Injector",
        "importPath": "@angular/core"
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "InlineRenderStrategy",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          },
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentFactoryResolver:class",
            "shortType": "ComponentFactoryResolver",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentFactoryResolver",
        "type": "ComponentFactoryResolver"
      },
      { "kind": "Property", "name": "document", "type": "any" },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchInlineDialog",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchInlineDialog:interface",
            "shortType": "LaunchInlineDialog",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchInlineDialog",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchInlineDialog:interface",
            "shortType": "LaunchInlineDialog",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<ComponentRef<any>> | void"
      },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "InlineRootRenderStrategy",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          },
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentFactoryResolver:class",
            "shortType": "ComponentFactoryResolver",
            "importPath": "@angular/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentFactoryResolver",
        "type": "ComponentFactoryResolver"
      },
      { "kind": "Property", "name": "document", "type": "any" },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchInlineRootDialog",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchInlineRootDialog:interface",
            "shortType": "LaunchInlineRootDialog",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "hostComponent",
        "type": "ComponentRef<any>"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchInlineRootDialog",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchInlineRootDialog:interface",
            "shortType": "LaunchInlineRootDialog",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<ComponentRef<any>> | void"
      },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "InnerComponentsHostDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "CmsComponentData<CmsComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "cmsComponentsService",
            "type": "CmsComponentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
            "shortType": "CmsComponentsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "dynamicAttributeService",
            "type": "DynamicAttributeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DynamicAttributeService:class",
            "shortType": "DynamicAttributeService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "componentHandler",
            "type": "ComponentHandlerService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ComponentHandlerService:class",
            "shortType": "ComponentHandlerService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cmsInjector",
            "type": "CmsInjectorService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsInjectorService:class",
            "shortType": "CmsInjectorService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clearComponents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "cmsComponentsService",
        "type": "CmsComponentsService"
      },
      {
        "kind": "Property",
        "name": "cmsInjector",
        "type": "CmsInjectorService"
      },
      {
        "kind": "Property",
        "name": "componentHandler",
        "type": "ComponentHandlerService"
      },
      { "kind": "Property", "name": "componentWrappers", "type": "any[]" },
      {
        "kind": "Property",
        "name": "data",
        "type": "CmsComponentData<CmsComponent>"
      },
      {
        "kind": "Property",
        "name": "dynamicAttributeService",
        "type": "DynamicAttributeService"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      {
        "kind": "Property",
        "name": "innerComponents$",
        "type": "import(\"rxjs\").Observable<string[]>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "renderComponent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "renderComponents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "components",
            "type": "string[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "IntersectionOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "deferLoading",
        "type": "DeferLoadingStrategy"
      },
      { "kind": "PropertySignature", "name": "rootMargin", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "threshold",
        "type": "number | number[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "IntersectionService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LayoutConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LayoutConfig:class",
            "shortType": "LayoutConfig",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "LayoutConfig" },
      {
        "kind": "Method",
        "name": "isIntersected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "IntersectionOptions",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!IntersectionOptions:interface",
            "shortType": "IntersectionOptions",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ItemCounterComponent",
    "members": [
      { "kind": "Property", "name": "allowZero", "type": "boolean" },
      { "kind": "Property", "name": "control", "type": "FormControl" },
      {
        "kind": "Method",
        "name": "decrement",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "increment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "max", "type": "number" },
      { "kind": "Property", "name": "min", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "readonly", "type": "boolean" },
      { "kind": "Property", "name": "step", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ItemCounterModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "JSONLD_PRODUCT_BUILDER",
    "type": "InjectionToken<unknown>"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "JsonLdBaseProductBuilder",
    "members": [
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getProductBrand",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        brand?: string;\n    }"
      },
      {
        "kind": "Method",
        "name": "getProductImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "{\n        image?: string;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "JsonLdBuilder",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "JsonLdBuilderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "JsonLdDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "jsonLdScriptFactory",
            "type": "JsonLdScriptFactory",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!JsonLdScriptFactory:class",
            "shortType": "JsonLdScriptFactory",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "sanitizer",
            "type": "DomSanitizer",
            "isOptional": false,
            "canonicalReference": "@angular/platform-browser!DomSanitizer:class",
            "shortType": "DomSanitizer",
            "importPath": "@angular/platform-browser"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "generateJsonLdScript",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "schema",
            "type": "string | {}",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "SafeHtml"
      },
      { "kind": "Property", "name": "jsonLD", "type": "SafeHtml" },
      {
        "kind": "Property",
        "name": "jsonLdScriptFactory",
        "type": "JsonLdScriptFactory"
      },
      { "kind": "Property", "name": "sanitizer", "type": "DomSanitizer" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "JsonLdProductOfferBuilder",
    "members": [
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "JsonLdProductReviewBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reviewService",
            "type": "ProductReviewService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductReviewService:class",
            "shortType": "ProductReviewService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "SeoConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SeoConfig:class",
            "shortType": "SeoConfig",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "buildAggregatedReviews",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          },
          {
            "name": "reviews",
            "type": "Review[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Review:interface",
            "shortType": "Review",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "buildReviews",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "review",
            "type": "Review",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Review:interface",
            "shortType": "Review",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "any"
      },
      { "kind": "Property", "name": "config", "type": "SeoConfig" },
      {
        "kind": "Property",
        "name": "reviewService",
        "type": "ProductReviewService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "JsonLdScriptFactory",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "platformId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          },
          {
            "name": "sanitizer",
            "type": "DomSanitizer",
            "isOptional": false,
            "canonicalReference": "@angular/platform-browser!DomSanitizer:class",
            "shortType": "DomSanitizer",
            "importPath": "@angular/platform-browser"
          },
          {
            "name": "config",
            "type": "SeoConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SeoConfig:class",
            "shortType": "SeoConfig",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "schema",
            "type": "{}[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "SeoConfig" },
      {
        "kind": "Method",
        "name": "getJsonLdScriptElement",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "HTMLScriptElement"
      },
      {
        "kind": "Method",
        "name": "isJsonLdRequired",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "platformId", "type": "string" },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      },
      {
        "kind": "Method",
        "name": "sanitize",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "schema",
            "type": "{}",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "sanitizer", "type": "DomSanitizer" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "KeyboardFocusConfig",
    "members": [
      {
        "kind": "Property",
        "name": "keyboardFocus",
        "type": "{\n        enableResetFocusOnNavigate?: boolean | BREAKPOINT[];\n        enableResetViewOnNavigate?: boolean | BREAKPOINT[];\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "keyboardFocusFactory",
    "parameters": [
      {
        "name": "onNavigateFocusService",
        "type": "OnNavigateFocusService",
        "isOptional": false,
        "canonicalReference": "@spartacus/storefront!OnNavigateFocusService:class",
        "shortType": "OnNavigateFocusService",
        "importPath": ""
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "KeyboardFocusModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "KeyboardFocusService",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "KeyboardFocusTestingModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LanguageCurrencyComponent",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "LAUNCH_CALLER",
    "members": [
      "ANONYMOUS_CONSENT",
      "ASM",
      "PLACE_ORDER_SPINNER",
      "REPLENISHMENT_ORDER",
      "SKIP_LINKS"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "LaunchConfig",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "LaunchOptions"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "LaunchDialog",
    "members": [
      { "kind": "PropertySignature", "name": "component", "type": "any" },
      {
        "kind": "PropertySignature",
        "name": "dialogType",
        "type": "DIALOG_TYPE"
      },
      { "kind": "PropertySignature", "name": "multi", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LaunchDialogModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<LaunchDialogModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LaunchDialogService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "renderStrategies",
            "type": "LaunchRenderStrategy[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchRenderStrategy:class",
            "shortType": "LaunchRenderStrategy",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "layoutConfig",
            "type": "LayoutConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LayoutConfig:class",
            "shortType": "LayoutConfig",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "closeDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "data$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "dialogClose",
        "type": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "findConfiguration",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "LaunchOptions | undefined"
      },
      {
        "kind": "Method",
        "name": "getStrategy",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchOptions:type",
            "shortType": "LaunchOptions",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "LaunchRenderStrategy"
      },
      {
        "kind": "Method",
        "name": "launch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": true,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "data",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void | Observable<ComponentRef<any> | undefined>"
      },
      { "kind": "Property", "name": "layoutConfig", "type": "LayoutConfig" },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "openElement",
            "type": "ElementRef",
            "isOptional": true,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": true,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "data",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<any> | undefined"
      },
      {
        "kind": "Method",
        "name": "openDialogAndSubscribe",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "openElement",
            "type": "ElementRef",
            "isOptional": true,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "data",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "renderStrategies",
        "type": "LaunchRenderStrategy[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "LaunchInlineDialog",
    "members": [
      { "kind": "PropertySignature", "name": "inline", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "LaunchInlineRootDialog",
    "members": [
      { "kind": "PropertySignature", "name": "inlineRoot", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "LaunchOptions",
    "members": [
      "LaunchOutletDialog",
      " | ",
      "LaunchInlineDialog",
      " | ",
      "LaunchRoute",
      " | ",
      "LaunchInlineRootDialog"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "LaunchOutletDialog",
    "members": [
      { "kind": "PropertySignature", "name": "outlet", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "position",
        "type": "OutletPosition"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LaunchRenderStrategy",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "applyClasses",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "ComponentRef<any>",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentRef:class",
            "shortType": "ComponentRef",
            "importPath": "@angular/core"
          },
          {
            "name": "dialogType",
            "type": "DIALOG_TYPE",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DIALOG_TYPE:enum",
            "shortType": "DIALOG_TYPE",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "dialogClasses", "type": "string[]" },
      { "kind": "Property", "name": "document", "type": "any" },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchOptions:type",
            "shortType": "LaunchOptions",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "popoverCenterBackdropClasses",
        "type": "string[]"
      },
      {
        "kind": "Property",
        "name": "popoverCenterClasses",
        "type": "string[]"
      },
      { "kind": "Property", "name": "popoverClasses", "type": "string[]" },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "config",
            "type": "LaunchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchOptions:type",
            "shortType": "LaunchOptions",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchOptions:type",
            "shortType": "LaunchOptions",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": true,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<ComponentRef<any> | undefined> | void"
      },
      {
        "kind": "Property",
        "name": "renderedCallers",
        "type": "Array<{\n        caller: LAUNCH_CALLER | string;\n        element?: any;\n        component?: ComponentRef<any>;\n    }>"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      },
      {
        "kind": "Method",
        "name": "shouldRender",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "config",
            "type": "LaunchDialog",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchDialog:interface",
            "shortType": "LaunchDialog",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "sidebarEndClasses", "type": "string[]" },
      { "kind": "Property", "name": "sidebarStartClasses", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "LaunchRoute",
    "members": [
      { "kind": "PropertySignature", "name": "cxRoute", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "params",
        "type": "{\n        [param: string]: any;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "LayoutBreakPoints",
    "members": [
      "{\n    [t in ",
      "BREAKPOINT",
      "]?: number | ",
      "BreakPoint",
      ";\n}"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LayoutConfig",
    "members": [
      {
        "kind": "Property",
        "name": "breakpoints",
        "type": "LayoutBreakPoints"
      },
      {
        "kind": "Property",
        "name": "deferredLoading",
        "type": "{\n        strategy?: DeferLoadingStrategy;\n        intersectionMargin?: string;\n    }"
      },
      { "kind": "Property", "name": "launch", "type": "LaunchConfig" },
      { "kind": "Property", "name": "layoutSlots", "type": "LayoutSlotConfig" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "layoutConfig",
    "type": "LayoutConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LayoutModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "LayoutSections",
    "members": ["'header' | 'footer' | 'LandingPage2Template' | string"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "LayoutSlotConfig",
    "members": [
      "{\n    [section in ",
      "LayoutSections",
      "]: ",
      "SlotConfig",
      " | ",
      "SlotGroup",
      " | ",
      "LayoutSlotConfig",
      ";\n}"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LazyComponentHandler",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "defaultHandler",
            "type": "DefaultComponentHandler",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DefaultComponentHandler:class",
            "shortType": "DefaultComponentHandler",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "defaultHandler",
        "type": "DefaultComponentHandler"
      },
      {
        "kind": "Method",
        "name": "getPriority",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Priority"
      },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentMapping",
            "type": "CmsComponentMapping",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentMapping:interface",
            "shortType": "CmsComponentMapping",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "launcher",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentMapping",
            "type": "CmsComponentMapping",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentMapping:interface",
            "shortType": "CmsComponentMapping",
            "importPath": "@spartacus/core"
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "elementInjector",
            "type": "Injector",
            "isOptional": true,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          },
          {
            "name": "module",
            "type": "NgModuleRef<any>",
            "isOptional": true,
            "canonicalReference": "@angular/core!NgModuleRef:class",
            "shortType": "NgModuleRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "Observable<{\n        elementRef: ElementRef;\n        componentRef?: ComponentRef<any>;\n    }>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LinkComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "CmsComponentData<CmsLinkComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsLinkComponent>"
      },
      {
        "kind": "Property",
        "name": "data$",
        "type": "Observable<CmsLinkComponent>"
      },
      {
        "kind": "Method",
        "name": "getTarget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data",
            "type": "CmsLinkComponent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsLinkComponent:interface",
            "shortType": "CmsLinkComponent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "string | null"
      },
      { "kind": "Property", "name": "styleClasses", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LinkModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ListNavigationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LoginGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authConfigService",
            "type": "AuthConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AuthConfigService:class",
            "shortType": "AuthConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cmsPageGuard",
            "type": "CmsPageGuard",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsPageGuard:class",
            "shortType": "CmsPageGuard",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authConfigService",
        "type": "AuthConfigService"
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "route",
            "type": "ActivatedRouteSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          },
          {
            "name": "state",
            "type": "RouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterStateSnapshot:class",
            "shortType": "RouterStateSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "cmsPageGuard", "type": "CmsPageGuard" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LoginRouteModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LogoutGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "auth",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cms",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "protectedRoutes",
            "type": "ProtectedRoutesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProtectedRoutesService:class",
            "shortType": "ProtectedRoutesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "auth", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      { "kind": "Property", "name": "cms", "type": "CmsService" },
      {
        "kind": "Method",
        "name": "getRedirectUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "UrlTree"
      },
      {
        "kind": "Method",
        "name": "logout",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Promise<any>"
      },
      {
        "kind": "Property",
        "name": "protectedRoutes",
        "type": "ProtectedRoutesService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "LogoutModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "Media",
    "members": [
      { "kind": "PropertySignature", "name": "alt", "type": "string" },
      { "kind": "PropertySignature", "name": "role", "type": "string" },
      { "kind": "PropertySignature", "name": "src", "type": "string" },
      { "kind": "PropertySignature", "name": "srcset", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MediaComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mediaService",
            "type": "MediaService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!MediaService:class",
            "shortType": "MediaService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "alt", "type": "string" },
      {
        "kind": "Property",
        "name": "container",
        "type": "MediaContainer | Image | ImageGroup | ImageGroup[] | undefined"
      },
      {
        "kind": "Method",
        "name": "create",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "errorHandler",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "format", "type": "string" },
      {
        "kind": "Method",
        "name": "handleMissing",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "isInitialized", "type": "boolean" },
      { "kind": "Property", "name": "isLoading", "type": "boolean" },
      { "kind": "Property", "name": "isMissing", "type": "boolean" },
      { "kind": "Property", "name": "loaded", "type": "EventEmitter<Boolean>" },
      {
        "kind": "Method",
        "name": "loadHandler",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "loading",
        "type": "ImageLoadingStrategy | null"
      },
      {
        "kind": "Property",
        "name": "loadingStrategy",
        "type": "string | ImageLoadingStrategy | null"
      },
      { "kind": "Property", "name": "media", "type": "Media" },
      { "kind": "Property", "name": "mediaService", "type": "MediaService" },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "role", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MediaConfig",
    "members": [
      {
        "kind": "Property",
        "name": "imageLoadingStrategy",
        "type": "ImageLoadingStrategy"
      },
      {
        "kind": "Property",
        "name": "mediaFormats",
        "type": "{\n        [format: string]: MediaFormatSize;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "mediaConfig",
    "type": "MediaConfig"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "MediaContainer",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "format",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Image"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "MediaFormatSize",
    "members": [
      { "kind": "PropertySignature", "name": "width", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MediaModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<MediaModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MediaService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "Config",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Config:class",
            "shortType": "Config",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "Config" },
      {
        "kind": "Method",
        "name": "getBaseUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getMedia",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mediaContainer",
            "type": "MediaContainer | Image",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!MediaContainer:interface",
            "shortType": "MediaContainer",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "format",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "alt",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "role",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Media | undefined"
      },
      {
        "kind": "Property",
        "name": "loadingStrategy",
        "type": "ImageLoadingStrategy"
      },
      {
        "kind": "Method",
        "name": "resolveAbsoluteUrl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "resolveBestFormat",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "media",
            "type": "MediaContainer | Image",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!MediaContainer:interface",
            "shortType": "MediaContainer",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "resolveFormat",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mediaContainer",
            "type": "MediaContainer",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!MediaContainer:interface",
            "shortType": "MediaContainer",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "format",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "resolveMedia",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "media",
            "type": "MediaContainer",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!MediaContainer:interface",
            "shortType": "MediaContainer",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "format",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Image"
      },
      {
        "kind": "Method",
        "name": "resolveSrcSet",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "media",
            "type": "MediaContainer | Image",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!MediaContainer:interface",
            "shortType": "MediaContainer",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "maxFormat",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Property",
        "name": "reversedFormats",
        "type": "{\n        code: string;\n        size: MediaFormatSize;\n    }[]"
      },
      {
        "kind": "Property",
        "name": "sortedFormats",
        "type": "{\n        code: string;\n        size: MediaFormatSize;\n    }[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MessageComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "accordionText", "type": "string" },
      { "kind": "Property", "name": "actionButtonText", "type": "string" },
      {
        "kind": "Property",
        "name": "buttonAction",
        "type": "EventEmitter<void>"
      },
      {
        "kind": "Property",
        "name": "closeMessage",
        "type": "EventEmitter<void>"
      },
      {
        "kind": "Property",
        "name": "getCssClassesForMessage",
        "type": "Record<string, boolean>"
      },
      { "kind": "Property", "name": "getIconType", "type": "string" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isVisibleCloseButton", "type": "boolean" },
      { "kind": "Property", "name": "showBody", "type": "boolean" },
      { "kind": "Property", "name": "text", "type": "string" },
      { "kind": "Property", "name": "type", "type": "GlobalMessageType" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MessageComponentModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MiniCartComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeCartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeCartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "quantity$", "type": "Observable<number>" },
      { "kind": "Property", "name": "total$", "type": "Observable<string>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MiniCartModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MockIconComponent",
    "members": [
      { "kind": "Property", "name": "cxIcon", "type": "any" },
      { "kind": "Property", "name": "type", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MockIconLoaderService",
    "members": [
      {
        "kind": "Method",
        "name": "addLinkResource",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addStyleClasses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getHtml",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getStyleClasses",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MockKeyboardFocusDirective",
    "members": [{ "kind": "Property", "name": "config", "type": "FocusConfig" }]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ModalDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "ModalDirectiveService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalDirectiveService:class",
            "shortType": "ModalDirectiveService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "activeModal",
            "type": "NgbActiveModal",
            "isOptional": false,
            "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
            "shortType": "NgbActiveModal",
            "importPath": "@ng-bootstrap/ng-bootstrap"
          },
          {
            "name": "routerLink",
            "type": "RouterLink",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterLink:class",
            "shortType": "RouterLink",
            "importPath": "@angular/router"
          },
          {
            "name": "routerLinkWithHref",
            "type": "RouterLinkWithHref",
            "isOptional": false,
            "canonicalReference": "@angular/router!RouterLinkWithHref:class",
            "shortType": "RouterLinkWithHref",
            "importPath": "@angular/router"
          }
        ]
      },
      { "kind": "Property", "name": "activeModal", "type": "NgbActiveModal" },
      {
        "kind": "Property",
        "name": "cxModal",
        "type": "ModalDirectiveOptions['type']"
      },
      {
        "kind": "Property",
        "name": "cxModalReason",
        "type": "ModalDirectiveOptions['reason']"
      },
      {
        "kind": "Method",
        "name": "getUrl",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "onClick",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "options",
        "type": "ModalDirectiveOptions"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      { "kind": "Property", "name": "routerLink", "type": "RouterLink" },
      {
        "kind": "Property",
        "name": "routerLinkWithHref",
        "type": "RouterLinkWithHref"
      },
      { "kind": "Property", "name": "service", "type": "ModalDirectiveService" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ModalDirectiveOptions",
    "members": [
      { "kind": "PropertySignature", "name": "reason", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "type",
        "type": "'dismiss' | 'close'"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ModalDirectiveService",
    "members": [
      {
        "kind": "Method",
        "name": "onClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "options",
            "type": "ModalDirectiveOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalDirectiveOptions:interface",
            "shortType": "ModalDirectiveOptions",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "activeModal",
            "type": "NgbActiveModal",
            "isOptional": false,
            "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
            "shortType": "NgbActiveModal",
            "importPath": "@ng-bootstrap/ng-bootstrap"
          },
          {
            "name": "url",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ModalModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ModalOptions",
    "members": [{ "kind": "PropertySignature", "name": "temp", "type": "any" }]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ModalRef",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ModalService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ngbModalService",
            "type": "NgbModal",
            "isOptional": false,
            "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbModal:class",
            "shortType": "NgbModal",
            "importPath": "@ng-bootstrap/ng-bootstrap"
          },
          {
            "name": "applicationRef",
            "type": "ApplicationRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ApplicationRef:class",
            "shortType": "ApplicationRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "applicationRef",
        "type": "ApplicationRef"
      },
      {
        "kind": "Method",
        "name": "closeActiveModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dismissActiveModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getActiveModal",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModalRef"
      },
      {
        "kind": "Method",
        "name": "handleModalRemoveEvents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modal",
            "type": "ModalRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalRef:class",
            "shortType": "ModalRef",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "content",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "ModalOptions",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!ModalOptions:interface",
            "shortType": "ModalOptions",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "ModalRef"
      },
      { "kind": "Property", "name": "rootComponent", "type": "any" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MyCouponsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "couponService",
            "type": "CustomerCouponService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CustomerCouponService:class",
            "shortType": "CustomerCouponService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "myCouponsComponentService",
            "type": "MyCouponsComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!MyCouponsComponentService:class",
            "shortType": "MyCouponsComponentService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "couponResult$",
        "type": "Observable<CustomerCouponSearchResult>"
      },
      {
        "kind": "Property",
        "name": "couponService",
        "type": "CustomerCouponService"
      },
      {
        "kind": "Property",
        "name": "couponsLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "couponSubscriptionLoading$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "myCouponsComponentService",
        "type": "MyCouponsComponentService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "notificationChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ couponId, notification, }",
            "type": "{\n        couponId: string;\n        notification: boolean;\n    }",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "pagination", "type": "PaginationModel" },
      { "kind": "Property", "name": "sort", "type": "string" },
      {
        "kind": "Method",
        "name": "sortChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sort",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "sortLabels",
        "type": "Observable<{\n        byStartDateAsc: string;\n        byStartDateDesc: string;\n        byEndDateAsc: string;\n        byEndDateDesc: string;\n    }>"
      },
      {
        "kind": "Property",
        "name": "sortOptions",
        "type": "{\n        code: string;\n        selected: boolean;\n    }[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MyCouponsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MyInterestsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productInterestService",
            "type": "UserInterestsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserInterestsService:class",
            "shortType": "UserInterestsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "getInterestsloading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "interests$",
        "type": "Observable<ProductInterestSearchResultUI>"
      },
      {
        "kind": "Property",
        "name": "isRemoveDisabled$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "pagination", "type": "PaginationModel" },
      {
        "kind": "Method",
        "name": "removeInterest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "relation",
            "type": "ProductInterestEntryRelation & {\n        product$?: Observable<Product>;\n    }",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductInterestEntryRelation:interface",
            "shortType": "ProductInterestEntryRelation",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "sort", "type": "string" },
      {
        "kind": "Method",
        "name": "sortChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sort",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "sortLabels",
        "type": "Observable<{\n        byNameAsc: string;\n        byNameDesc: string;\n    }>"
      },
      {
        "kind": "Property",
        "name": "sortOptions",
        "type": "{\n        code: string;\n        selected: boolean;\n    }[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "MyInterestsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NavigationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<CmsNavigationComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "service",
            "type": "NavigationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!NavigationService:class",
            "shortType": "NavigationService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CmsNavigationComponent>"
      },
      {
        "kind": "Property",
        "name": "node$",
        "type": "Observable<NavigationNode>"
      },
      { "kind": "Property", "name": "service", "type": "NavigationService" },
      {
        "kind": "Property",
        "name": "styleClass$",
        "type": "Observable<string>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NavigationEvent",
    "members": [
      { "kind": "Property", "name": "context", "type": "PageContext" },
      { "kind": "Property", "name": "params", "type": "Params" },
      { "kind": "Property", "name": "semanticRoute", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" },
      { "kind": "Property", "name": "url", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NavigationEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "actions",
            "type": "ActionsSubject",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!ActionsSubject:class",
            "shortType": "ActionsSubject",
            "importPath": "@ngrx/store"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "actions", "type": "ActionsSubject" },
      {
        "kind": "Method",
        "name": "buildNavigationEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<NavigationEvent>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NavigationEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_navigationEventBuilder",
            "type": "NavigationEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!NavigationEventBuilder:class",
            "shortType": "NavigationEventBuilder",
            "importPath": "@spartacus/storefront"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NavigationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "NavigationNode",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "children",
        "type": "Array<NavigationNode>"
      },
      {
        "kind": "PropertySignature",
        "name": "styleAttributes",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "styleClasses", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "target",
        "type": "string | boolean"
      },
      { "kind": "PropertySignature", "name": "title", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "url",
        "type": "string | string[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NavigationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      {
        "kind": "Method",
        "name": "createNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data$",
            "type": "Observable<CmsNavigationComponent>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<NavigationNode>"
      },
      {
        "kind": "Method",
        "name": "getLink",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string | string[]"
      },
      {
        "kind": "Method",
        "name": "getNavigationNode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "data$",
            "type": "Observable<CmsNavigationComponent>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<NavigationNode>"
      },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NavigationUIComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "elemRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "flyout", "type": "boolean" },
      {
        "kind": "Method",
        "name": "focusAfterPreviousClicked",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "Document"
      },
      {
        "kind": "Method",
        "name": "getColumnCount",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "length",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getTotalDepth",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "node",
            "type": "NavigationNode",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!NavigationNode:interface",
            "shortType": "NavigationNode",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "depth",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Property",
        "name": "hamburgerMenuService",
        "type": "HamburgerMenuService"
      },
      { "kind": "Property", "name": "iconType", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "isOpen", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "node", "type": "NavigationNode" },
      {
        "kind": "Method",
        "name": "onMouseEnter",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onResize",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "reinitalizeMenu",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "resetMenuOnClose", "type": "boolean" },
      {
        "kind": "Method",
        "name": "resetOnMenuCollapse",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleOpen",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "wrapAfter", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NotificationPreferenceComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "notificationPreferenceService",
            "type": "UserNotificationPreferenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserNotificationPreferenceService:class",
            "shortType": "UserNotificationPreferenceService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "preferences",
        "type": "NotificationPreference[]"
      },
      {
        "kind": "Property",
        "name": "preferences$",
        "type": "Observable<NotificationPreference[]>"
      },
      {
        "kind": "Method",
        "name": "updatePreference",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "preference",
            "type": "NotificationPreference",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!NotificationPreference:interface",
            "shortType": "NotificationPreference",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "NotificationPreferenceModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OnNavigateConfig",
    "members": [
      {
        "kind": "Property",
        "name": "enableResetViewOnNavigate",
        "type": "{\n        active?: boolean;\n        ignoreQueryString?: boolean;\n        ignoreRoutes?: string[];\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "onNavigateFactory",
    "parameters": [
      {
        "name": "onNavigateService",
        "type": "OnNavigateService",
        "isOptional": false,
        "canonicalReference": "@spartacus/storefront!OnNavigateService:class",
        "shortType": "OnNavigateService",
        "importPath": "@spartacus/storefront"
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OnNavigateService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "OnNavigateConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OnNavigateConfig:class",
            "shortType": "OnNavigateConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "viewportScroller",
            "type": "ViewportScroller",
            "isOptional": false,
            "canonicalReference": "@angular/common!ViewportScroller:class",
            "shortType": "ViewportScroller",
            "importPath": "@angular/common"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "OnNavigateConfig" },
      {
        "kind": "Property",
        "name": "hostComponent",
        "type": "ComponentRef<any>"
      },
      {
        "kind": "Method",
        "name": "initializeWithConfig",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Method",
        "name": "setResetViewOnNavigate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "enable",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "viewportScroller",
        "type": "ViewportScroller"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "ORDER_ENTRIES_CONTEXT",
    "type": "unique symbol"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderAmendService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "getAmendedEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getAmendedPrice",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Price"
      },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Method",
        "name": "getForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<FormGroup>"
      },
      {
        "kind": "Method",
        "name": "getFormControl",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          },
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "FormControl"
      },
      {
        "kind": "Method",
        "name": "getMaxAmendQuantity",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "entry",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getOrder",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Method",
        "name": "isCancellation",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderCancellationGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderCancellationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderCancellationService:class",
            "shortType": "OrderCancellationService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderCancellationService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderCancellationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderCancellationService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userOrderService",
        "type": "UserOrderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderConsignedEntriesComponent",
    "members": [
      { "kind": "Property", "name": "consignments", "type": "Consignment[]" },
      {
        "kind": "Method",
        "name": "getConsignmentProducts",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consignment",
            "type": "Consignment",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Consignment:interface",
            "shortType": "Consignment",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "OrderEntry[]"
      },
      { "kind": "Property", "name": "order", "type": "Order" },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailActionsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cancel$",
        "type": "Observable<Consignment[]>"
      },
      {
        "kind": "Property",
        "name": "completed$",
        "type": "Observable<Consignment[]>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Property",
        "name": "others$",
        "type": "Observable<Consignment[]>"
      },
      {
        "kind": "Property",
        "name": "promotionLocation",
        "type": "PromotionLocation"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailShippingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "unifiedInjector",
            "type": "UnifiedInjector",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!UnifiedInjector:class",
            "shortType": "UnifiedInjector",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      },
      {
        "kind": "Property",
        "name": "orderCode$",
        "type": "Observable<string>"
      },
      { "kind": "Property", "name": "orderLoad$", "type": "Observable<{}>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailsServiceTransitionalToken",
    "members": [
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Order>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderDetailTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "order$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "OrderEntriesContext",
    "members": [
      "Partial",
      "<",
      "AddOrderEntriesContext",
      " & ",
      "GetOrderEntriesContext",
      ">"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "OrderEntriesSource",
    "members": [
      "ACTIVE_CART",
      "NEW_SAVED_CART",
      "ORDER_CONFIRMATION",
      "ORDER_DETAILS",
      "QUICK_ORDER",
      "SAVED_CART"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byOrderNumber: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "Order",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Order:interface",
            "shortType": "Order",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "hasReplenishmentOrder$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "orders$",
        "type": "Observable<OrderHistoryList>"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "tabTitleParam$",
        "type": "Observable<number>"
      },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userOrderService",
        "type": "UserOrderService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderHistoryModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryAddress",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getBillingAddressCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "billingAddress",
            "type": "Address",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Address:interface",
            "shortType": "Address",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCostCenterCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "costCenter",
            "type": "CostCenter",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CostCenter:interface",
            "shortType": "CostCenter",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getDeliveryModeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "deliveryMode",
            "type": "DeliveryMode",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DeliveryMode:interface",
            "shortType": "DeliveryMode",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getMethodOfPaymentCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "hasPaymentInfo",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderCodeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderCurrentDateCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getOrderStatusCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "status",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPaymentInfoCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "payment",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getPurchaseOrderNumber",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "poNumber",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentActiveCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "active",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentCodeCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentFrequencyCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "frequency",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentNextDateCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getReplenishmentStartOnCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isoDate",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<Card>"
      },
      { "kind": "Property", "name": "order", "type": "any" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderOverviewModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderReturnGuard",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderReturnService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderReturnService:class",
            "shortType": "OrderReturnService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "canActivate",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<boolean | UrlTree>"
      },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderReturnService"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderReturnModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderReturnRequestListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "OrderReturnRequestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderReturnRequestService:class",
            "shortType": "OrderReturnRequestService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byRMA: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequests$",
        "type": "Observable<ReturnRequestList>"
      },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "tabTitleParam$",
        "type": "Observable<number>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderReturnService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderDetailsService",
            "type": "OrderDetailsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderDetailsService:class",
            "shortType": "OrderDetailsService",
            "importPath": "@spartacus/order/components"
          },
          {
            "name": "returnRequestService",
            "type": "OrderReturnRequestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderReturnRequestService:class",
            "shortType": "OrderReturnRequestService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "amendType", "type": "AmendOrderType" },
      {
        "kind": "Method",
        "name": "getEntries",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "orderDetailsService",
        "type": "OrderDetailsService"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "OrderReturnRequestService"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OrderSummaryComponent",
    "members": [{ "kind": "Property", "name": "cart", "type": "Cart" }]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OutletContextData",
    "members": [
      { "kind": "Property", "name": "context", "type": "T" },
      { "kind": "Property", "name": "context$", "type": "Observable<T>" },
      { "kind": "Property", "name": "position", "type": "OutletPosition" },
      { "kind": "Property", "name": "reference", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OutletDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "templateRef",
            "type": "TemplateRef<any>",
            "isOptional": false,
            "canonicalReference": "@angular/core!TemplateRef:class",
            "shortType": "TemplateRef",
            "importPath": "@angular/core"
          },
          {
            "name": "outletService",
            "type": "OutletService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletService:class",
            "shortType": "OutletService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "deferLoaderService",
            "type": "DeferLoaderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DeferLoaderService:class",
            "shortType": "DeferLoaderService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "outletRendererService",
            "type": "OutletRendererService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletRendererService:class",
            "shortType": "OutletRendererService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "cxOutlet", "type": "string" },
      { "kind": "Property", "name": "cxOutletContext", "type": "T" },
      {
        "kind": "Property",
        "name": "cxOutletDefer",
        "type": "IntersectionOptions"
      },
      { "kind": "Property", "name": "loaded", "type": "EventEmitter<Boolean>" },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "changes",
            "type": "SimpleChanges",
            "isOptional": false,
            "canonicalReference": "@angular/core!SimpleChanges:interface",
            "shortType": "SimpleChanges",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "renderedComponents",
        "type": "Map<OutletPosition, (ComponentRef<any> | EmbeddedViewRef<any>)[]>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OutletModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<OutletModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "OutletPosition",
    "members": ["AFTER", "BEFORE", "REPLACE"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OutletRefDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tpl",
            "type": "TemplateRef<any>",
            "isOptional": false,
            "canonicalReference": "@angular/core!TemplateRef:class",
            "shortType": "TemplateRef",
            "importPath": "@angular/core"
          },
          {
            "name": "outletService",
            "type": "OutletService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletService:class",
            "shortType": "OutletService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "cxOutletPos", "type": "OutletPosition" },
      { "kind": "Property", "name": "cxOutletRef", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OutletRefModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OutletRendererService",
    "members": [
      {
        "kind": "Method",
        "name": "getOutletRef",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<OutletDirective>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cxOutlet",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "context",
            "type": "OutletDirective",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletDirective:class",
            "shortType": "OutletDirective",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OutletRenderStrategy",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          },
          {
            "name": "outletService",
            "type": "OutletService<ComponentFactory<any>>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletService:class",
            "shortType": "OutletService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentFactoryResolver:class",
            "shortType": "ComponentFactoryResolver",
            "importPath": "@angular/core"
          },
          {
            "name": "outletRendererService",
            "type": "OutletRendererService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletRendererService:class",
            "shortType": "OutletRendererService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentFactoryResolver",
        "type": "ComponentFactoryResolver"
      },
      { "kind": "Property", "name": "document", "type": "any" },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchOutletDialog",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchOutletDialog:interface",
            "shortType": "LaunchOutletDialog",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "outletRendererService",
        "type": "OutletRendererService"
      },
      {
        "kind": "Property",
        "name": "outletService",
        "type": "OutletService<ComponentFactory<any>>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "config",
            "type": "LaunchOutletDialog",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchOutletDialog:interface",
            "shortType": "LaunchOutletDialog",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchOutletDialog",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchOutletDialog:interface",
            "shortType": "LaunchOutletDialog",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<ComponentRef<any> | undefined> | void"
      },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "OutletService",
    "members": [
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "template",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "position",
            "type": "OutletPosition",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!OutletPosition:enum",
            "shortType": "OutletPosition",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 2,
        "parameters": [
          {
            "name": "outlet",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "factory",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "position",
            "type": "OutletPosition",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!OutletPosition:enum",
            "shortType": "OutletPosition",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "position",
            "type": "OutletPosition",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!OutletPosition:enum",
            "shortType": "OutletPosition",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "stacked",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "T[] | T"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "position",
            "type": "OutletPosition",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!OutletPosition:enum",
            "shortType": "OutletPosition",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "value",
            "type": "T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "removeValueOrAll",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "store",
            "type": "Map<string, T[]>",
            "isOptional": false,
            "canonicalReference": "!Map:interface",
            "shortType": "Map",
            "importPath": ""
          },
          {
            "name": "outlet",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "value",
            "type": "T",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "PAGE_LAYOUT_HANDLER",
    "type": "InjectionToken<PageLayoutHandler[]>"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageComponentModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<PageComponentModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageEvent",
    "members": [
      { "kind": "Property", "name": "navigation", "type": "NavigationEvent" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageLayoutComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageLayoutService",
            "type": "PageLayoutService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageLayoutService:class",
            "shortType": "PageLayoutService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "layoutName$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "pageFoldSlot$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "pageLayoutService",
        "type": "PageLayoutService"
      },
      {
        "kind": "Property",
        "name": "section$",
        "type": "BehaviorSubject<string>"
      },
      { "kind": "Property", "name": "slots$", "type": "Observable<string[]>" },
      {
        "kind": "Property",
        "name": "templateName$",
        "type": "Observable<string>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "PageLayoutHandler",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "handle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "slots",
            "type": "Observable<string[]>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          },
          {
            "name": "pageTemplate",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "section",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageLayoutModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageLayoutService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cms",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "config",
            "type": "LayoutConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LayoutConfig:class",
            "shortType": "LayoutConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "handlers",
            "type": "PageLayoutHandler[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageLayoutHandler:interface",
            "shortType": "PageLayoutHandler",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getPageFoldSlot",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageTemplate",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getResponsiveSlotConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "layoutSlotConfig",
            "type": "LayoutSlotConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LayoutSlotConfig:type",
            "shortType": "LayoutSlotConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "configAttribute",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "SlotConfig"
      },
      {
        "kind": "Method",
        "name": "getSlotConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configAttribute",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "section",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "SlotConfig"
      },
      {
        "kind": "Method",
        "name": "getSlotConfigForSection",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "templateUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "configAttribute",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "section",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "SlotConfig"
      },
      {
        "kind": "Method",
        "name": "getSlots",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "section",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<string[]>"
      },
      { "kind": "Property", "name": "page$", "type": "Observable<Page>" },
      {
        "kind": "Property",
        "name": "templateName$",
        "type": "Observable<string>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageMetaLinkService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      },
      {
        "kind": "Method",
        "name": "setCanonicalLink",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "url",
            "type": "string | undefined",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "PageSection",
    "members": ["FOOTER", "HEADER", "NAVIGATION"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageSlotComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "dynamicAttributeService",
            "type": "DynamicAttributeService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!DynamicAttributeService:class",
            "shortType": "DynamicAttributeService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "pageSlotService",
            "type": "PageSlotService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageSlotService:class",
            "shortType": "PageSlotService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      { "kind": "Property", "name": "class", "type": "string" },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      {
        "kind": "Property",
        "name": "components",
        "type": "ContentSlotComponentData[]"
      },
      {
        "kind": "Property",
        "name": "components$",
        "type": "Observable<ContentSlotComponentData[]>"
      },
      {
        "kind": "Method",
        "name": "decorate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "slot",
            "type": "ContentSlotData",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ContentSlotData:interface",
            "shortType": "ContentSlotData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "dynamicAttributeService",
        "type": "DynamicAttributeService"
      },
      { "kind": "Property", "name": "elementRef", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "getComponentDeferOptions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "IntersectionOptions"
      },
      { "kind": "Property", "name": "hasComponents", "type": "boolean" },
      {
        "kind": "Method",
        "name": "isDistinct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "old",
            "type": "ContentSlotData",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ContentSlotData:interface",
            "shortType": "ContentSlotData",
            "importPath": "@spartacus/core"
          },
          {
            "name": "current",
            "type": "ContentSlotData",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ContentSlotData:interface",
            "shortType": "ContentSlotData",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isLoaded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "loadState",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "isPageFold", "type": "boolean" },
      { "kind": "Property", "name": "isPending", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "pageSlotService",
        "type": "PageSlotService"
      },
      { "kind": "Property", "name": "pending", "type": "number" },
      { "kind": "Property", "name": "position", "type": "string" },
      {
        "kind": "Property",
        "name": "position$",
        "type": "BehaviorSubject<string>"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      {
        "kind": "Property",
        "name": "slot$",
        "type": "Observable<ContentSlotData>"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageSlotModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_pageSlot",
            "type": "PageSlotService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageSlotService:class",
            "shortType": "PageSlotService",
            "importPath": "@spartacus/storefront"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageSlotService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsComponentsService",
            "type": "CmsComponentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentsService:class",
            "shortType": "CmsComponentsService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "platformId",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsComponentsService",
        "type": "CmsComponentsService"
      },
      { "kind": "Property", "name": "document", "type": "any" },
      {
        "kind": "Method",
        "name": "getComponentDeferOptions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "slot",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "componentType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "IntersectionOptions"
      },
      { "kind": "Property", "name": "platformId", "type": "any" },
      {
        "kind": "Property",
        "name": "prerenderedSlots",
        "type": "string[] | undefined"
      },
      {
        "kind": "Method",
        "name": "resolvePrerenderedSlots",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "shouldNotDefer",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "slot",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageTemplateDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageLayoutService",
            "type": "PageLayoutService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageLayoutService:class",
            "shortType": "PageLayoutService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "templateRef",
            "type": "TemplateRef<HTMLElement>",
            "isOptional": false,
            "canonicalReference": "@angular/core!TemplateRef:class",
            "shortType": "TemplateRef",
            "importPath": "@angular/core"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addStyleClass",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "template",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "el",
            "type": "HTMLElement",
            "isOptional": true,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "el",
            "type": "HTMLElement",
            "isOptional": true,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "currentTemplate", "type": "string" },
      { "kind": "Property", "name": "elementRef", "type": "ElementRef" },
      { "kind": "Property", "name": "host", "type": "HTMLElement" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "pageLayoutService",
        "type": "PageLayoutService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Property",
        "name": "templateRef",
        "type": "TemplateRef<HTMLElement>"
      },
      { "kind": "Property", "name": "useTemplateFromInput", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageTitleComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "CmsComponentData<CmsPageTitleComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "pageMetaService",
            "type": "PageMetaService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageMetaService:class",
            "shortType": "PageMetaService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsPageTitleComponent>"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "pageMetaService",
        "type": "PageMetaService"
      },
      { "kind": "Property", "name": "title$", "type": "Observable<string>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PageTitleModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PaginationBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paginationConfig",
            "type": "PaginationConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationConfig:class",
            "shortType": "PaginationConfig",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addDots",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pages",
            "type": "PaginationItem[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItem:interface",
            "shortType": "PaginationItem",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "pageCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addFirstLast",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pages",
            "type": "PaginationItem[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItem:interface",
            "shortType": "PaginationItem",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "pageCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addNavigation",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pages",
            "type": "PaginationItem[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItem:interface",
            "shortType": "PaginationItem",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "pageCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "current",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "addPages",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pages",
            "type": "PaginationItem[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItem:interface",
            "shortType": "PaginationItem",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "pageCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "current",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "PaginationOptions" },
      {
        "kind": "Method",
        "name": "getAfterLinks",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "current",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "PaginationItem[]"
      },
      {
        "kind": "Method",
        "name": "getBeforeLinks",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "current",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "PaginationItem[]"
      },
      {
        "kind": "Method",
        "name": "getStartOfRange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "current",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "paginate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "current",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "PaginationItem[]"
      },
      {
        "kind": "Property",
        "name": "paginationConfig",
        "type": "PaginationConfig"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PaginationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paginationBuilder",
            "type": "PaginationBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationBuilder:class",
            "shortType": "PaginationBuilder",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ]
      },
      { "kind": "Property", "name": "defaultPage", "type": "any" },
      {
        "kind": "Method",
        "name": "getAriaLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "label",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "type",
            "type": "PaginationItemType",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItemType:enum",
            "shortType": "PaginationItemType",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getQueryParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "PaginationItem",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItem:interface",
            "shortType": "PaginationItem",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Params"
      },
      {
        "kind": "Method",
        "name": "isCurrent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "PaginationItem",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItem:interface",
            "shortType": "PaginationItem",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "isInactive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "PaginationItem",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItem:interface",
            "shortType": "PaginationItem",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "PaginationItem",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationItem:interface",
            "shortType": "PaginationItem",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "pageRoute", "type": "string" },
      { "kind": "Property", "name": "pages", "type": "PaginationItem[]" },
      { "kind": "Property", "name": "pagination", "type": "PaginationModel" },
      { "kind": "Property", "name": "queryParam", "type": "string" },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pagination",
            "type": "PaginationModel",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaginationModel:interface",
            "shortType": "PaginationModel",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "viewPageEvent",
        "type": "EventEmitter<number>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PaginationConfig",
    "members": [
      { "kind": "Property", "name": "pagination", "type": "PaginationOptions" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "PaginationItem",
    "members": [
      { "kind": "PropertySignature", "name": "label", "type": "string" },
      { "kind": "PropertySignature", "name": "number", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "type",
        "type": "PaginationItemType"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "PaginationItemType",
    "members": [
      "END",
      "FIRST",
      "GAP",
      "LAST",
      "NEXT",
      "PAGE",
      "PREVIOUS",
      "START"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PaginationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "PaginationNavigationPosition",
    "members": ["AFTER", "ASIDE", "BEFORE"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "PaginationOptions",
    "members": [
      { "kind": "PropertySignature", "name": "addDots", "type": "boolean" },
      { "kind": "PropertySignature", "name": "addEnd", "type": "boolean" },
      { "kind": "PropertySignature", "name": "addFirst", "type": "boolean" },
      { "kind": "PropertySignature", "name": "addLast", "type": "boolean" },
      { "kind": "PropertySignature", "name": "addNext", "type": "boolean" },
      { "kind": "PropertySignature", "name": "addPrevious", "type": "boolean" },
      { "kind": "PropertySignature", "name": "addStart", "type": "boolean" },
      { "kind": "PropertySignature", "name": "dotsLabel", "type": "string" },
      { "kind": "PropertySignature", "name": "endLabel", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "navigationPosition",
        "type": "PaginationNavigationPosition"
      },
      { "kind": "PropertySignature", "name": "nextLabel", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "previousLabel",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "rangeCount", "type": "number" },
      { "kind": "PropertySignature", "name": "startLabel", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "substituteDotsForSingularPage",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ParagraphComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "component",
            "type": "CmsComponentData<CmsParagraphComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "component",
        "type": "CmsComponentData<CmsParagraphComponent>"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "router", "type": "Router" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PaymentMethodsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userPaymentService",
            "type": "UserPaymentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserPaymentService:class",
            "shortType": "UserPaymentService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelCard",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "deletePaymentMethod",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentMethod",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "editCard", "type": "string" },
      {
        "kind": "Method",
        "name": "getCardContent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ defaultPayment, accountHolderName, expiryMonth, expiryYear, cardNumber, cardType, }",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<Card>"
      },
      {
        "kind": "Method",
        "name": "getCardIcon",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "loading$", "type": "Observable<boolean>" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "paymentMethods$",
        "type": "Observable<PaymentDetails[]>"
      },
      {
        "kind": "Method",
        "name": "setDefaultPaymentMethod",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentMethod",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setEdit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "paymentMethod",
            "type": "PaymentDetails",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PaymentDetails:interface",
            "shortType": "PaymentDetails",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PaymentMethodsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PopoverComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "positioningService",
            "type": "PositioningService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PositioningService:class",
            "shortType": "PositioningService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "changeDetectionRef",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          }
        ]
      },
      { "kind": "Property", "name": "appendToBody", "type": "boolean" },
      { "kind": "Property", "name": "autoPositioning", "type": "boolean" },
      { "kind": "Property", "name": "baseClass", "type": "string" },
      {
        "kind": "Property",
        "name": "changeDetectionRef",
        "type": "ChangeDetectorRef"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent | KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "content",
        "type": "string | TemplateRef<any>"
      },
      { "kind": "Property", "name": "customClass", "type": "string" },
      { "kind": "Property", "name": "displayCloseButton", "type": "boolean" },
      {
        "kind": "Method",
        "name": "escapeKeydown",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "eventSubject",
        "type": "Subject<PopoverEvent>"
      },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "insideClick",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isClickedOnDirective",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      {
        "kind": "Method",
        "name": "isClickedOnPopover",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      { "kind": "Property", "name": "isTemplate", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngAfterViewChecked",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "outsideClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "popoverClass", "type": "PopoverPosition" },
      {
        "kind": "Property",
        "name": "popoverInstance",
        "type": "ComponentRef<PopoverComponent>"
      },
      { "kind": "Property", "name": "position", "type": "PopoverPosition" },
      {
        "kind": "Property",
        "name": "positioningService",
        "type": "PositioningService"
      },
      { "kind": "Property", "name": "positionOnScroll", "type": "boolean" },
      {
        "kind": "Method",
        "name": "positionPopover",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      { "kind": "Property", "name": "resizeSub", "type": "Subscription" },
      { "kind": "Property", "name": "routeChangeSub", "type": "Subscription" },
      { "kind": "Property", "name": "router", "type": "Router" },
      {
        "kind": "Property",
        "name": "scrollEventUnlistener",
        "type": "() => void"
      },
      { "kind": "Property", "name": "triggerElement", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "triggerScrollEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PopoverDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "viewContainer",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentFactoryResolver:class",
            "shortType": "ComponentFactoryResolver",
            "importPath": "@angular/core"
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "changeDetectorRef",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          },
          {
            "name": "popoverService",
            "type": "PopoverService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PopoverService:class",
            "shortType": "PopoverService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "changeDetectorRef",
        "type": "ChangeDetectorRef"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "closePopover",
        "type": "EventEmitter<void>"
      },
      {
        "kind": "Property",
        "name": "closeTriggerEvents",
        "type": "PopoverEvent[]"
      },
      {
        "kind": "Property",
        "name": "componentFactoryResolver",
        "type": "ComponentFactoryResolver"
      },
      {
        "kind": "Property",
        "name": "cxPopover",
        "type": "string | TemplateRef<any>"
      },
      {
        "kind": "Property",
        "name": "cxPopoverOptions",
        "type": "PopoverOptions"
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "eventSubject",
        "type": "Subject<PopoverEvent>"
      },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Property",
        "name": "focusDirectiveTriggerEvents",
        "type": "PopoverEvent[]"
      },
      {
        "kind": "Property",
        "name": "focusPopoverTriggerEvents",
        "type": "PopoverEvent[]"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": false,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleEscape",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handlePopoverEvents",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handlePress",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "handleTab",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "isOpen", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "PopoverEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PopoverEvent:enum",
            "shortType": "PopoverEvent",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "openPopover",
        "type": "EventEmitter<void>"
      },
      {
        "kind": "Property",
        "name": "openTriggerEvents",
        "type": "PopoverEvent[]"
      },
      {
        "kind": "Property",
        "name": "popoverContainer",
        "type": "ComponentRef<PopoverComponent>"
      },
      {
        "kind": "Property",
        "name": "popoverService",
        "type": "PopoverService"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      {
        "kind": "Method",
        "name": "renderPopover",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "viewContainer",
        "type": "ViewContainerRef"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "PopoverEvent",
    "members": [
      "CLOSE_BUTTON_CLICK",
      "CLOSE_BUTTON_KEYDOWN",
      "ESCAPE_KEYDOWN",
      "INSIDE_CLICK",
      "OPEN",
      "OPEN_BY_KEYBOARD",
      "OUTSIDE_CLICK",
      "ROUTE_CHANGE"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PopoverModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "PopoverOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "appendToBody",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "autoPositioning",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "class", "type": "string" },
      { "kind": "PropertySignature", "name": "disable", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "displayCloseButton",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "placement",
        "type": "PopoverPosition"
      },
      {
        "kind": "PropertySignature",
        "name": "positionOnScroll",
        "type": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "PopoverPosition",
    "members": [
      "'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom'"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "PopoverPositionArray",
    "members": [
      "PopoverPosition",
      " | ",
      "Array",
      "<",
      "PopoverPosition",
      "> | string"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PopoverService",
    "members": [
      {
        "kind": "Method",
        "name": "getFocusConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "PopoverEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PopoverEvent:enum",
            "shortType": "PopoverEvent",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "appendToBody",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "FocusConfig"
      },
      {
        "kind": "Method",
        "name": "setFocusOnElement",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "focusConfig",
            "type": "FocusConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!FocusConfig:interface",
            "shortType": "FocusConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "appendToBody",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PositioningService",
    "members": [
      {
        "kind": "Method",
        "name": "_positionElements",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "hostElement",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "targetElement",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "placement",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "appendToBody",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "allowedPlacements",
        "type": "Array<PopoverPositionArray>"
      },
      { "kind": "Property", "name": "document", "type": "Document" },
      {
        "kind": "Method",
        "name": "getAllStyles",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          }
        ],
        "returnType": "CSSStyleDeclaration | undefined"
      },
      {
        "kind": "Method",
        "name": "getPositioningClass",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "position",
            "type": "PopoverPosition",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!PopoverPosition:type",
            "shortType": "PopoverPosition",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "autoPositioning",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getPositionStyleProperty",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          }
        ],
        "returnType": "string | undefined"
      },
      {
        "kind": "Method",
        "name": "isStaticPositioned",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "offset",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "round",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ClientRect"
      },
      {
        "kind": "Method",
        "name": "offsetParent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          }
        ],
        "returnType": "HTMLElement"
      },
      { "kind": "Property", "name": "placementSeparator", "type": "RegExp" },
      {
        "kind": "Method",
        "name": "position",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "element",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "round",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "ClientRect"
      },
      {
        "kind": "Method",
        "name": "positionElements",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "hostElement",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "targetElement",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "placement",
            "type": "string | PopoverPosition | PopoverPositionArray",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "appendToBody",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "PopoverPosition"
      },
      { "kind": "Property", "name": "window", "type": "Window | undefined" },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "PRODUCT_DETAILS_URL_MATCHER",
    "type": "InjectionToken<UrlMatcherFactory>"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "PRODUCT_LISTING_URL_MATCHER",
    "type": "InjectionToken<UrlMatcherFactory>"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductAttributesComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductAttributesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductCarouselComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<model>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<model>"
      },
      {
        "kind": "Property",
        "name": "items$",
        "type": "Observable<Observable<Product>[]>"
      },
      { "kind": "Property", "name": "PRODUCT_SCOPE", "type": "" },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      { "kind": "Property", "name": "title$", "type": "Observable<string>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ProductCarouselItem",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "media",
        "type": "{\n        container: any;\n        format?: string;\n    }"
      },
      { "kind": "PropertySignature", "name": "price", "type": "any" },
      { "kind": "PropertySignature", "name": "route", "type": "any[]" },
      { "kind": "PropertySignature", "name": "title", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductCarouselModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductCarouselService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "semanticPathService",
            "type": "SemanticPathService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SemanticPathService:class",
            "shortType": "SemanticPathService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "loadProduct",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<ProductCarouselItem>"
      },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      {
        "kind": "Property",
        "name": "semanticPathService",
        "type": "SemanticPathService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "ProductData",
    "members": ["{\n    productCode: string;\n    quantity: number;\n}"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "ProductDetailOutlets",
    "members": ["INTRO", "PRICE", "SHARE", "SUMMARY"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductDetailsPageEvent",
    "members": [
      { "kind": "Property", "name": "categories", "type": "Category[]" },
      { "kind": "Property", "name": "code", "type": "string" },
      { "kind": "Property", "name": "name", "type": "string" },
      { "kind": "Property", "name": "price", "type": "Price" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductDetailsPageModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductDetailsTabComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductDetailsTabModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductFacetNavigationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      { "kind": "Property", "name": "CLOSE_DELAY", "type": "number" },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "hasTrigger", "type": "boolean" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "isActive$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "isOpen$", "type": "Observable<boolean>" },
      {
        "kind": "Method",
        "name": "launch",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "open$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Property",
        "name": "trigger",
        "type": "ElementRef<HTMLElement>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductFacetNavigationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductFacetService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productListComponentService",
            "type": "ProductListComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductListComponentService:class",
            "shortType": "ProductListComponentService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "facetList$",
        "type": "Observable<FacetList>"
      },
      {
        "kind": "Method",
        "name": "filterBreadcrumbs",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breadcrumbs",
            "type": "Breadcrumb[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Breadcrumb:interface",
            "shortType": "Breadcrumb",
            "importPath": "@spartacus/core"
          },
          {
            "name": "params",
            "type": "Params",
            "isOptional": false,
            "canonicalReference": "@angular/router!Params:type",
            "shortType": "Params",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Breadcrumb[]"
      },
      {
        "kind": "Method",
        "name": "filterForPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "state",
            "type": "ActivatedRouterStateSnapshot",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActivatedRouterStateSnapshot:interface",
            "shortType": "ActivatedRouterStateSnapshot",
            "importPath": "@spartacus/core"
          },
          {
            "name": "page",
            "type": "ProductSearchPage",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductSearchPage:interface",
            "shortType": "ProductSearchPage",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "productListComponentService",
        "type": "ProductListComponentService"
      },
      {
        "kind": "Property",
        "name": "routeState$",
        "type": "Observable<ActivatedRouterStateSnapshot>"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Property",
        "name": "searchResult$",
        "type": "Observable<ProductSearchPage>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductGridItemComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productListItemContextSource",
            "type": "ProductListItemContextSource",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductListItemContextSource:class",
            "shortType": "ProductListItemContextSource",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "changes",
            "type": "SimpleChanges",
            "isOptional": true,
            "canonicalReference": "@angular/core!SimpleChanges:interface",
            "shortType": "SimpleChanges",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product", "type": "any" },
      {
        "kind": "Property",
        "name": "productListItemContextSource",
        "type": "ProductListItemContextSource"
      },
      {
        "kind": "Property",
        "name": "ProductListOutlets",
        "type": "typeof ProductListOutlets"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductImagesComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Method",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "thumbs",
            "type": "any[]",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<number>"
      },
      {
        "kind": "Method",
        "name": "isActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "thumbnail",
            "type": "ImageGroup",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ImageGroup:interface",
            "shortType": "ImageGroup",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<boolean>"
      },
      { "kind": "Property", "name": "mainImage$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "mainMediaContainer",
        "type": "BehaviorSubject<any>"
      },
      {
        "kind": "Method",
        "name": "openImage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      { "kind": "Property", "name": "thumbs$", "type": "Observable<any[]>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductImagesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ProductImportInfo",
    "members": [
      { "kind": "PropertySignature", "name": "productCode", "type": "string" },
      { "kind": "PropertySignature", "name": "productName", "type": "string" },
      { "kind": "PropertySignature", "name": "quantity", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "quantityAdded",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "statusCode",
        "type": "ProductImportStatus"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "ProductImportStatus",
    "members": [
      "LIMIT_EXCEEDED",
      "LOW_STOCK",
      "NO_STOCK",
      "SUCCESS",
      "UNKNOWN_ERROR",
      "UNKNOWN_IDENTIFIER"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ProductImportSummary",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cartName",
        "type": "string | undefined"
      },
      { "kind": "PropertySignature", "name": "count", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "errorMessages",
        "type": "ProductImportInfo[]"
      },
      { "kind": "PropertySignature", "name": "loading", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "successesCount",
        "type": "number"
      },
      { "kind": "PropertySignature", "name": "total", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "warningMessages",
        "type": "ProductImportInfo[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductIntroComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Method",
        "name": "ngAfterContentChecked",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      {
        "kind": "Property",
        "name": "reviewsTabAvailable",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "showReviews",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductIntroModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageLayoutService",
            "type": "PageLayoutService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageLayoutService:class",
            "shortType": "PageLayoutService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "productListComponentService",
            "type": "ProductListComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductListComponentService:class",
            "shortType": "ProductListComponentService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "scrollConfig",
            "type": "ViewConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ViewConfig:class",
            "shortType": "ViewConfig",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "isInfiniteScroll", "type": "boolean" },
      {
        "kind": "Property",
        "name": "model$",
        "type": "Observable<ProductSearchPage>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "scrollConfig", "type": "ViewConfig" },
      {
        "kind": "Method",
        "name": "setViewMode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "mode",
            "type": "ViewModes",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ViewModes:enum",
            "shortType": "ViewModes",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "sortList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "viewMode$",
        "type": "BehaviorSubject<ViewModes>"
      },
      { "kind": "Property", "name": "ViewModes", "type": "typeof ViewModes" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductListComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productSearchService",
            "type": "ProductSearchService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductSearchService:class",
            "shortType": "ProductSearchService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          },
          {
            "name": "currencyService",
            "type": "CurrencyService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrencyService:class",
            "shortType": "CurrencyService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "languageService",
            "type": "LanguageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LanguageService:class",
            "shortType": "LanguageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "router",
            "type": "Router",
            "isOptional": false,
            "canonicalReference": "@angular/router!Router:class",
            "shortType": "Router",
            "importPath": "@angular/router"
          },
          {
            "name": "config",
            "type": "ViewConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ViewConfig:class",
            "shortType": "ViewConfig",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      { "kind": "Property", "name": "config", "type": "ViewConfig" },
      {
        "kind": "Property",
        "name": "currencyService",
        "type": "CurrencyService"
      },
      {
        "kind": "Method",
        "name": "getCriteriaFromRoute",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routeParams",
            "type": "ProductListRouteParams",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductListRouteParams:interface",
            "shortType": "ProductListRouteParams",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "queryParams",
            "type": "SearchCriteria",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchCriteria:interface",
            "shortType": "SearchCriteria",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "SearchCriteria"
      },
      {
        "kind": "Method",
        "name": "getPageItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "getQueryFromRouteParams",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "{ query, categoryCode, brandCode, }",
            "type": "ProductListRouteParams",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductListRouteParams:interface",
            "shortType": "ProductListRouteParams",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Property",
        "name": "languageService",
        "type": "LanguageService"
      },
      {
        "kind": "Property",
        "name": "model$",
        "type": "Observable<ProductSearchPage>"
      },
      {
        "kind": "Property",
        "name": "productSearchService",
        "type": "ProductSearchService"
      },
      { "kind": "Property", "name": "RELEVANCE_ALLCATEGORIES", "type": "" },
      {
        "kind": "Method",
        "name": "route",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "queryParams",
            "type": "SearchCriteria",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchCriteria:interface",
            "shortType": "SearchCriteria",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "router", "type": "Router" },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "criteria",
            "type": "SearchCriteria",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchCriteria:interface",
            "shortType": "SearchCriteria",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "searchByRouting$",
        "type": "Observable<ActivatedRouterStateSnapshot>"
      },
      {
        "kind": "Property",
        "name": "searchResults$",
        "type": "Observable<ProductSearchPage>"
      },
      {
        "kind": "Method",
        "name": "sort",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductListingPageModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductListItemComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productListItemContextSource",
            "type": "ProductListItemContextSource",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductListItemContextSource:class",
            "shortType": "ProductListItemContextSource",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnChanges",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "changes",
            "type": "SimpleChanges",
            "isOptional": true,
            "canonicalReference": "@angular/core!SimpleChanges:interface",
            "shortType": "SimpleChanges",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "product", "type": "any" },
      {
        "kind": "Property",
        "name": "productListItemContextSource",
        "type": "ProductListItemContextSource"
      },
      {
        "kind": "Property",
        "name": "ProductListOutlets",
        "type": "typeof ProductListOutlets"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductListItemContext",
    "members": [
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductListItemContextSource",
    "members": [
      {
        "kind": "Property",
        "name": "product$",
        "type": "ReplaySubject<Product>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "ProductListOutlets",
    "members": ["ITEM_ACTIONS", "ITEM_DETAILS"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ProductListRouteParams",
    "members": [
      { "kind": "PropertySignature", "name": "brandCode", "type": "string" },
      { "kind": "PropertySignature", "name": "categoryCode", "type": "string" },
      { "kind": "PropertySignature", "name": "query", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductPageEventBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productService",
            "type": "ProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductService:class",
            "shortType": "ProductService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "productSearchService",
            "type": "ProductSearchService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductSearchService:class",
            "shortType": "ProductSearchService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "buildCategoryResultsPageEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<CategoryPageResultsEvent>"
      },
      {
        "kind": "Method",
        "name": "buildProductDetailsPageEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ProductDetailsPageEvent>"
      },
      {
        "kind": "Method",
        "name": "buildSearchPageResultsEvent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<SearchPageResultsEvent>"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Property",
        "name": "productSearchService",
        "type": "ProductSearchService"
      },
      {
        "kind": "Property",
        "name": "productService",
        "type": "ProductService"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductPageEventModule",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_productPageEventBuilder",
            "type": "ProductPageEventBuilder",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductPageEventBuilder:class",
            "shortType": "ProductPageEventBuilder",
            "importPath": "@spartacus/storefront"
          }
        ]
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductReferencesComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsComponentData",
            "type": "CmsComponentData<CmsProductReferencesComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "productReferenceService",
            "type": "ProductReferenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductReferenceService:class",
            "shortType": "ProductReferenceService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "cmsComponentData",
        "type": "CmsComponentData<CmsProductReferencesComponent>"
      },
      {
        "kind": "Property",
        "name": "componentData$",
        "type": "Observable<CmsProductReferencesComponent>"
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Property",
        "name": "items$",
        "type": "Observable<Observable<Product>[]>"
      },
      {
        "kind": "Property",
        "name": "productCode$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "productReferenceService",
        "type": "ProductReferenceService"
      },
      { "kind": "Property", "name": "title$", "type": "Observable<string>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductReferencesModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductReviewsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reviewService",
            "type": "ProductReviewService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductReviewService:class",
            "shortType": "ProductReviewService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addReview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cancelWriteReview",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      { "kind": "Property", "name": "initialMaxListItems", "type": "number" },
      {
        "kind": "Method",
        "name": "initiateWriteReview",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "isWritingReview", "type": "boolean" },
      { "kind": "Property", "name": "maxListItems", "type": "number" },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" },
      { "kind": "Property", "name": "reviewForm", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "reviews$",
        "type": "Observable<Review[]>"
      },
      {
        "kind": "Property",
        "name": "reviewService",
        "type": "ProductReviewService"
      },
      {
        "kind": "Method",
        "name": "setRating",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "rating",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "submitReview",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "titleInput", "type": "ElementRef" },
      { "kind": "Property", "name": "writeReviewButton", "type": "ElementRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductReviewsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductSchemaBuilder",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProduct",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "builders",
            "type": "JsonLdBuilder<Product>[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!JsonLdBuilder:interface",
            "shortType": "JsonLdBuilder",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Property",
        "name": "builders",
        "type": "JsonLdBuilder<Product>[]"
      },
      {
        "kind": "Method",
        "name": "collect",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "product",
            "type": "Product",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!Product:interface",
            "shortType": "Product",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<any>[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductScrollComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "productListComponentService",
            "type": "ProductListComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ProductListComponentService:class",
            "shortType": "ProductListComponentService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "ref",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "appendProducts", "type": "boolean" },
      { "kind": "Property", "name": "inputViewMode", "type": "ViewModes" },
      { "kind": "Property", "name": "isEmpty", "type": "boolean" },
      { "kind": "Property", "name": "isLastPage", "type": "boolean" },
      { "kind": "Property", "name": "isMaxProducts", "type": "boolean" },
      {
        "kind": "Method",
        "name": "loadNextPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "maxProducts", "type": "number" },
      { "kind": "Property", "name": "model", "type": "ProductSearchPage" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "productLimit", "type": "number" },
      { "kind": "Property", "name": "resetList", "type": "boolean" },
      {
        "kind": "Method",
        "name": "scrollPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "pageNumber",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollToTop",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "viewMode", "type": "ViewModes" },
      { "kind": "Property", "name": "ViewModes", "type": "typeof ViewModes" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductSummaryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "currentProductService",
        "type": "CurrentProductService"
      },
      {
        "kind": "Property",
        "name": "outlets",
        "type": "typeof ProductDetailOutlets"
      },
      { "kind": "Property", "name": "product$", "type": "Observable<Product>" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductSummaryModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductTabsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProductViewComponent",
    "members": [
      { "kind": "Property", "name": "buttonClass", "type": "string" },
      {
        "kind": "Method",
        "name": "changeMode",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "mode", "type": "ViewModes" },
      {
        "kind": "Property",
        "name": "modeChange",
        "type": "EventEmitter<string>"
      },
      {
        "kind": "Property",
        "name": "viewMode",
        "type": "ICON_TYPE.GRID | ICON_TYPE.LIST"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProgressButtonComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "ariaLabel", "type": "string" },
      { "kind": "Property", "name": "class", "type": "string" },
      { "kind": "Property", "name": "clikEvent", "type": "EventEmitter<void>" },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      { "kind": "Property", "name": "loading", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ProgressButtonModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PromotionsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "promotions", "type": "Promotion[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PromotionsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "provideCmsStructure",
    "parameters": [
      {
        "name": "options",
        "type": "CmsStructureOptions",
        "isOptional": false,
        "canonicalReference": "@spartacus/storefront!CmsStructureOptions:interface",
        "shortType": "CmsStructureOptions",
        "importPath": "@spartacus/storefront"
      }
    ],
    "returnType": "ValueProvider"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "provideOutlet",
    "parameters": [
      {
        "name": "options",
        "type": "ProvideOutletOptions",
        "isOptional": false,
        "canonicalReference": "@spartacus/storefront!ProvideOutletOptions:interface",
        "shortType": "ProvideOutletOptions",
        "importPath": "@spartacus/storefront"
      }
    ],
    "returnType": "StaticProvider"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ProvideOutletOptions",
    "members": [
      { "kind": "PropertySignature", "name": "component", "type": "Type<any>" },
      { "kind": "PropertySignature", "name": "id", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "position",
        "type": "OutletPosition"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PwaModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "PWAModuleConfig",
    "members": [
      {
        "kind": "Property",
        "name": "pwa",
        "type": "{\n        enabled?: boolean;\n        addToHomeScreen?: boolean;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrder$",
        "type": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "el",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "cancelReplenishment",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "el", "type": "ElementRef" },
      { "kind": "Property", "name": "focusConfig", "type": "FocusConfig" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "handleClick",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderCode",
        "type": "string"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderCancellationDialogModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderDetailsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderDetailsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getOrderDetails",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<ReplenishmentOrder>"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderCode$",
        "type": "Observable<any>"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrderLoad$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderHistoryComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routing",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userReplenishmentOrderService",
            "type": "UserReplenishmentOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserReplenishmentOrderService:class",
            "shortType": "UserReplenishmentOrderService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translation",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "vcr",
            "type": "ViewContainerRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ViewContainerRef:class",
            "shortType": "ViewContainerRef",
            "importPath": "@angular/core"
          },
          {
            "name": "launchDialogService",
            "type": "LaunchDialogService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchDialogService:class",
            "shortType": "LaunchDialogService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "changeSortCode",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "element", "type": "ElementRef" },
      {
        "kind": "Method",
        "name": "getSortLabels",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{\n        byDate: string;\n        byReplenishmentNumber: string;\n        byNextOrderDate: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "goToOrderDetail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "order",
            "type": "ReplenishmentOrder",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ReplenishmentOrder:interface",
            "shortType": "ReplenishmentOrder",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "launchDialogService",
        "type": "LaunchDialogService"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "openDialog",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "Event",
            "isOptional": false,
            "canonicalReference": "!Event:interface",
            "shortType": "Event",
            "importPath": ""
          },
          {
            "name": "replenishmentOrderCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pageChange",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "page",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "replenishmentOrders$",
        "type": "Observable<ReplenishmentOrderList>"
      },
      { "kind": "Property", "name": "routing", "type": "RoutingService" },
      { "kind": "Property", "name": "sortType", "type": "string" },
      {
        "kind": "Property",
        "name": "translation",
        "type": "TranslationService"
      },
      {
        "kind": "Property",
        "name": "userReplenishmentOrderService",
        "type": "UserReplenishmentOrderService"
      },
      { "kind": "Property", "name": "vcr", "type": "ViewContainerRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReplenishmentOrderHistoryModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "ResponsiveTableConfiguration",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "lg",
        "type": "TableStructureConfiguration"
      },
      {
        "kind": "PropertySignature",
        "name": "md",
        "type": "TableStructureConfiguration"
      },
      {
        "kind": "PropertySignature",
        "name": "sm",
        "type": "TableStructureConfiguration"
      },
      {
        "kind": "PropertySignature",
        "name": "xl",
        "type": "TableStructureConfiguration"
      },
      {
        "kind": "PropertySignature",
        "name": "xs",
        "type": "TableStructureConfiguration"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnOrderComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnOrderConfirmationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "orderAmendService",
            "type": "OrderAmendService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderAmendService:class",
            "shortType": "OrderAmendService",
            "importPath": "@spartacus/order/components"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      { "kind": "Property", "name": "form$", "type": "Observable<FormGroup>" },
      {
        "kind": "Property",
        "name": "orderAmendService",
        "type": "OrderAmendService"
      },
      { "kind": "Property", "name": "orderCode", "type": "string" },
      {
        "kind": "Method",
        "name": "submit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "form",
            "type": "FormGroup",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormGroup:class",
            "shortType": "FormGroup",
            "importPath": "@angular/forms"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnOrderConfirmationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnOrderModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestDetailModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestItemsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestOverviewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "back",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "cancelReturn",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isCancelling$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      },
      { "kind": "Property", "name": "rma", "type": "string" },
      { "kind": "Property", "name": "subscription", "type": "Subscription" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ReturnRequestTotalsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "returnRequestService",
            "type": "ReturnRequestService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ReturnRequestService:class",
            "shortType": "ReturnRequestService",
            "importPath": ""
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "returnRequest$",
        "type": "Observable<ReturnRequest>"
      },
      {
        "kind": "Property",
        "name": "returnRequestService",
        "type": "ReturnRequestService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "RoutingContextService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoutesService",
            "type": "ActivatedRoutesService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActivatedRoutesService:class",
            "shortType": "ActivatedRoutesService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoutesService",
        "type": "ActivatedRoutesService"
      },
      {
        "kind": "Property",
        "name": "contextTokenMapping$",
        "type": "Observable<Record<ContextToken, any>>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "contextToken",
            "type": "ContextToken",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ContextToken:type",
            "shortType": "ContextToken",
            "importPath": ""
          }
        ],
        "returnType": "Observable<T | undefined>"
      },
      {
        "kind": "Method",
        "name": "getRoutesContextTokenMapping",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "routes",
            "type": "ActivatedRouteSnapshot[]",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRouteSnapshot:class",
            "shortType": "ActivatedRouteSnapshot",
            "importPath": "@angular/router"
          }
        ],
        "returnType": "Record<ContextToken, any>"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "RoutingModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<RoutingModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "RoutingRenderStrategy",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "document",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "document", "type": "any" },
      {
        "kind": "Method",
        "name": "hasMatch",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchRoute",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchRoute:interface",
            "shortType": "LaunchRoute",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "LaunchRoute",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LaunchRoute:interface",
            "shortType": "LaunchRoute",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "_caller",
            "type": "LAUNCH_CALLER | string",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!LAUNCH_CALLER:enum",
            "shortType": "LAUNCH_CALLER",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      },
      { "kind": "Property", "name": "routingService", "type": "RoutingService" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SaveForLaterComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "cartService",
            "type": "ActiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ActiveCartService:class",
            "shortType": "ActiveCartService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "selectiveCartService",
            "type": "SelectiveCartService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SelectiveCartService:class",
            "shortType": "SelectiveCartService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "cart$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "cartLoaded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "CartLocation",
        "type": "typeof PromotionLocation"
      },
      {
        "kind": "Property",
        "name": "cartService",
        "type": "ActiveCartService"
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      {
        "kind": "Property",
        "name": "data$",
        "type": "Observable<CmsParagraphComponent>"
      },
      {
        "kind": "Property",
        "name": "entries$",
        "type": "Observable<OrderEntry[]>"
      },
      {
        "kind": "Property",
        "name": "isCartEmpty$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "moveToCart",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "saveForLater$",
        "type": "Observable<Cart>"
      },
      {
        "kind": "Property",
        "name": "selectiveCartService",
        "type": "SelectiveCartService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SaveForLaterModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "SCHEMA_BUILDER",
    "type": "InjectionToken<unknown>"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "SchemaBuilder",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "build",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<{}>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SearchBoxComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "searchBoxComponentService",
            "type": "SearchBoxComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxComponentService:class",
            "shortType": "SearchBoxComponentService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "componentData",
            "type": "CmsComponentData<CmsSearchBoxComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "avoidReopen",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "blurSearchBox",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "chosenWord", "type": "string" },
      {
        "kind": "Method",
        "name": "clear",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "el",
            "type": "HTMLInputElement",
            "isOptional": false,
            "canonicalReference": "!HTMLInputElement:interface",
            "shortType": "HTMLInputElement",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          },
          {
            "name": "force",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CmsSearchBoxComponent>"
      },
      { "kind": "Property", "name": "config", "type": "SearchBoxConfig" },
      {
        "kind": "Property",
        "name": "config$",
        "type": "Observable<SearchBoxConfig>"
      },
      {
        "kind": "Method",
        "name": "disableClose",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dispatchProductEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventData",
            "type": "SearchBoxProductSelectedEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxProductSelectedEvent:class",
            "shortType": "SearchBoxProductSelectedEvent",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dispatchSuggestionEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventData",
            "type": "SearchBoxSuggestionSelectedEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxSuggestionSelectedEvent:class",
            "shortType": "SearchBoxSuggestionSelectedEvent",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "focusNextChild",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "focusPreviousChild",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Method",
        "name": "launchSearchResult",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          },
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "open",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "preventDefault",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ev",
            "type": "UIEvent",
            "isOptional": false,
            "canonicalReference": "!UIEvent:interface",
            "shortType": "UIEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "results$",
        "type": "Observable<SearchResults>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "searchBoxComponentService",
        "type": "SearchBoxComponentService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "updateChosenWord",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "chosenWord",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SearchBoxComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "searchService",
            "type": "SearchboxService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchboxService:class",
            "shortType": "SearchboxService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "clearResults",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dispatchProductSelectedEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventData",
            "type": "SearchBoxProductSelectedEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxProductSelectedEvent:class",
            "shortType": "SearchBoxProductSelectedEvent",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dispatchSuggestionSelectedEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventData",
            "type": "SearchBoxSuggestionSelectedEvent",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxSuggestionSelectedEvent:class",
            "shortType": "SearchBoxSuggestionSelectedEvent",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "getExactSuggestion",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SearchBoxConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxConfig:interface",
            "shortType": "SearchBoxConfig",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getProductResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SearchBoxConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxConfig:interface",
            "shortType": "SearchBoxConfig",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<ProductSearchPage>"
      },
      {
        "kind": "Method",
        "name": "getProductSuggestions",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SearchBoxConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxConfig:interface",
            "shortType": "SearchBoxConfig",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string[]>"
      },
      {
        "kind": "Method",
        "name": "getResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SearchBoxConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxConfig:interface",
            "shortType": "SearchBoxConfig",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<SearchResults>"
      },
      {
        "kind": "Method",
        "name": "getSearchMessage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SearchBoxConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxConfig:interface",
            "shortType": "SearchBoxConfig",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "hasBodyClass",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "className",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "hasResults",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "results",
            "type": "SearchResults",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchResults:interface",
            "shortType": "SearchResults",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "launchSearchPage",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "search",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "config",
            "type": "SearchBoxConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SearchBoxConfig:interface",
            "shortType": "SearchBoxConfig",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "searchService",
        "type": "SearchboxService"
      },
      {
        "kind": "Method",
        "name": "toggleBodyClass",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "className",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "add",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "translationService",
        "type": "TranslationService"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "SearchBoxConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "displayProductImages",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "displayProducts",
        "type": "boolean"
      },
      {
        "kind": "PropertySignature",
        "name": "displaySuggestions",
        "type": "boolean"
      },
      { "kind": "PropertySignature", "name": "maxProducts", "type": "number" },
      {
        "kind": "PropertySignature",
        "name": "maxSuggestions",
        "type": "number"
      },
      {
        "kind": "PropertySignature",
        "name": "minCharactersBeforeRequest",
        "type": "number"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SearchBoxModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SearchBoxProductSelectedEvent",
    "members": [
      { "kind": "Property", "name": "freeText", "type": "string" },
      { "kind": "Property", "name": "productCode", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SearchBoxSuggestionSelectedEvent",
    "members": [
      { "kind": "Property", "name": "freeText", "type": "string" },
      {
        "kind": "Property",
        "name": "searchSuggestions",
        "type": "Suggestion[]"
      },
      { "kind": "Property", "name": "selectedSuggestion", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "SearchCriteria",
    "members": [
      { "kind": "PropertySignature", "name": "currentPage", "type": "number" },
      { "kind": "PropertySignature", "name": "pageSize", "type": "number" },
      { "kind": "PropertySignature", "name": "query", "type": "string" },
      { "kind": "PropertySignature", "name": "sortCode", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SearchPageResultsEvent",
    "members": [
      { "kind": "Property", "name": "numberOfResults", "type": "Number" },
      { "kind": "Property", "name": "searchTerm", "type": "string" },
      { "kind": "Property", "name": "type", "type": "" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "SearchResults",
    "members": [
      { "kind": "PropertySignature", "name": "message", "type": "string" },
      { "kind": "PropertySignature", "name": "products", "type": "any[]" },
      { "kind": "PropertySignature", "name": "suggestions", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SelectFocusUtility",
    "members": [
      {
        "kind": "Method",
        "name": "findFirstFocusable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "host",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "config",
            "type": "AutoFocusConfig",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!AutoFocusConfig:interface",
            "shortType": "AutoFocusConfig",
            "importPath": ""
          }
        ],
        "returnType": "HTMLElement"
      },
      {
        "kind": "Method",
        "name": "findFocusable",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "host",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "locked",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "invisible",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "HTMLElement[]"
      },
      { "kind": "Property", "name": "focusableSelectors", "type": "string[]" },
      {
        "kind": "Property",
        "name": "focusableSelectorSuffix",
        "type": "string"
      },
      {
        "kind": "Method",
        "name": "isHidden",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "el",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Method",
        "name": "query",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "host",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          },
          {
            "name": "selector",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "HTMLElement[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SeoMetaService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "ngTitle",
            "type": "Title",
            "isOptional": false,
            "canonicalReference": "@angular/platform-browser!Title:class",
            "shortType": "Title",
            "importPath": "@angular/platform-browser"
          },
          {
            "name": "ngMeta",
            "type": "Meta",
            "isOptional": false,
            "canonicalReference": "@angular/platform-browser!Meta:class",
            "shortType": "Meta",
            "importPath": "@angular/platform-browser"
          },
          {
            "name": "pageMetaService",
            "type": "PageMetaService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!PageMetaService:class",
            "shortType": "PageMetaService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "pageMetaLinkService",
            "type": "PageMetaLinkService",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!PageMetaLinkService:class",
            "shortType": "PageMetaLinkService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addTag",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "meta",
            "type": "MetaDefinition",
            "isOptional": false,
            "canonicalReference": "@angular/platform-browser!MetaDefinition:type",
            "shortType": "MetaDefinition",
            "importPath": "@angular/platform-browser"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ngMeta", "type": "Meta" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "ngTitle", "type": "Title" },
      {
        "kind": "Property",
        "name": "pageMetaLinkService",
        "type": "PageMetaLinkService"
      },
      {
        "kind": "Property",
        "name": "pageMetaService",
        "type": "PageMetaService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SeoModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SiteContextComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<CmsSiteContextSelectorComponent>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "contextServiceMap",
            "type": "ContextServiceMap",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ContextServiceMap:class",
            "shortType": "ContextServiceMap",
            "importPath": "@spartacus/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CmsSiteContextSelectorComponent>"
      },
      {
        "kind": "Method",
        "name": "getActiveItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "SiteContextType",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!SiteContextType:enum",
            "shortType": "SiteContextType",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "SiteContextType",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!SiteContextType:enum",
            "shortType": "SiteContextType",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<string>"
      },
      {
        "kind": "Method",
        "name": "getInjectedService",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "SiteContext<any>"
      },
      {
        "kind": "Method",
        "name": "getItems",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "SiteContextType",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!SiteContextType:enum",
            "shortType": "SiteContextType",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "SiteContextType",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!SiteContextType:enum",
            "shortType": "SiteContextType",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<any>"
      },
      {
        "kind": "Method",
        "name": "getOptionLabel",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "context",
            "type": "string",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getService",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "context",
            "type": "SiteContextType",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!SiteContextType:enum",
            "shortType": "SiteContextType",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<SiteContext<any>>"
      },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      {
        "kind": "Method",
        "name": "setActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "context",
            "type": "SiteContextType",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!SiteContextType:enum",
            "shortType": "SiteContextType",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SiteContextSelectorComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentService",
            "type": "SiteContextComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SiteContextComponentService:class",
            "shortType": "SiteContextComponentService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activeItem$",
        "type": "Observable<string>"
      },
      { "kind": "Property", "name": "context", "type": "SiteContextType" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "items$", "type": "Observable<any>" },
      { "kind": "Property", "name": "label$", "type": "Observable<any>" },
      {
        "kind": "Property",
        "name": "siteContextService",
        "type": "SiteContext<any>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SiteContextSelectorModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "SiteContextType",
    "members": ["CURRENCY", "LANGUAGE"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SkipLink",
    "members": [
      { "kind": "Property", "name": "i18nKey", "type": "string" },
      { "kind": "Property", "name": "key", "type": "string" },
      {
        "kind": "Property",
        "name": "position",
        "type": "SkipLinkScrollPosition"
      },
      { "kind": "Property", "name": "target", "type": "HTMLElement" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SkipLinkComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "skipLinkService",
            "type": "SkipLinkService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SkipLinkService:class",
            "shortType": "SkipLinkService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "scrollToTarget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "skipLink",
            "type": "SkipLink",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SkipLink:class",
            "shortType": "SkipLink",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "skipLinks$",
        "type": "Observable<SkipLink[]>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SkipLinkConfig",
    "members": [
      { "kind": "Property", "name": "skipLinks", "type": "SkipLink[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SkipLinkDirective",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "elementRef",
            "type": "ElementRef<HTMLElement>",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "skipLinkService",
            "type": "SkipLinkService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SkipLinkService:class",
            "shortType": "SkipLinkService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "cxSkipLink", "type": "string" },
      {
        "kind": "Property",
        "name": "elementRef",
        "type": "ElementRef<HTMLElement>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "skipLinkService",
        "type": "SkipLinkService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SkipLinkModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "SkipLinkScrollPosition",
    "members": ["AFTER", "BEFORE"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SkipLinkService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SkipLinkConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SkipLinkConfig:class",
            "shortType": "SkipLinkConfig",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "keyboardFocusService",
            "type": "KeyboardFocusService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!KeyboardFocusService:class",
            "shortType": "KeyboardFocusService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "target",
            "type": "HTMLElement",
            "isOptional": false,
            "canonicalReference": "!HTMLElement:interface",
            "shortType": "HTMLElement",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "config", "type": "SkipLinkConfig" },
      {
        "kind": "Method",
        "name": "getSkipLinkIndexInArray",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getSkipLinks",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<SkipLink[]>"
      },
      {
        "kind": "Property",
        "name": "keyboardFocusService",
        "type": "KeyboardFocusService"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "key",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "scrollToTarget",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "skipLink",
            "type": "SkipLink",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SkipLink:class",
            "shortType": "SkipLink",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "SlotConfig",
    "members": ["{\n    slots?: string[];\n    pageFold?: string;\n}"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "SlotGroup",
    "members": [
      "{\n    [",
      "BREAKPOINT.lg",
      "]?: ",
      "SlotConfig",
      ";\n    [",
      "BREAKPOINT.md",
      "]?: ",
      "SlotConfig",
      ";\n    [",
      "BREAKPOINT.sm",
      "]?: ",
      "SlotConfig",
      ";\n    [",
      "BREAKPOINT.xs",
      "]?: ",
      "SlotConfig",
      ";\n}"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SortingComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      },
      { "kind": "Property", "name": "placeholder", "type": "string" },
      { "kind": "Property", "name": "selectedLabel", "type": "string" },
      { "kind": "Property", "name": "selectedOption", "type": "string" },
      {
        "kind": "Property",
        "name": "sortLabels",
        "type": "{\n        [code: string]: string;\n    }"
      },
      {
        "kind": "Method",
        "name": "sortList",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "sortCode",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "sortListEvent",
        "type": "EventEmitter<string>"
      },
      { "kind": "Property", "name": "sortOptions", "type": "SortModel[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Function",
    "name": "sortTitles",
    "parameters": [
      {
        "name": "title1",
        "type": "Title",
        "isOptional": false,
        "canonicalReference": "@spartacus/storefront!Title:interface",
        "shortType": "Title",
        "importPath": "@spartacus/core"
      },
      {
        "name": "title2",
        "type": "Title",
        "isOptional": false,
        "canonicalReference": "@spartacus/storefront!Title:interface",
        "shortType": "Title",
        "importPath": "@spartacus/core"
      }
    ],
    "returnType": "number"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SpinnerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": []
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SpinnerModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SplitViewComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "splitService",
            "type": "SplitViewService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SplitViewService:class",
            "shortType": "SplitViewService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      { "kind": "Property", "name": "elementRef", "type": "ElementRef" },
      { "kind": "Property", "name": "lastVisibleView", "type": "number" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "splitService",
        "type": "SplitViewService"
      },
      { "kind": "Property", "name": "splitViewCount", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SplitViewModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SplitViewService",
    "members": [
      {
        "kind": "Property",
        "name": "_views$",
        "type": "BehaviorSubject<any[]>"
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "position",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "initialState",
            "type": "SplitViewState",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!SplitViewState:interface",
            "shortType": "SplitViewState",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "defaultHideMode", "type": "boolean" },
      {
        "kind": "Method",
        "name": "getActive",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "views",
            "type": "SplitViewState[]",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SplitViewState:interface",
            "shortType": "SplitViewState",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "number"
      },
      {
        "kind": "Method",
        "name": "getActiveView",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<number>"
      },
      {
        "kind": "Method",
        "name": "getViewState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "position",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<SplitViewState>"
      },
      { "kind": "Property", "name": "nextPosition", "type": "number" },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "position",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "splitViewCount", "type": "number" },
      {
        "kind": "Method",
        "name": "toggle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "position",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "forceHide",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateSplitView",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "splitViewCount",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "updateState",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "position",
            "type": "number",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "hide",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "views", "type": "SplitViewState[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "SplitViewState",
    "members": [
      { "kind": "PropertySignature", "name": "hidden", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "StarRatingComponent",
    "members": [
      { "kind": "Property", "name": "change", "type": "EventEmitter<number>" },
      { "kind": "Property", "name": "disabled", "type": "boolean" },
      { "kind": "Property", "name": "icon", "type": "ICON_TYPE" },
      { "kind": "Property", "name": "initialRate", "type": "number" },
      { "kind": "Property", "name": "rating", "type": "number" },
      {
        "kind": "Method",
        "name": "reset",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "saveRate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "rating",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "setRate",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "StarRatingModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "StockNotificationComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "currentProductService",
            "type": "CurrentProductService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CurrentProductService:class",
            "shortType": "CurrentProductService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "interestsService",
            "type": "UserInterestsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserInterestsService:class",
            "shortType": "UserInterestsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "notificationPrefService",
            "type": "UserNotificationPreferenceService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserNotificationPreferenceService:class",
            "shortType": "UserNotificationPreferenceService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "anonymous", "type": "boolean" },
      {
        "kind": "Property",
        "name": "hasProductInterests$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "isRemoveInterestLoading$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "outOfStock$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "prefsEnabled$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "subscribe",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "unsubscribe",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "StockNotificationDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "interestsService",
            "type": "UserInterestsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserInterestsService:class",
            "shortType": "UserInterestsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "enabledPrefs",
        "type": "NotificationPreference[]"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "subscribeSuccess$",
        "type": "Observable<boolean>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "StockNotificationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "StorefrontComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "hamburgerMenuService",
            "type": "HamburgerMenuService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!HamburgerMenuService:class",
            "shortType": "HamburgerMenuService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "elementRef",
            "type": "ElementRef<HTMLElement>",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "keyboardFocusService",
            "type": "KeyboardFocusService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!KeyboardFocusService:class",
            "shortType": "KeyboardFocusService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "child", "type": "SkipLinkComponent" },
      {
        "kind": "Method",
        "name": "collapseMenu",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "collapseMenuIfClickOutside",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "elementRef",
        "type": "ElementRef<HTMLElement>"
      },
      {
        "kind": "Method",
        "name": "handleEscape",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "KeyboardEvent",
            "isOptional": false,
            "canonicalReference": "!KeyboardEvent:interface",
            "shortType": "KeyboardEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "isExpanded$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Property",
        "name": "keyboardFocusService",
        "type": "KeyboardFocusService"
      },
      {
        "kind": "Property",
        "name": "navigateSubscription",
        "type": "Subscription"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "startNavigating", "type": "any" },
      { "kind": "Property", "name": "stopNavigating", "type": "any" },
      {
        "kind": "Property",
        "name": "StorefrontOutlets",
        "type": "typeof StorefrontOutlets"
      },
      { "kind": "Property", "name": "tabindex", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "StorefrontComponentModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "StorefrontOutlets",
    "members": ["STOREFRONT"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "StructuredDataModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SuggestedAddressDialogComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "closeModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "enteredAddress", "type": "Address" },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "selectedAddress", "type": "Address" },
      { "kind": "Property", "name": "suggestedAddresses", "type": "Address[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SupplementHashAnchorsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "SupplementHashAnchorsPipe",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "isOptional": false,
            "canonicalReference": "@angular/core!Renderer2:class",
            "shortType": "Renderer2",
            "importPath": "@angular/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getPath",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "anchorId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "html",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "Table",
    "members": [
      { "kind": "PropertySignature", "name": "data", "type": "T[]" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      },
      { "kind": "PropertySignature", "name": "sorts", "type": "any[]" },
      {
        "kind": "PropertySignature",
        "name": "structure",
        "type": "TableStructure"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "rendererService",
            "type": "TableRendererService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TableRendererService:class",
            "shortType": "TableRendererService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "addTableDebugInfo",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "currentItem",
        "type": "{\n        value: any;\n        property: string;\n    }"
      },
      { "kind": "Property", "name": "data", "type": "T[]" },
      {
        "kind": "Method",
        "name": "getDataOutletContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "data",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "TableDataOutletContext"
      },
      {
        "kind": "Method",
        "name": "getDataOutletRef",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getHeaderOutletContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "TableHeaderOutletContext"
      },
      {
        "kind": "Method",
        "name": "getHeaderOutletRef",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      { "kind": "Property", "name": "horizontalLayout", "type": "boolean" },
      { "kind": "Property", "name": "i18nRoot", "type": "string" },
      {
        "kind": "Method",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "isCurrentItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      },
      { "kind": "Property", "name": "launch", "type": "EventEmitter<any>" },
      {
        "kind": "Method",
        "name": "launchItem",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "rendererService",
        "type": "TableRendererService"
      },
      { "kind": "Property", "name": "structure", "type": "TableStructure" },
      { "kind": "Property", "name": "tableType", "type": "string" },
      {
        "kind": "Method",
        "name": "trackData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_i",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "item",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      },
      { "kind": "Property", "name": "verticalLayout", "type": "boolean" },
      { "kind": "Property", "name": "verticalStackedLayout", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableConfig",
    "members": [
      {
        "kind": "Property",
        "name": "table",
        "type": "{\n        [tableType: string]: ResponsiveTableConfiguration;\n    }"
      },
      {
        "kind": "Property",
        "name": "tableOptions",
        "type": "{\n        headerComponent?: Type<any>;\n        dataComponent?: Type<any>;\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableDataCellComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "OutletContextData<TableHeaderOutletContext>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletContextData:class",
            "shortType": "OutletContextData",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "field", "type": "string" },
      { "kind": "Property", "name": "model", "type": "any" },
      {
        "kind": "Property",
        "name": "outlet",
        "type": "OutletContextData<TableHeaderOutletContext>"
      },
      { "kind": "Property", "name": "value", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableDataCellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "TableDataOutletContext",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "property",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "TableFieldOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "dataComponent",
        "type": "Type<any>"
      },
      {
        "kind": "PropertySignature",
        "name": "headerComponent",
        "type": "Type<any>"
      },
      {
        "kind": "PropertySignature",
        "name": "label",
        "type": "string | TableHeader"
      },
      { "kind": "PropertySignature", "name": "linkable", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "TableHeader",
    "members": [
      { "kind": "PropertySignature", "name": "i18nKey", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableHeaderCellComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outlet",
            "type": "OutletContextData<TableHeaderOutletContext>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletContextData:class",
            "shortType": "OutletContextData",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "field", "type": "string" },
      {
        "kind": "Property",
        "name": "fieldOptions",
        "type": "TableFieldOptions"
      },
      { "kind": "Property", "name": "header", "type": "string" },
      { "kind": "Property", "name": "i18nRoot", "type": "string" },
      { "kind": "Property", "name": "localizedHeader", "type": "string" },
      {
        "kind": "Property",
        "name": "outlet",
        "type": "OutletContextData<TableHeaderOutletContext>"
      },
      { "kind": "Property", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableHeaderCellModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "TableHeaderOutletContext",
    "members": [
      { "kind": "PropertySignature", "name": "_field", "type": "string" },
      { "kind": "PropertySignature", "name": "_i18nRoot", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "_options",
        "type": "TableOptions"
      },
      { "kind": "PropertySignature", "name": "_type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "TableLayout",
    "members": ["HORIZONTAL", "VERTICAL", "VERTICAL_STACKED"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "TableOptions",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "cells",
        "type": "{\n        [fieldKey: string]: TableFieldOptions;\n    }"
      },
      {
        "kind": "PropertySignature",
        "name": "dataComponent",
        "type": "Type<any>"
      },
      {
        "kind": "PropertySignature",
        "name": "headerComponent",
        "type": "Type<any>"
      },
      { "kind": "PropertySignature", "name": "layout", "type": "TableLayout" },
      {
        "kind": "PropertySignature",
        "name": "pagination",
        "type": "PaginationModel"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableRendererService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outletService",
            "type": "OutletService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OutletService:class",
            "shortType": "OutletService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentFactoryResolver:class",
            "shortType": "ComponentFactoryResolver",
            "importPath": "@angular/core"
          },
          {
            "name": "config",
            "type": "TableConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TableConfig:class",
            "shortType": "TableConfig",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "add",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "structure",
            "type": "TableStructure",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TableStructure:interface",
            "shortType": "TableStructure",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "componentFactoryResolver",
        "type": "ComponentFactoryResolver"
      },
      { "kind": "Property", "name": "config", "type": "TableConfig" },
      {
        "kind": "Method",
        "name": "getDataOutletContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "TableOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TableOptions:interface",
            "shortType": "TableOptions",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "i18nRoot",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "data",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "TableDataOutletContext"
      },
      {
        "kind": "Method",
        "name": "getDataOutletRef",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getDataRenderer",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "structure",
            "type": "TableStructure",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TableStructure:interface",
            "shortType": "TableStructure",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Type<any>"
      },
      {
        "kind": "Method",
        "name": "getHeaderOutletContext",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "options",
            "type": "TableOptions",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TableOptions:interface",
            "shortType": "TableOptions",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "i18nRoot",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "TableHeaderOutletContext"
      },
      {
        "kind": "Method",
        "name": "getHeaderOutletRef",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      },
      {
        "kind": "Method",
        "name": "getHeaderRenderer",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "structure",
            "type": "TableStructure",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TableStructure:interface",
            "shortType": "TableStructure",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "field",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Type<any>"
      },
      { "kind": "Property", "name": "outletRefs", "type": "Map<any, any>" },
      { "kind": "Property", "name": "outletService", "type": "OutletService" },
      {
        "kind": "Method",
        "name": "render",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "outletRef",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "renderer",
            "type": "Type<any>",
            "isOptional": false,
            "canonicalReference": "@angular/core!Type:interface",
            "shortType": "Type",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TableService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "config",
            "type": "TableConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!TableConfig:class",
            "shortType": "TableConfig",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Method",
        "name": "buildRandomStructure",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<TableStructure>"
      },
      {
        "kind": "Method",
        "name": "buildStructure",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "defaultStructure",
            "type": "ResponsiveTableConfiguration",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!ResponsiveTableConfiguration:interface",
            "shortType": "ResponsiveTableConfiguration",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<TableStructure>"
      },
      {
        "kind": "Method",
        "name": "buildStructureFromConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "defaultStructure",
            "type": "ResponsiveTableConfiguration",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!ResponsiveTableConfiguration:interface",
            "shortType": "ResponsiveTableConfiguration",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "Observable<TableStructure>"
      },
      {
        "kind": "Method",
        "name": "buildStructureFromData",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "data$",
            "type": "Observable<any>",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<TableStructure>"
      },
      { "kind": "Property", "name": "config", "type": "TableConfig" },
      {
        "kind": "Method",
        "name": "findRelevantBreakpoints",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "BREAKPOINT[]"
      },
      {
        "kind": "Method",
        "name": "getTableConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "breakpoint",
            "type": "BREAKPOINT",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BREAKPOINT:enum",
            "shortType": "BREAKPOINT",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "defaultStructure",
            "type": "ResponsiveTableConfiguration",
            "isOptional": true,
            "canonicalReference": "@spartacus/storefront!ResponsiveTableConfiguration:interface",
            "shortType": "ResponsiveTableConfiguration",
            "importPath": "@spartacus/storefront"
          }
        ],
        "returnType": "TableStructureConfiguration"
      },
      {
        "kind": "Method",
        "name": "hasTableConfig",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tableType",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "boolean"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "TableStructure",
    "members": [
      { "kind": "PropertySignature", "name": "type", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Interface",
    "name": "TableStructureConfiguration",
    "members": [
      { "kind": "PropertySignature", "name": "cells", "type": "string[]" },
      { "kind": "PropertySignature", "name": "options", "type": "TableOptions" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TabParagraphContainerComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentData",
            "type": "CmsComponentData<CMSTabParagraphContainer>",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsComponentData:class",
            "shortType": "CmsComponentData",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "breakpointService",
            "type": "BreakpointService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!BreakpointService:class",
            "shortType": "BreakpointService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "activeTabNum", "type": "number" },
      {
        "kind": "Property",
        "name": "breakpointService",
        "type": "BreakpointService"
      },
      {
        "kind": "Property",
        "name": "children",
        "type": "QueryList<ComponentWrapperDirective>"
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      {
        "kind": "Property",
        "name": "componentData",
        "type": "CmsComponentData<CMSTabParagraphContainer>"
      },
      {
        "kind": "Property",
        "name": "components$",
        "type": "Observable<any[]>"
      },
      {
        "kind": "Method",
        "name": "ngAfterViewInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "select",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tabNum",
            "type": "number",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "event",
            "type": "MouseEvent",
            "isOptional": true,
            "canonicalReference": "!MouseEvent:interface",
            "shortType": "MouseEvent",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "tabCompLoaded",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "componentRef",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "tabTitleParams",
        "type": "(Observable<any> | null)[]"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TabParagraphContainerModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ThemeModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ThemeService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "SiteContextConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SiteContextConfig:class",
            "shortType": "SiteContextConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "isOptional": false,
            "canonicalReference": "@angular/core!RendererFactory2:class",
            "shortType": "RendererFactory2",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "config", "type": "SiteContextConfig" },
      { "kind": "Property", "name": "existingTheme", "type": "string" },
      {
        "kind": "Method",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "rootComponent",
            "type": "ComponentRef<any>",
            "isOptional": false,
            "canonicalReference": "@angular/core!ComponentRef:class",
            "shortType": "ComponentRef",
            "importPath": "@angular/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "renderer", "type": "Renderer2" },
      {
        "kind": "Property",
        "name": "rendererFactory",
        "type": "RendererFactory2"
      },
      {
        "kind": "Property",
        "name": "rootComponent",
        "type": "ComponentRef<any>"
      },
      {
        "kind": "Method",
        "name": "setTheme",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "theme",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "titleScores",
    "type": "{\n    mr: number;\n    mrs: number;\n    miss: number;\n    ms: number;\n    dr: number;\n    rev: number;\n}"
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TrackingEventsComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activeModal",
            "type": "NgbActiveModal",
            "isOptional": false,
            "canonicalReference": "@ng-bootstrap/ng-bootstrap!NgbActiveModal:class",
            "shortType": "NgbActiveModal",
            "importPath": "@ng-bootstrap/ng-bootstrap"
          },
          {
            "name": "userOrderService",
            "type": "UserOrderService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!UserOrderService:class",
            "shortType": "UserOrderService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "activeModal", "type": "NgbActiveModal" },
      { "kind": "Property", "name": "consignmentCode", "type": "string" },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "shipDate", "type": "Date" },
      {
        "kind": "Property",
        "name": "tracking$",
        "type": "Observable<ConsignmentTracking>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "TrapFocus",
    "members": ["both", "end", "start"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "TypeAlias",
    "name": "TrapFocusType",
    "members": [
      "boolean | ",
      "TrapFocus.start",
      " | ",
      "TrapFocus.end",
      " | ",
      "TrapFocus.both"
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TruncatePipe",
    "members": [
      {
        "kind": "Method",
        "name": "transform",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "value",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "args",
            "type": "[number, string?]",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TruncateTextPopoverComponent",
    "members": [
      { "kind": "Property", "name": "charactersLimit", "type": "number" },
      { "kind": "Property", "name": "content", "type": "string" },
      { "kind": "Property", "name": "isTruncated", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "TruncateTextPopoverModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Variable",
    "name": "USE_STACKED_OUTLETS",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "UserComponentModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ViewComponent",
    "members": [
      { "kind": "Property", "name": "_hidden", "type": "any" },
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "splitService",
            "type": "SplitViewService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!SplitViewService:class",
            "shortType": "SplitViewService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ElementRef:class",
            "shortType": "ElementRef",
            "importPath": "@angular/core"
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "isOptional": false,
            "canonicalReference": "@angular/core!ChangeDetectorRef:class",
            "shortType": "ChangeDetectorRef",
            "importPath": "@angular/core"
          }
        ]
      },
      { "kind": "Property", "name": "cd", "type": "ChangeDetectorRef" },
      { "kind": "Property", "name": "disappeared", "type": "boolean" },
      { "kind": "Property", "name": "duration", "type": "number" },
      { "kind": "Property", "name": "elementRef", "type": "ElementRef" },
      {
        "kind": "Property",
        "name": "hiddenChange",
        "type": "EventEmitter<any>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "position", "type": "string" },
      {
        "kind": "Property",
        "name": "splitService",
        "type": "SplitViewService"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      {
        "kind": "Method",
        "name": "toggle",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "force",
            "type": "boolean",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "viewPosition", "type": "number" }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "ViewConfig",
    "members": [
      {
        "kind": "Property",
        "name": "view",
        "type": "{\n        defaultPageSize?: number;\n        infiniteScroll?: {\n            active?: boolean;\n            productLimit?: number;\n            showMoreButton?: boolean;\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Enum",
    "name": "ViewModes",
    "members": ["Grid", "List"]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "WishListComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "wishListService",
            "type": "WishListService",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!WishListService:class",
            "shortType": "WishListService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "loading$", "type": "Observable<boolean>" },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "wishList$", "type": "Observable<Cart>" },
      {
        "kind": "Property",
        "name": "wishListService",
        "type": "WishListService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "WishListItemComponent",
    "members": [
      { "kind": "Property", "name": "cartEntry", "type": "OrderEntry" },
      { "kind": "Property", "name": "isLoading", "type": "boolean" },
      {
        "kind": "Property",
        "name": "remove",
        "type": "EventEmitter<OrderEntry>"
      },
      {
        "kind": "Method",
        "name": "removeEntry",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "item",
            "type": "OrderEntry",
            "isOptional": false,
            "canonicalReference": "@spartacus/storefront!OrderEntry:interface",
            "shortType": "OrderEntry",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/storefront",
    "kind": "Class",
    "name": "WishListModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/tracking/personalization/core",
    "kind": "Interface",
    "name": "PersonalizationAction",
    "members": [
      { "kind": "PropertySignature", "name": "action_name", "type": "string" },
      { "kind": "PropertySignature", "name": "action_type", "type": "string" },
      {
        "kind": "PropertySignature",
        "name": "customization_code",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "customization_name",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "variation_code",
        "type": "string"
      },
      {
        "kind": "PropertySignature",
        "name": "variation_name",
        "type": "string"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/personalization/core",
    "kind": "Interface",
    "name": "PersonalizationContext",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "actions",
        "type": "PersonalizationAction[]"
      },
      { "kind": "PropertySignature", "name": "segments", "type": "string[]" }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/personalization/core",
    "kind": "Class",
    "name": "PersonalizationContextService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "PersonalizationConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_personalization_core!PersonalizationConfig:class",
            "shortType": "PersonalizationConfig",
            "importPath": "@spartacus/tracking/personalization/root"
          },
          {
            "name": "cmsService",
            "type": "CmsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_personalization_core!CmsService:class",
            "shortType": "CmsService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "cmsService", "type": "CmsService" },
      { "kind": "Property", "name": "config", "type": "PersonalizationConfig" },
      {
        "kind": "Method",
        "name": "getPersonalizationContext",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<PersonalizationContext | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/personalization/core",
    "kind": "Class",
    "name": "PersonalizationCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/tracking/personalization/root",
    "kind": "Function",
    "name": "defaultPersonalizationComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/tracking/personalization/root",
    "kind": "Variable",
    "name": "PERSONALIZATION_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/tracking/personalization/root",
    "kind": "Class",
    "name": "PersonalizationConfig",
    "members": [
      {
        "kind": "Property",
        "name": "personalization",
        "type": "{\n        enabled?: boolean;\n        httpHeaderName?: {\n            id: string;\n            timestamp: string;\n        };\n        context?: {\n            slotPosition: string;\n            componentId: string;\n        };\n    }"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/personalization/root",
    "kind": "Class",
    "name": "PersonalizationRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/tracking/personalization",
    "kind": "Class",
    "name": "PersonalizationModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/tracking/tms/aep",
    "kind": "Class",
    "name": "AepCollectorService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "scriptLoader",
            "type": "ScriptLoader",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_aep!ScriptLoader:class",
            "shortType": "ScriptLoader",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "AepCollectorConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_aep!AepCollectorConfig:interface",
            "shortType": "AepCollectorConfig",
            "importPath": ""
          },
          {
            "name": "windowObject",
            "type": "WindowObject",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_aep!WindowObject:interface",
            "shortType": "WindowObject",
            "importPath": "@spartacus/tracking/tms/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pushEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "TmsCollectorConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_aep!TmsCollectorConfig:interface",
            "shortType": "TmsCollectorConfig",
            "importPath": "@spartacus/tracking/tms/core"
          },
          {
            "name": "windowObject",
            "type": "WindowObject",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_aep!WindowObject:interface",
            "shortType": "WindowObject",
            "importPath": "@spartacus/tracking/tms/core"
          },
          {
            "name": "event",
            "type": "T | any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "scriptLoader", "type": "ScriptLoader" }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/aep",
    "kind": "Class",
    "name": "AepModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/tracking/tms/core",
    "kind": "Class",
    "name": "BaseTmsModule",
    "members": [
      {
        "kind": "Method",
        "name": "forRoot",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "ModuleWithProviders<BaseTmsModule>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/core",
    "kind": "Interface",
    "name": "TmsCollector",
    "members": [
      {
        "kind": "MethodSignature",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "TmsCollectorConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_core!TmsCollectorConfig:interface",
            "shortType": "TmsCollectorConfig",
            "importPath": "@spartacus/tracking/tms/core"
          },
          {
            "name": "windowObject",
            "type": "WindowObject",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_core!WindowObject:interface",
            "shortType": "WindowObject",
            "importPath": "@spartacus/tracking/tms/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "MethodSignature",
        "name": "map",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "event",
            "type": "T",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "T | object"
      },
      {
        "kind": "MethodSignature",
        "name": "pushEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "TmsCollectorConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_core!TmsCollectorConfig:interface",
            "shortType": "TmsCollectorConfig",
            "importPath": "@spartacus/tracking/tms/core"
          },
          {
            "name": "windowObject",
            "type": "WindowObject",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_core!WindowObject:interface",
            "shortType": "WindowObject",
            "importPath": "@spartacus/tracking/tms/core"
          },
          {
            "name": "event",
            "type": "T | any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/core",
    "kind": "Interface",
    "name": "TmsCollectorConfig",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "collector",
        "type": "Type<TmsCollector>"
      },
      {
        "kind": "PropertySignature",
        "name": "dataLayerProperty",
        "type": "string"
      },
      { "kind": "PropertySignature", "name": "debug", "type": "boolean" },
      {
        "kind": "PropertySignature",
        "name": "events",
        "type": "AbstractType<CxEvent>[]"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/core",
    "kind": "Interface",
    "name": "TmsCollectors",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "tms",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "TmsCollectorConfig | undefined"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/core",
    "kind": "Class",
    "name": "TmsConfig",
    "members": [
      { "kind": "Property", "name": "tagManager", "type": "TmsCollectors" }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/core",
    "kind": "Function",
    "name": "tmsFactory",
    "parameters": [
      {
        "name": "service",
        "type": "TmsService",
        "isOptional": false,
        "canonicalReference": "@spartacus/tracking_tms_core!TmsService:class",
        "shortType": "TmsService",
        "importPath": "@spartacus/tracking/tms/core"
      }
    ],
    "returnType": "() => void"
  },
  {
    "entryPoint": "@spartacus/tracking/tms/core",
    "kind": "Class",
    "name": "TmsService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "eventsService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "windowRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_core!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          },
          {
            "name": "tmsConfig",
            "type": "TmsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_core!TmsConfig:class",
            "shortType": "TmsConfig",
            "importPath": "@spartacus/tracking/tms/core"
          },
          {
            "name": "injector",
            "type": "Injector",
            "isOptional": false,
            "canonicalReference": "@angular/core!Injector:class",
            "shortType": "Injector",
            "importPath": "@angular/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "collect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "eventsService", "type": "EventService" },
      { "kind": "Property", "name": "injector", "type": "Injector" },
      {
        "kind": "Method",
        "name": "mapEvents",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "events",
            "type": "Observable<T>[]",
            "isOptional": false,
            "canonicalReference": "rxjs!Observable:class",
            "shortType": "Observable",
            "importPath": "rxjs"
          }
        ],
        "returnType": "Observable<T>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "subscription", "type": "Subscription" },
      { "kind": "Property", "name": "tmsConfig", "type": "TmsConfig" },
      { "kind": "Property", "name": "windowRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/core",
    "kind": "Interface",
    "name": "WindowObject",
    "members": [
      {
        "kind": "IndexSignature",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "prop",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "any"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/gtm",
    "kind": "Class",
    "name": "GtmCollectorService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_gtm!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "init",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "GtmCollectorConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_gtm!GtmCollectorConfig:interface",
            "shortType": "GtmCollectorConfig",
            "importPath": ""
          },
          {
            "name": "windowObject",
            "type": "WindowObject",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_gtm!WindowObject:interface",
            "shortType": "WindowObject",
            "importPath": "@spartacus/tracking/tms/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "pushEvent",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "config",
            "type": "TmsCollectorConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_gtm!TmsCollectorConfig:interface",
            "shortType": "TmsCollectorConfig",
            "importPath": "@spartacus/tracking/tms/core"
          },
          {
            "name": "windowObject",
            "type": "WindowObject",
            "isOptional": false,
            "canonicalReference": "@spartacus/tracking_tms_gtm!WindowObject:interface",
            "shortType": "WindowObject",
            "importPath": "@spartacus/tracking/tms/core"
          },
          {
            "name": "event",
            "type": "T | any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/tracking/tms/gtm",
    "kind": "Class",
    "name": "GtmModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/account/assets",
    "kind": "Variable",
    "name": "userAccountTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/user/account/assets",
    "kind": "Variable",
    "name": "userAccountTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/user/account/components",
    "kind": "Class",
    "name": "LoginComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "auth",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userAccount",
            "type": "UserAccountFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_components!UserAccountFacade:class",
            "shortType": "UserAccountFacade",
            "importPath": "@spartacus/user/account/root"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "user$",
        "type": "Observable<User | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/components",
    "kind": "Class",
    "name": "LoginFormComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "LoginFormComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_components!LoginFormComponentService:class",
            "shortType": "LoginFormComponentService",
            "importPath": "@spartacus/user/account/components"
          }
        ]
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "LoginFormComponentService"
      },
      { "kind": "Property", "name": "style", "type": "boolean" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/components",
    "kind": "Class",
    "name": "LoginFormComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "auth",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessage",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "winRef",
            "type": "WindowRef",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_components!WindowRef:class",
            "shortType": "WindowRef",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "auth", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "globalMessage",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "login",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "isLoggedIn",
            "type": "boolean",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      { "kind": "Property", "name": "winRef", "type": "WindowRef" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/components",
    "kind": "Class",
    "name": "LoginFormModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/account/components",
    "kind": "Class",
    "name": "LoginModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/account/components",
    "kind": "Class",
    "name": "LoginRegisterComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "activatedRoute",
            "type": "ActivatedRoute",
            "isOptional": false,
            "canonicalReference": "@angular/router!ActivatedRoute:class",
            "shortType": "ActivatedRoute",
            "importPath": "@angular/router"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "activatedRoute",
        "type": "ActivatedRoute"
      },
      { "kind": "Property", "name": "loginAsGuest", "type": "boolean" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/components",
    "kind": "Class",
    "name": "LoginRegisterModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/account/components",
    "kind": "Class",
    "name": "UserAccountComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/account/core",
    "kind": "Variable",
    "name": "USER_ACCOUNT_NORMALIZER",
    "type": "InjectionToken<Converter<any, User>>"
  },
  {
    "entryPoint": "@spartacus/user/account/core",
    "kind": "Variable",
    "name": "USER_ACCOUNT_SERIALIZER",
    "type": "InjectionToken<Converter<User, any>>"
  },
  {
    "entryPoint": "@spartacus/user/account/core",
    "kind": "Class",
    "name": "UserAccountAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<User>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/core",
    "kind": "Class",
    "name": "UserAccountConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "adapter",
            "type": "UserAccountAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_core!UserAccountAdapter:class",
            "shortType": "UserAccountAdapter",
            "importPath": "@spartacus/user/account/core"
          }
        ]
      },
      { "kind": "Property", "name": "adapter", "type": "UserAccountAdapter" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<User>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/core",
    "kind": "Class",
    "name": "UserAccountCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/account/core",
    "kind": "Class",
    "name": "UserAccountService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAccountConnector",
            "type": "UserAccountConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_core!UserAccountConnector:class",
            "shortType": "UserAccountConnector",
            "importPath": "@spartacus/user/account/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "query",
            "type": "QueryService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_core!QueryService:class",
            "shortType": "QueryService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<User | undefined>"
      },
      { "kind": "Property", "name": "query", "type": "QueryService" },
      {
        "kind": "Property",
        "name": "userAccountConnector",
        "type": "UserAccountConnector"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      { "kind": "Property", "name": "userQuery", "type": "Query<User>" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/occ",
    "kind": "Variable",
    "name": "defaultOccUserAccountConfig",
    "type": "OccConfig"
  },
  {
    "entryPoint": "@spartacus/user/account/occ",
    "kind": "Class",
    "name": "OccUserAccountAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_account_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "load",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/occ",
    "kind": "Interface",
    "name": "UserAccountOccEndpoints",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "user",
        "type": "string | OccEndpoint"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/occ",
    "kind": "Class",
    "name": "UserAccountOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/account/root",
    "kind": "Function",
    "name": "defaultUserAccountComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/user/account/root",
    "kind": "Variable",
    "name": "USER_ACCOUNT_CORE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/user/account/root",
    "kind": "Variable",
    "name": "USER_ACCOUNT_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/user/account/root",
    "kind": "Interface",
    "name": "User",
    "members": [
      { "kind": "PropertySignature", "name": "displayUid", "type": "string" },
      { "kind": "PropertySignature", "name": "firstName", "type": "string" },
      { "kind": "PropertySignature", "name": "lastName", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/root",
    "kind": "Class",
    "name": "UserAccountChangedEvent",
    "members": [{ "kind": "Property", "name": "type", "type": "" }]
  },
  {
    "entryPoint": "@spartacus/user/account/root",
    "kind": "Class",
    "name": "UserAccountEvent",
    "members": [{ "kind": "Property", "name": "user", "type": "User" }]
  },
  {
    "entryPoint": "@spartacus/user/account/root",
    "kind": "Class",
    "name": "UserAccountFacade",
    "members": [
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<User | undefined>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/account/root",
    "kind": "Class",
    "name": "UserAccountRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/account",
    "kind": "Class",
    "name": "UserAccountModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/assets",
    "kind": "Variable",
    "name": "userProfileTranslationChunksConfig",
    "type": "TranslationChunksConfig"
  },
  {
    "entryPoint": "@spartacus/user/profile/assets",
    "kind": "Variable",
    "name": "userProfileTranslations",
    "type": "TranslationResources"
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "CloseAccountComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          }
        ]
      },
      { "kind": "Property", "name": "modal", "type": "any" },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Method",
        "name": "openModal",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "CloseAccountModalComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "modalService",
            "type": "ModalService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!ModalService:class",
            "shortType": "ModalService",
            "importPath": "@spartacus/storefront"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "translationService",
            "type": "TranslationService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!TranslationService:class",
            "shortType": "TranslationService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userProfile",
            "type": "UserProfileFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserProfileFacade:class",
            "shortType": "UserProfileFacade",
            "importPath": "@spartacus/user/profile/root"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "closeAccount",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "dismissModal",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "reason",
            "type": "any",
            "isOptional": true,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      { "kind": "Property", "name": "iconTypes", "type": "typeof ICON_TYPE" },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Property",
        "name": "isLoggedIn$",
        "type": "Observable<boolean>"
      },
      { "kind": "Property", "name": "modalService", "type": "ModalService" },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "translationService",
        "type": "TranslationService"
      },
      { "kind": "Property", "name": "userProfile", "type": "UserProfileFacade" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "CloseAccountModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "ForgotPasswordComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "ForgotPasswordComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!ForgotPasswordComponentService:class",
            "shortType": "ForgotPasswordComponentService",
            "importPath": "@spartacus/user/profile/components"
          }
        ]
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "ForgotPasswordComponentService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "ForgotPasswordComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userPasswordService",
            "type": "UserPasswordFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserPasswordFacade:class",
            "shortType": "UserPasswordFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authConfigService",
            "type": "AuthConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AuthConfigService:class",
            "shortType": "AuthConfigService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessage",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authConfigService",
        "type": "AuthConfigService"
      },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "globalMessage",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_error",
            "type": "Error",
            "isOptional": false,
            "canonicalReference": "!Error:interface",
            "shortType": "Error",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "redirect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "requestEmail",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "userPasswordService",
        "type": "UserPasswordFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "ForgotPasswordModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "RegisterComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userRegister",
            "type": "UserRegisterFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserRegisterFacade:class",
            "shortType": "UserRegisterFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "fb",
            "type": "FormBuilder",
            "isOptional": false,
            "canonicalReference": "@angular/forms!FormBuilder:class",
            "shortType": "FormBuilder",
            "importPath": "@angular/forms"
          },
          {
            "name": "router",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "anonymousConsentsService",
            "type": "AnonymousConsentsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AnonymousConsentsService:class",
            "shortType": "AnonymousConsentsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "anonymousConsentsConfig",
            "type": "AnonymousConsentsConfig",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AnonymousConsentsConfig:class",
            "shortType": "AnonymousConsentsConfig",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authConfigService",
            "type": "AuthConfigService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AuthConfigService:class",
            "shortType": "AuthConfigService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "anonymousConsent$",
        "type": "Observable<{\n        consent: AnonymousConsent;\n        template: string;\n    }>"
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsConfig",
        "type": "AnonymousConsentsConfig"
      },
      {
        "kind": "Property",
        "name": "anonymousConsentsService",
        "type": "AnonymousConsentsService"
      },
      {
        "kind": "Property",
        "name": "authConfigService",
        "type": "AuthConfigService"
      },
      {
        "kind": "Method",
        "name": "collectDataFromRegisterForm",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "formData",
            "type": "any",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "UserSignUp"
      },
      { "kind": "Property", "name": "fb", "type": "FormBuilder" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Method",
        "name": "isConsentGiven",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "consent",
            "type": "AnonymousConsent",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AnonymousConsent:interface",
            "shortType": "AnonymousConsent",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "boolean"
      },
      {
        "kind": "Property",
        "name": "isLoading$",
        "type": "BehaviorSubject<boolean>"
      },
      {
        "kind": "Method",
        "name": "ngOnDestroy",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "ngOnInit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "registerForm", "type": "FormGroup" },
      {
        "kind": "Method",
        "name": "registerUser",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "router", "type": "RoutingService" },
      {
        "kind": "Method",
        "name": "submitForm",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "titles$", "type": "Observable<Title[]>" },
      {
        "kind": "Method",
        "name": "titleSelected",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "title",
            "type": "Title",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!Title:interface",
            "shortType": "Title",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "toggleAnonymousConsent",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userRegister",
        "type": "UserRegisterFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "RegisterComponentModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "ResetPasswordComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "ResetPasswordComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!ResetPasswordComponentService:class",
            "shortType": "ResetPasswordComponentService",
            "importPath": "@spartacus/user/profile/components"
          }
        ]
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "ResetPasswordComponentService"
      },
      { "kind": "Property", "name": "token$", "type": "Observable<string>" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "ResetPasswordComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userPasswordService",
            "type": "UserPasswordFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserPasswordFacade:class",
            "shortType": "UserPasswordFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessage",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "globalMessage",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "error",
            "type": "unknown",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "redirect",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "resetPassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "resetToken$",
        "type": "Observable<string>"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Property",
        "name": "userPasswordService",
        "type": "UserPasswordFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "ResetPasswordModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdateEmailComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "UpdateEmailComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UpdateEmailComponentService:class",
            "shortType": "UpdateEmailComponentService",
            "importPath": "@spartacus/user/profile/components"
          }
        ]
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "UpdateEmailComponentService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdateEmailComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userEmail",
            "type": "UserEmailFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserEmailFacade:class",
            "shortType": "UserEmailFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "authRedirectService",
            "type": "AuthRedirectService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!AuthRedirectService:class",
            "shortType": "AuthRedirectService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "authRedirectService",
        "type": "AuthRedirectService"
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_error",
            "type": "Error",
            "isOptional": false,
            "canonicalReference": "!Error:interface",
            "shortType": "Error",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "newUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "save",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "userEmail", "type": "UserEmailFacade" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdateEmailModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdatePasswordComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "UpdatePasswordComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UpdatePasswordComponentService:class",
            "shortType": "UpdatePasswordComponentService",
            "importPath": "@spartacus/user/profile/components"
          }
        ]
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "UpdatePasswordComponentService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdatePasswordComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userPasswordService",
            "type": "UserPasswordFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserPasswordFacade:class",
            "shortType": "UserPasswordFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "routingService",
            "type": "RoutingService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!RoutingService:class",
            "shortType": "RoutingService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "import(\"rxjs\").Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_error",
            "type": "Error",
            "isOptional": false,
            "canonicalReference": "!Error:interface",
            "shortType": "Error",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "routingService",
        "type": "RoutingService"
      },
      {
        "kind": "Method",
        "name": "updatePassword",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "userPasswordService",
        "type": "UserPasswordFacade"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdatePasswordModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdateProfileComponent",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "service",
            "type": "UpdateProfileComponentService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UpdateProfileComponentService:class",
            "shortType": "UpdateProfileComponentService",
            "importPath": "@spartacus/user/profile/components"
          }
        ]
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onSubmit",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      {
        "kind": "Property",
        "name": "service",
        "type": "UpdateProfileComponentService"
      },
      { "kind": "Property", "name": "titles$", "type": "Observable<Title[]>" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdateProfileComponentService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userProfile",
            "type": "UserProfileFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!UserProfileFacade:class",
            "shortType": "UserProfileFacade",
            "importPath": "@spartacus/user/profile/root"
          },
          {
            "name": "globalMessageService",
            "type": "GlobalMessageService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_components!GlobalMessageService:class",
            "shortType": "GlobalMessageService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Property",
        "name": "busy$",
        "type": "BehaviorSubject<boolean>"
      },
      { "kind": "Property", "name": "form", "type": "FormGroup" },
      {
        "kind": "Property",
        "name": "globalMessageService",
        "type": "GlobalMessageService"
      },
      {
        "kind": "Property",
        "name": "isUpdating$",
        "type": "Observable<boolean>"
      },
      {
        "kind": "Method",
        "name": "onError",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "_error",
            "type": "Error",
            "isOptional": false,
            "canonicalReference": "!Error:interface",
            "shortType": "Error",
            "importPath": ""
          }
        ],
        "returnType": "void"
      },
      {
        "kind": "Method",
        "name": "onSuccess",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "titles$", "type": "Observable<Title[]>" },
      {
        "kind": "Method",
        "name": "updateProfile",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "void"
      },
      { "kind": "Property", "name": "user$", "type": "Observable<User>" },
      { "kind": "Property", "name": "userProfile", "type": "UserProfileFacade" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UpdateProfileModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/components",
    "kind": "Class",
    "name": "UserProfileComponentsModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Variable",
    "name": "TITLE_NORMALIZER",
    "type": "InjectionToken<Converter<any, Title>>"
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Variable",
    "name": "USER_PROFILE_NORMALIZER",
    "type": "InjectionToken<Converter<User, any>>"
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Variable",
    "name": "USER_PROFILE_SERIALIZER",
    "type": "InjectionToken<Converter<User, any>>"
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Variable",
    "name": "USER_SERIALIZER",
    "type": "InjectionToken<Converter<User, any>>"
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Variable",
    "name": "USER_SIGN_UP_SERIALIZER",
    "type": "InjectionToken<Converter<UserSignUp, any>>"
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Class",
    "name": "UserEmailService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userProfileConnector",
            "type": "UserProfileConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserProfileConnector:class",
            "shortType": "UserProfileConnector",
            "importPath": "@spartacus/user/profile/core"
          },
          {
            "name": "command",
            "type": "CommandService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Property",
        "name": "updateCommand",
        "type": "Command<{\n        password: string;\n        newUid: string;\n    }>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Property",
        "name": "userProfileConnector",
        "type": "UserProfileConnector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Class",
    "name": "UserPasswordService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userProfileConnector",
            "type": "UserProfileConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserProfileConnector:class",
            "shortType": "UserProfileConnector",
            "importPath": "@spartacus/user/profile/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "command",
            "type": "CommandService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      {
        "kind": "Method",
        "name": "requestForgotPasswordEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "email",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Property",
        "name": "requestForgotPasswordEmailCommand",
        "type": "Command<{\n        email: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Property",
        "name": "resetCommand",
        "type": "Command<{\n        token: string;\n        password: string;\n    }>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "oldPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Property",
        "name": "updateCommand",
        "type": "Command<{\n        oldPassword: string;\n        newPassword: string;\n    }>"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Property",
        "name": "userProfileConnector",
        "type": "UserProfileConnector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Class",
    "name": "UserProfileAdapter",
    "members": [
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "loadTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "user",
            "type": "UserSignUp",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserSignUp:interface",
            "shortType": "UserSignUp",
            "importPath": "@spartacus/user/profile/root"
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "registerGuest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "guid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "requestForgotPasswordEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userEmailAddress",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "resetPassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "username",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "user",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!~User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "updateEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newUserId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "updatePassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Class",
    "name": "UserProfileConnector",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userProfileAdapter",
            "type": "UserProfileAdapter",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserProfileAdapter:class",
            "shortType": "UserProfileAdapter",
            "importPath": "@spartacus/user/profile/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "user",
            "type": "UserSignUp",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserSignUp:interface",
            "shortType": "UserSignUp",
            "importPath": "@spartacus/user/profile/root"
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "registerGuest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "guid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "remove",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "requestForgotPasswordEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userEmailAddress",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "resetPassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "username",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "user",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!~User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "updateEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newUserId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "updatePassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Property",
        "name": "userProfileAdapter",
        "type": "UserProfileAdapter"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Class",
    "name": "UserProfileCoreModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Class",
    "name": "UserProfileService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userAccountService",
            "type": "UserAccountFacade",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserAccountFacade:class",
            "shortType": "UserAccountFacade",
            "importPath": "@spartacus/user/account/root"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userProfileConnector",
            "type": "UserProfileConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserProfileConnector:class",
            "shortType": "UserProfileConnector",
            "importPath": "@spartacus/user/profile/core"
          },
          {
            "name": "eventService",
            "type": "EventService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!EventService:class",
            "shortType": "EventService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "userIdService",
            "type": "UserIdService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserIdService:class",
            "shortType": "UserIdService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "query",
            "type": "QueryService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!QueryService:class",
            "shortType": "QueryService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "command",
            "type": "CommandService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<unknown>"
      },
      { "kind": "Property", "name": "closeCommand", "type": "Command" },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      { "kind": "Property", "name": "eventService", "type": "EventService" },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<User | undefined>"
      },
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      { "kind": "Property", "name": "query", "type": "QueryService" },
      { "kind": "Property", "name": "titleQuery", "type": "Query<Title[]>" },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "details",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!~User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Property",
        "name": "updateCommand",
        "type": "Command<{\n        details: User;\n    }>"
      },
      {
        "kind": "Property",
        "name": "userAccountService",
        "type": "UserAccountFacade"
      },
      { "kind": "Property", "name": "userIdService", "type": "UserIdService" },
      {
        "kind": "Property",
        "name": "userProfileConnector",
        "type": "UserProfileConnector"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/core",
    "kind": "Class",
    "name": "UserRegisterService",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userProfile",
            "type": "UserProfileService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserProfileService:class",
            "shortType": "UserProfileService",
            "importPath": "@spartacus/user/profile/core"
          },
          {
            "name": "userConnector",
            "type": "UserProfileConnector",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserProfileConnector:class",
            "shortType": "UserProfileConnector",
            "importPath": "@spartacus/user/profile/core"
          },
          {
            "name": "authService",
            "type": "AuthService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!AuthService:class",
            "shortType": "AuthService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "command",
            "type": "CommandService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!CommandService:class",
            "shortType": "CommandService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "store",
            "type": "Store",
            "isOptional": false,
            "canonicalReference": "@ngrx/store!Store:class",
            "shortType": "Store",
            "importPath": "@ngrx/store"
          }
        ]
      },
      { "kind": "Property", "name": "authService", "type": "AuthService" },
      { "kind": "Property", "name": "command", "type": "CommandService" },
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "user",
            "type": "UserSignUp",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_core!UserSignUp:interface",
            "shortType": "UserSignUp",
            "importPath": "@spartacus/user/profile/root"
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Property",
        "name": "registerCommand",
        "type": "Command<{\n        user: UserSignUp;\n    }, User>"
      },
      {
        "kind": "Method",
        "name": "registerGuest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "guid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Property",
        "name": "registerGuestCommand",
        "type": "Command<{\n        guid: string;\n        password: string;\n    }, User>"
      },
      { "kind": "Property", "name": "store", "type": "Store" },
      {
        "kind": "Property",
        "name": "userConnector",
        "type": "UserProfileConnector"
      },
      {
        "kind": "Property",
        "name": "userProfile",
        "type": "UserProfileService"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/occ",
    "kind": "Variable",
    "name": "defaultOccUserProfileConfig",
    "type": "OccConfig"
  },
  {
    "entryPoint": "@spartacus/user/profile/occ",
    "kind": "Class",
    "name": "OccUserProfileAdapter",
    "members": [
      {
        "kind": "Constructor",
        "name": "constructor",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "http",
            "type": "HttpClient",
            "isOptional": false,
            "canonicalReference": "@angular/common/http!HttpClient:class",
            "shortType": "HttpClient",
            "importPath": "@angular/common/http"
          },
          {
            "name": "occEndpoints",
            "type": "OccEndpointsService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_occ!OccEndpointsService:class",
            "shortType": "OccEndpointsService",
            "importPath": "@spartacus/core"
          },
          {
            "name": "converter",
            "type": "ConverterService",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_occ!ConverterService:class",
            "shortType": "ConverterService",
            "importPath": "@spartacus/core"
          }
        ]
      },
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      { "kind": "Property", "name": "converter", "type": "ConverterService" },
      { "kind": "Property", "name": "http", "type": "HttpClient" },
      {
        "kind": "Method",
        "name": "loadTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Property",
        "name": "occEndpoints",
        "type": "OccEndpointsService"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "user",
            "type": "UserSignUp",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_occ!UserSignUp:interface",
            "shortType": "UserSignUp",
            "importPath": "@spartacus/user/profile/root"
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "registerGuest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "guid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "requestForgotPasswordEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userEmailAddress",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "resetPassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "user",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_occ!~User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "updateEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "currentPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newUserId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "updatePassword",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "oldPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/occ",
    "kind": "Interface",
    "name": "UserProfileOccEndpoints",
    "members": [
      {
        "kind": "PropertySignature",
        "name": "titles",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userCloseAccount",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userForgotPassword",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userRegister",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userResetPassword",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userUpdateLoginId",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userUpdatePassword",
        "type": "string | OccEndpoint"
      },
      {
        "kind": "PropertySignature",
        "name": "userUpdateProfile",
        "type": "string | OccEndpoint"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/occ",
    "kind": "Class",
    "name": "UserProfileOccModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Function",
    "name": "defaultUserProfileComponentsConfig",
    "parameters": [],
    "returnType": "CmsConfig"
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Interface",
    "name": "Title",
    "members": [
      { "kind": "PropertySignature", "name": "code", "type": "string" },
      { "kind": "PropertySignature", "name": "name", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Variable",
    "name": "USER_PROFILE_CORE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Variable",
    "name": "USER_PROFILE_FEATURE",
    "type": ""
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Class",
    "name": "UserEmailFacade",
    "members": [
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newUid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Class",
    "name": "UserPasswordFacade",
    "members": [
      {
        "kind": "Method",
        "name": "requestForgotPasswordEmail",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "email",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "reset",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "token",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "oldPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "newPassword",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<unknown>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Class",
    "name": "UserProfileFacade",
    "members": [
      {
        "kind": "Method",
        "name": "close",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<unknown>"
      },
      {
        "kind": "Method",
        "name": "get",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<User | undefined>"
      },
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Method",
        "name": "update",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "details",
            "type": "User",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_root!~User:interface",
            "shortType": "User",
            "importPath": "@spartacus/core"
          }
        ],
        "returnType": "Observable<unknown>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Class",
    "name": "UserProfileRootModule",
    "members": []
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Class",
    "name": "UserRegisterFacade",
    "members": [
      {
        "kind": "Method",
        "name": "getTitles",
        "overloadIndex": 1,
        "parameters": [],
        "returnType": "Observable<Title[]>"
      },
      {
        "kind": "Method",
        "name": "register",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "user",
            "type": "UserSignUp",
            "isOptional": false,
            "canonicalReference": "@spartacus/user_profile_root!UserSignUp:interface",
            "shortType": "UserSignUp",
            "importPath": "@spartacus/user/profile/root"
          }
        ],
        "returnType": "Observable<User>"
      },
      {
        "kind": "Method",
        "name": "registerGuest",
        "overloadIndex": 1,
        "parameters": [
          {
            "name": "guid",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          },
          {
            "name": "password",
            "type": "string",
            "isOptional": false,
            "canonicalReference": "",
            "shortType": "",
            "importPath": ""
          }
        ],
        "returnType": "Observable<User>"
      }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile/root",
    "kind": "Interface",
    "name": "UserSignUp",
    "members": [
      { "kind": "PropertySignature", "name": "firstName", "type": "string" },
      { "kind": "PropertySignature", "name": "lastName", "type": "string" },
      { "kind": "PropertySignature", "name": "password", "type": "string" },
      { "kind": "PropertySignature", "name": "titleCode", "type": "string" },
      { "kind": "PropertySignature", "name": "uid", "type": "string" }
    ]
  },
  {
    "entryPoint": "@spartacus/user/profile",
    "kind": "Class",
    "name": "UserProfileModule",
    "members": []
  }
]
