// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spartacus Cart schematics: ng-add Cart Base feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { CartBaseModule } from \\"@commerce-storefront-toolset/cart/base\\";
import { cartBaseTranslationChunksConfig, cartBaseTranslations } from \\"@commerce-storefront-toolset/cart/base/assets\\";
import { AddToCartModule } from \\"@commerce-storefront-toolset/cart/base/components/add-to-cart\\";
import { MiniCartModule } from \\"@commerce-storefront-toolset/cart/base/components/mini-cart\\";
import { CartBaseRootModule } from \\"@commerce-storefront-toolset/cart/base/root\\";
import { I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    CartBaseRootModule,
    CartBaseModule,
    MiniCartModule,
    AddToCartModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: cartBaseTranslations,
      chunks: cartBaseTranslationChunksConfig,
    },
  })]
})
export class CartBaseFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Base feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { cartBaseTranslationChunksConfig, cartBaseTranslations } from \\"@commerce-storefront-toolset/cart/base/assets\\";
import { ADD_TO_CART_FEATURE, CartBaseRootModule, CART_BASE_FEATURE, MINI_CART_FEATURE } from \\"@commerce-storefront-toolset/cart/base/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    CartBaseRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_BASE_FEATURE]: {
        module: () =>
          import('@commerce-storefront-toolset/cart/base').then((m) => m.CartBaseModule),
      },
    }
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [MINI_CART_FEATURE]: {
        module: () =>
          import('@commerce-storefront-toolset/cart/base/components/mini-cart').then((m) => m.MiniCartModule),
      },
    }
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [ADD_TO_CART_FEATURE]: {
        module: () =>
          import('@commerce-storefront-toolset/cart/base/components/add-to-cart').then((m) => m.AddToCartModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: cartBaseTranslations,
      chunks: cartBaseTranslationChunksConfig,
    },
  })
  ]
})
export class CartBaseFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Base feature general setup styling should create a proper scss file 1`] = `"@import \\"@commerce-storefront-toolset/cart\\";"`;

exports[`Spartacus Cart schematics: ng-add Cart Base feature general setup styling should update angular.json 1`] = `
"{
  \\"$schema\\": \\"./node_modules/@angular/cli/lib/config/schema.json\\",
  \\"version\\": 1,
  \\"newProjectRoot\\": \\"\\",
  \\"projects\\": {
    \\"schematics-test\\": {
      \\"projectType\\": \\"application\\",
      \\"schematics\\": {
        \\"@schematics/angular:component\\": {
          \\"style\\": \\"scss\\"
        },
        \\"@schematics/angular:application\\": {
          \\"strict\\": true
        }
      },
      \\"root\\": \\"\\",
      \\"sourceRoot\\": \\"src\\",
      \\"prefix\\": \\"app\\",
      \\"architect\\": {
        \\"build\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:browser\\",
          \\"options\\": {
            \\"outputPath\\": \\"dist/schematics-test\\",
            \\"index\\": \\"src/index.html\\",
            \\"main\\": \\"src/main.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.app.json\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          },
          \\"configurations\\": {
            \\"production\\": {
              \\"budgets\\": [
                {
                  \\"type\\": \\"initial\\",
                  \\"maximumWarning\\": \\"500kb\\",
                  \\"maximumError\\": \\"2.5mb\\"
                },
                {
                  \\"type\\": \\"anyComponentStyle\\",
                  \\"maximumWarning\\": \\"2kb\\",
                  \\"maximumError\\": \\"4kb\\"
                }
              ],
              \\"fileReplacements\\": [
                {
                  \\"replace\\": \\"src/environments/environment.ts\\",
                  \\"with\\": \\"src/environments/environment.prod.ts\\"
                }
              ],
              \\"outputHashing\\": \\"all\\"
            },
            \\"development\\": {
              \\"buildOptimizer\\": false,
              \\"optimization\\": false,
              \\"vendorChunk\\": true,
              \\"extractLicenses\\": false,
              \\"sourceMap\\": true,
              \\"namedChunks\\": true
            }
          },
          \\"defaultConfiguration\\": \\"production\\"
        },
        \\"serve\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:dev-server\\",
          \\"configurations\\": {
            \\"production\\": {
              \\"browserTarget\\": \\"schematics-test:build:production\\"
            },
            \\"development\\": {
              \\"browserTarget\\": \\"schematics-test:build:development\\"
            }
          },
          \\"defaultConfiguration\\": \\"development\\"
        },
        \\"extract-i18n\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:extract-i18n\\",
          \\"options\\": {
            \\"browserTarget\\": \\"schematics-test:build\\"
          }
        },
        \\"test\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:karma\\",
          \\"options\\": {
            \\"main\\": \\"src/test.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.spec.json\\",
            \\"karmaConfig\\": \\"karma.conf.js\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          }
        }
      }
    }
  },
  \\"defaultProject\\": \\"schematics-test\\"
}"
`;

exports[`Spartacus Cart schematics: ng-add Cart Import Export feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { ImportExportModule } from \\"@commerce-storefront-toolset/cart/import-export\\";
import { importExportTranslationChunksConfig, importExportTranslations } from \\"@commerce-storefront-toolset/cart/import-export/assets\\";
import { ImportExportRootModule } from \\"@commerce-storefront-toolset/cart/import-export/root\\";
import { I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    ImportExportRootModule,
    ImportExportModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: importExportTranslations,
      chunks: importExportTranslationChunksConfig,
    },
  })]
})
export class CartImportExportFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Import Export feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { importExportTranslationChunksConfig, importExportTranslations } from \\"@commerce-storefront-toolset/cart/import-export/assets\\";
import { CART_IMPORT_EXPORT_FEATURE, ImportExportRootModule } from \\"@commerce-storefront-toolset/cart/import-export/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    ImportExportRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_IMPORT_EXPORT_FEATURE]: {
        module: () =>
          import('@commerce-storefront-toolset/cart/import-export').then((m) => m.ImportExportModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: importExportTranslations,
      chunks: importExportTranslationChunksConfig,
    },
  })
  ]
})
export class CartImportExportFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Cart Import Export feature general setup styling should create a proper scss file 1`] = `"@import \\"@commerce-storefront-toolset/cart\\";"`;

exports[`Spartacus Cart schematics: ng-add Cart Import Export feature general setup styling should update angular.json 1`] = `
"{
  \\"$schema\\": \\"./node_modules/@angular/cli/lib/config/schema.json\\",
  \\"version\\": 1,
  \\"newProjectRoot\\": \\"\\",
  \\"projects\\": {
    \\"schematics-test\\": {
      \\"projectType\\": \\"application\\",
      \\"schematics\\": {
        \\"@schematics/angular:component\\": {
          \\"style\\": \\"scss\\"
        },
        \\"@schematics/angular:application\\": {
          \\"strict\\": true
        }
      },
      \\"root\\": \\"\\",
      \\"sourceRoot\\": \\"src\\",
      \\"prefix\\": \\"app\\",
      \\"architect\\": {
        \\"build\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:browser\\",
          \\"options\\": {
            \\"outputPath\\": \\"dist/schematics-test\\",
            \\"index\\": \\"src/index.html\\",
            \\"main\\": \\"src/main.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.app.json\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          },
          \\"configurations\\": {
            \\"production\\": {
              \\"budgets\\": [
                {
                  \\"type\\": \\"initial\\",
                  \\"maximumWarning\\": \\"500kb\\",
                  \\"maximumError\\": \\"2.5mb\\"
                },
                {
                  \\"type\\": \\"anyComponentStyle\\",
                  \\"maximumWarning\\": \\"2kb\\",
                  \\"maximumError\\": \\"4kb\\"
                }
              ],
              \\"fileReplacements\\": [
                {
                  \\"replace\\": \\"src/environments/environment.ts\\",
                  \\"with\\": \\"src/environments/environment.prod.ts\\"
                }
              ],
              \\"outputHashing\\": \\"all\\"
            },
            \\"development\\": {
              \\"buildOptimizer\\": false,
              \\"optimization\\": false,
              \\"vendorChunk\\": true,
              \\"extractLicenses\\": false,
              \\"sourceMap\\": true,
              \\"namedChunks\\": true
            }
          },
          \\"defaultConfiguration\\": \\"production\\"
        },
        \\"serve\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:dev-server\\",
          \\"configurations\\": {
            \\"production\\": {
              \\"browserTarget\\": \\"schematics-test:build:production\\"
            },
            \\"development\\": {
              \\"browserTarget\\": \\"schematics-test:build:development\\"
            }
          },
          \\"defaultConfiguration\\": \\"development\\"
        },
        \\"extract-i18n\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:extract-i18n\\",
          \\"options\\": {
            \\"browserTarget\\": \\"schematics-test:build\\"
          }
        },
        \\"test\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:karma\\",
          \\"options\\": {
            \\"main\\": \\"src/test.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.spec.json\\",
            \\"karmaConfig\\": \\"karma.conf.js\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          }
        }
      }
    }
  },
  \\"defaultProject\\": \\"schematics-test\\"
}"
`;

exports[`Spartacus Cart schematics: ng-add Quick Order feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { QuickOrderModule } from \\"@commerce-storefront-toolset/cart/quick-order\\";
import { quickOrderTranslationChunksConfig, quickOrderTranslations } from \\"@commerce-storefront-toolset/cart/quick-order/assets\\";
import { QuickOrderRootModule } from \\"@commerce-storefront-toolset/cart/quick-order/root\\";
import { I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    QuickOrderRootModule,
    QuickOrderModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: quickOrderTranslations,
      chunks: quickOrderTranslationChunksConfig,
    },
  })]
})
export class CartQuickOrderFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Quick Order feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { quickOrderTranslationChunksConfig, quickOrderTranslations } from \\"@commerce-storefront-toolset/cart/quick-order/assets\\";
import { CART_QUICK_ORDER_FEATURE, QuickOrderRootModule } from \\"@commerce-storefront-toolset/cart/quick-order/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    QuickOrderRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_QUICK_ORDER_FEATURE]: {
        module: () =>
          import('@commerce-storefront-toolset/cart/quick-order').then((m) => m.QuickOrderModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: quickOrderTranslations,
      chunks: quickOrderTranslationChunksConfig,
    },
  })
  ]
})
export class CartQuickOrderFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Quick Order feature general setup styling should create a proper scss file 1`] = `"@import \\"@commerce-storefront-toolset/cart\\";"`;

exports[`Spartacus Cart schematics: ng-add Quick Order feature general setup styling should update angular.json 1`] = `
"{
  \\"$schema\\": \\"./node_modules/@angular/cli/lib/config/schema.json\\",
  \\"version\\": 1,
  \\"newProjectRoot\\": \\"\\",
  \\"projects\\": {
    \\"schematics-test\\": {
      \\"projectType\\": \\"application\\",
      \\"schematics\\": {
        \\"@schematics/angular:component\\": {
          \\"style\\": \\"scss\\"
        },
        \\"@schematics/angular:application\\": {
          \\"strict\\": true
        }
      },
      \\"root\\": \\"\\",
      \\"sourceRoot\\": \\"src\\",
      \\"prefix\\": \\"app\\",
      \\"architect\\": {
        \\"build\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:browser\\",
          \\"options\\": {
            \\"outputPath\\": \\"dist/schematics-test\\",
            \\"index\\": \\"src/index.html\\",
            \\"main\\": \\"src/main.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.app.json\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          },
          \\"configurations\\": {
            \\"production\\": {
              \\"budgets\\": [
                {
                  \\"type\\": \\"initial\\",
                  \\"maximumWarning\\": \\"500kb\\",
                  \\"maximumError\\": \\"2.5mb\\"
                },
                {
                  \\"type\\": \\"anyComponentStyle\\",
                  \\"maximumWarning\\": \\"2kb\\",
                  \\"maximumError\\": \\"4kb\\"
                }
              ],
              \\"fileReplacements\\": [
                {
                  \\"replace\\": \\"src/environments/environment.ts\\",
                  \\"with\\": \\"src/environments/environment.prod.ts\\"
                }
              ],
              \\"outputHashing\\": \\"all\\"
            },
            \\"development\\": {
              \\"buildOptimizer\\": false,
              \\"optimization\\": false,
              \\"vendorChunk\\": true,
              \\"extractLicenses\\": false,
              \\"sourceMap\\": true,
              \\"namedChunks\\": true
            }
          },
          \\"defaultConfiguration\\": \\"production\\"
        },
        \\"serve\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:dev-server\\",
          \\"configurations\\": {
            \\"production\\": {
              \\"browserTarget\\": \\"schematics-test:build:production\\"
            },
            \\"development\\": {
              \\"browserTarget\\": \\"schematics-test:build:development\\"
            }
          },
          \\"defaultConfiguration\\": \\"development\\"
        },
        \\"extract-i18n\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:extract-i18n\\",
          \\"options\\": {
            \\"browserTarget\\": \\"schematics-test:build\\"
          }
        },
        \\"test\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:karma\\",
          \\"options\\": {
            \\"main\\": \\"src/test.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.spec.json\\",
            \\"karmaConfig\\": \\"karma.conf.js\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          }
        }
      }
    }
  },
  \\"defaultProject\\": \\"schematics-test\\"
}"
`;

exports[`Spartacus Cart schematics: ng-add Saved Cart feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { SavedCartModule } from \\"@commerce-storefront-toolset/cart/saved-cart\\";
import { savedCartTranslationChunksConfig, savedCartTranslations } from \\"@commerce-storefront-toolset/cart/saved-cart/assets\\";
import { SavedCartRootModule } from \\"@commerce-storefront-toolset/cart/saved-cart/root\\";
import { I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    SavedCartRootModule,
    SavedCartModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: savedCartTranslations,
      chunks: savedCartTranslationChunksConfig,
    },
  })]
})
export class CartSavedCartFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Saved Cart feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { savedCartTranslationChunksConfig, savedCartTranslations } from \\"@commerce-storefront-toolset/cart/saved-cart/assets\\";
import { CART_SAVED_CART_FEATURE, SavedCartRootModule } from \\"@commerce-storefront-toolset/cart/saved-cart/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    SavedCartRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_SAVED_CART_FEATURE]: {
        module: () =>
          import('@commerce-storefront-toolset/cart/saved-cart').then((m) => m.SavedCartModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: savedCartTranslations,
      chunks: savedCartTranslationChunksConfig,
    },
  })
  ]
})
export class CartSavedCartFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Saved Cart feature general setup styling should create a proper scss file 1`] = `"@import \\"@commerce-storefront-toolset/cart\\";"`;

exports[`Spartacus Cart schematics: ng-add Saved Cart feature general setup styling should update angular.json 1`] = `
"{
  \\"$schema\\": \\"./node_modules/@angular/cli/lib/config/schema.json\\",
  \\"version\\": 1,
  \\"newProjectRoot\\": \\"\\",
  \\"projects\\": {
    \\"schematics-test\\": {
      \\"projectType\\": \\"application\\",
      \\"schematics\\": {
        \\"@schematics/angular:component\\": {
          \\"style\\": \\"scss\\"
        },
        \\"@schematics/angular:application\\": {
          \\"strict\\": true
        }
      },
      \\"root\\": \\"\\",
      \\"sourceRoot\\": \\"src\\",
      \\"prefix\\": \\"app\\",
      \\"architect\\": {
        \\"build\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:browser\\",
          \\"options\\": {
            \\"outputPath\\": \\"dist/schematics-test\\",
            \\"index\\": \\"src/index.html\\",
            \\"main\\": \\"src/main.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.app.json\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          },
          \\"configurations\\": {
            \\"production\\": {
              \\"budgets\\": [
                {
                  \\"type\\": \\"initial\\",
                  \\"maximumWarning\\": \\"500kb\\",
                  \\"maximumError\\": \\"2.5mb\\"
                },
                {
                  \\"type\\": \\"anyComponentStyle\\",
                  \\"maximumWarning\\": \\"2kb\\",
                  \\"maximumError\\": \\"4kb\\"
                }
              ],
              \\"fileReplacements\\": [
                {
                  \\"replace\\": \\"src/environments/environment.ts\\",
                  \\"with\\": \\"src/environments/environment.prod.ts\\"
                }
              ],
              \\"outputHashing\\": \\"all\\"
            },
            \\"development\\": {
              \\"buildOptimizer\\": false,
              \\"optimization\\": false,
              \\"vendorChunk\\": true,
              \\"extractLicenses\\": false,
              \\"sourceMap\\": true,
              \\"namedChunks\\": true
            }
          },
          \\"defaultConfiguration\\": \\"production\\"
        },
        \\"serve\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:dev-server\\",
          \\"configurations\\": {
            \\"production\\": {
              \\"browserTarget\\": \\"schematics-test:build:production\\"
            },
            \\"development\\": {
              \\"browserTarget\\": \\"schematics-test:build:development\\"
            }
          },
          \\"defaultConfiguration\\": \\"development\\"
        },
        \\"extract-i18n\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:extract-i18n\\",
          \\"options\\": {
            \\"browserTarget\\": \\"schematics-test:build\\"
          }
        },
        \\"test\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:karma\\",
          \\"options\\": {
            \\"main\\": \\"src/test.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.spec.json\\",
            \\"karmaConfig\\": \\"karma.conf.js\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          }
        }
      }
    }
  },
  \\"defaultProject\\": \\"schematics-test\\"
}"
`;

exports[`Spartacus Cart schematics: ng-add Wish List feature eager loading should import appropriate modules 1`] = `
"import { NgModule } from '@angular/core';
import { WishListModule } from \\"@commerce-storefront-toolset/cart/wish-list\\";
import { wishListTranslationChunksConfig, wishListTranslations } from \\"@commerce-storefront-toolset/cart/wish-list/assets\\";
import { AddToWishListModule } from \\"@commerce-storefront-toolset/cart/wish-list/components/add-to-wishlist\\";
import { WishListRootModule } from \\"@commerce-storefront-toolset/cart/wish-list/root\\";
import { I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    WishListRootModule,
    WishListModule,
    AddToWishListModule
  ],
  providers: [provideConfig(<I18nConfig>{
    i18n: {
      resources: wishListTranslations,
      chunks: wishListTranslationChunksConfig,
    },
  })]
})
export class WishListFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Wish List feature general setup should add the feature using the lazy loading syntax 1`] = `
"import { NgModule } from '@angular/core';
import { wishListTranslationChunksConfig, wishListTranslations } from \\"@commerce-storefront-toolset/cart/wish-list/assets\\";
import { ADD_TO_WISHLIST_FEATURE, CART_WISH_LIST_FEATURE, WishListRootModule } from \\"@commerce-storefront-toolset/cart/wish-list/root\\";
import { CmsConfig, I18nConfig, provideConfig } from \\"@commerce-storefront-toolset/core\\";

@NgModule({
  declarations: [],
  imports: [
    WishListRootModule
  ],
  providers: [provideConfig(<CmsConfig>{
    featureModules: {
      [CART_WISH_LIST_FEATURE]: {
        module: () =>
          import('@commerce-storefront-toolset/cart/wish-list').then((m) => m.WishListModule),
      },
    }
  }),
  provideConfig(<CmsConfig>{
    featureModules: {
      [ADD_TO_WISHLIST_FEATURE]: {
        module: () =>
          import('@commerce-storefront-toolset/cart/wish-list/components/add-to-wishlist').then((m) => m.AddToWishListModule),
      },
    }
  }),
  provideConfig(<I18nConfig>{
    i18n: {
      resources: wishListTranslations,
      chunks: wishListTranslationChunksConfig,
    },
  })
  ]
})
export class WishListFeatureModule { }
"
`;

exports[`Spartacus Cart schematics: ng-add Wish List feature general setup styling should create a proper scss file 1`] = `"@import \\"@commerce-storefront-toolset/cart\\";"`;

exports[`Spartacus Cart schematics: ng-add Wish List feature general setup styling should update angular.json 1`] = `
"{
  \\"$schema\\": \\"./node_modules/@angular/cli/lib/config/schema.json\\",
  \\"version\\": 1,
  \\"newProjectRoot\\": \\"\\",
  \\"projects\\": {
    \\"schematics-test\\": {
      \\"projectType\\": \\"application\\",
      \\"schematics\\": {
        \\"@schematics/angular:component\\": {
          \\"style\\": \\"scss\\"
        },
        \\"@schematics/angular:application\\": {
          \\"strict\\": true
        }
      },
      \\"root\\": \\"\\",
      \\"sourceRoot\\": \\"src\\",
      \\"prefix\\": \\"app\\",
      \\"architect\\": {
        \\"build\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:browser\\",
          \\"options\\": {
            \\"outputPath\\": \\"dist/schematics-test\\",
            \\"index\\": \\"src/index.html\\",
            \\"main\\": \\"src/main.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.app.json\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          },
          \\"configurations\\": {
            \\"production\\": {
              \\"budgets\\": [
                {
                  \\"type\\": \\"initial\\",
                  \\"maximumWarning\\": \\"500kb\\",
                  \\"maximumError\\": \\"2.5mb\\"
                },
                {
                  \\"type\\": \\"anyComponentStyle\\",
                  \\"maximumWarning\\": \\"2kb\\",
                  \\"maximumError\\": \\"4kb\\"
                }
              ],
              \\"fileReplacements\\": [
                {
                  \\"replace\\": \\"src/environments/environment.ts\\",
                  \\"with\\": \\"src/environments/environment.prod.ts\\"
                }
              ],
              \\"outputHashing\\": \\"all\\"
            },
            \\"development\\": {
              \\"buildOptimizer\\": false,
              \\"optimization\\": false,
              \\"vendorChunk\\": true,
              \\"extractLicenses\\": false,
              \\"sourceMap\\": true,
              \\"namedChunks\\": true
            }
          },
          \\"defaultConfiguration\\": \\"production\\"
        },
        \\"serve\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:dev-server\\",
          \\"configurations\\": {
            \\"production\\": {
              \\"browserTarget\\": \\"schematics-test:build:production\\"
            },
            \\"development\\": {
              \\"browserTarget\\": \\"schematics-test:build:development\\"
            }
          },
          \\"defaultConfiguration\\": \\"development\\"
        },
        \\"extract-i18n\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:extract-i18n\\",
          \\"options\\": {
            \\"browserTarget\\": \\"schematics-test:build\\"
          }
        },
        \\"test\\": {
          \\"builder\\": \\"@angular-devkit/build-angular:karma\\",
          \\"options\\": {
            \\"main\\": \\"src/test.ts\\",
            \\"polyfills\\": \\"src/polyfills.ts\\",
            \\"tsConfig\\": \\"tsconfig.spec.json\\",
            \\"karmaConfig\\": \\"karma.conf.js\\",
            \\"inlineStyleLanguage\\": \\"scss\\",
            \\"assets\\": [
              \\"src/favicon.ico\\",
              \\"src/assets\\"
            ],
            \\"styles\\": [
              \\"src/styles.scss\\",
              \\"src/styles/spartacus/cart.scss\\"
            ],
            \\"scripts\\": [],
            \\"stylePreprocessorOptions\\": {
              \\"includePaths\\": [
                \\"node_modules/\\"
              ]
            }
          }
        }
      }
    }
  },
  \\"defaultProject\\": \\"schematics-test\\"
}"
`;
