@import '../../../theme';

%cx-searchbox {
  .hidden {
    display: none;
  }

  @include media-breakpoint-up(md) {
    // we position the parent relative to ensure the absolute childs
    // can be aligned to the left of this parent
    position: relative;
  }

  z-index: 10;
  display: block;

  > * {
    z-index: 20;
    @include media-breakpoint-up(md) {
      background-color: var(--cx-g-color-secondary);
      position: relative;
    }
  }

  &:not(.open) {
    .results {
      display: none;
    }
    @include media-breakpoint-down(sm) {
      .reset {
        opacity: 0;
      }
    }
  }

  &:before {
    transition: background-color 0.4s;
    content: '';
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 0;
    z-index: 10;

    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    transition: opacity 0.4s;
    top: 143px;
    @include media-breakpoint-down(md) {
      top: 57px;
    }
  }
  &.open:before {
    height: 100%;
    opacity: 1;
  }

  // hide the input on mobile when there's no interaction with searchbox
  &:not(.open) {
    input {
      @include media-breakpoint-down(sm) {
        opacity: 0;
      }
    }
  }

  a,
  .message {
    padding: 6px 16px;
    color: currentColor;
    user-select: none;
  }

  label {
    display: flex;
    margin: 0;
    padding: 6px;

    @include media-breakpoint-up(md) {
      input {
        width: 25vw;
      }
      // hide search icon when the input is dirty
      &.dirty cx-icon.search {
        display: none;
      }
    }

    input {
      background: none;
      border: none;
      outline: none;
      padding-left: 10px;

      @include media-breakpoint-down(sm) {
        position: absolute;
        left: 0;
        top: 57px;
        width: 100%;
        background-color: var(--cx-g-color-secondary);
        padding: 6px;
        height: 48px;
      }

      flex-basis: 100%;
      height: 35px;
      color: currentColor;
      z-index: 20;

      @include placeholder {
        color: currentColor;
      }
    }

    // hide reset icon when the input is empty
    &:not(.dirty) cx-icon.reset {
      display: none;
    }

    cx-icon {
      color: currentColor;
      flex-basis: 48px;
      text-align: center;
      cursor: pointer;
      &.reset {
        @include media-breakpoint-down(sm) {
          position: absolute;
          right: 65px;
          z-index: 20;
          right: 20px;
          margin-top: 52px;
        }
      }
    }
  }

  .results {
    position: absolute;
    left: 0;
    width: 100%;
    color: #000;
    background-color: var(--cx-g-color-background);
    font-size: var(--cx-g-font-small, 1rem);

    @include media-breakpoint-down(sm) {
      top: 104px;
      z-index: 10;
    }

    a {
      text-decoration: none;
      cursor: pointer;
      &:hover {
        background: var(--cx-g-color-light);
      }
    }
    .suggestions {
      display: flex;
      flex-wrap: wrap;
      a {
        flex: 100%;
        line-height: 2rem;
      }
    }
    .products {
      a {
        display: grid;
        grid-template-columns: 50px 1fr;
        grid-column-gap: 16px;

        border-top: solid 1px var(--cx-g-color-light);

        cx-media {
          grid-row: 1 / 3;
        }
        h4.name {
          text-overflow: ellipsis;
          font-size: inherit;

          /* Required for text-overflow to do anything */
          white-space: nowrap;
          overflow: hidden;
          .search-results-highlight {
            font-weight: bold;
          }
        }
      }
    }
  }
}
