on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - develop
      - develop-*
      - release-*
      - epic/**
  workflow_dispatch:
    # empty as it is used only to manually trigger the workflow
  
env:
  NODE_VERSION: '20'
  NX_BASE: origin/${{ github.event.pull_request.base.ref }}
  NX_HEAD: origin/${{ github.event.pull_request.head.ref }}

concurrency: 
  group: ci-continuous-integration-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: Continuous Integration
jobs:
  ssr_tests:
    name: SSR Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: | 
            node_modules
          key: nodemodules-${{ github.event.pull_request.base.sha }}
          restore-keys: nodemodules-${{ github.event.pull_request.base.sha }}
      - name: Package installation
        run: npm ci
      - name: Build SSR Server
        run: npm run build:libs && npm run build && npm run build:ssr:local-http-backend
      - name: Run SSR tests
        run: npm run test:ssr:ci --verbose
  ci_result:
    needs: [ssr_tests]
    name: CI - Result
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Aggregate Required Job Results
        run: |
            exit 1
        if: |
          needs.unit_tests.result == 'failure' || needs.unit_tests.result == 'cancelled' || 
          needs.sonarqube_scan.result == 'failure' || needs.sonarqube_scan.result == 'cancelled' ||
          needs.linting.result == 'failure' || needs.linting.result == 'cancelled'
